/**
 * Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

const EPSILON=1e-6;let ARRAY_TYPE="undefined"!=typeof Float32Array?Float32Array:Array;const RANDOM=Math.random;function setMatrixArrayType(t){ARRAY_TYPE=t}const degree=Math.PI/180;function toRadian(t){return t*degree}function equals(t,a){return Math.abs(t-a)<=EPSILON*Math.max(1,Math.abs(t),Math.abs(a))}var common=Object.freeze({EPSILON:EPSILON,get ARRAY_TYPE(){return ARRAY_TYPE},RANDOM:RANDOM,setMatrixArrayType:setMatrixArrayType,toRadian:toRadian,equals:equals});function create(){let t=new ARRAY_TYPE(4);return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t}function clone(t){let a=new ARRAY_TYPE(4);return a[0]=t[0],a[1]=t[1],a[2]=t[2],a[3]=t[3],a}function copy(t,a){return t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t}function identity(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t}function fromValues(t,a,n,r){let e=new ARRAY_TYPE(4);return e[0]=t,e[1]=a,e[2]=n,e[3]=r,e}function set(t,a,n,r,e){return t[0]=a,t[1]=n,t[2]=r,t[3]=e,t}function transpose(t,a){if(t===a){let n=a[1];t[1]=a[2],t[2]=n}else t[0]=a[0],t[1]=a[2],t[2]=a[1],t[3]=a[3];return t}function invert(t,a){let n=a[0],r=a[1],e=a[2],o=a[3],u=n*o-e*r;return u?(u=1/u,t[0]=o*u,t[1]=-r*u,t[2]=-e*u,t[3]=n*u,t):null}function adjoint(t,a){let n=a[0];return t[0]=a[3],t[1]=-a[1],t[2]=-a[2],t[3]=n,t}function determinant(t){return t[0]*t[3]-t[2]*t[1]}function multiply(t,a,n){let r=a[0],e=a[1],o=a[2],u=a[3],s=n[0],i=n[1],l=n[2],c=n[3];return t[0]=r*s+o*i,t[1]=e*s+u*i,t[2]=r*l+o*c,t[3]=e*l+u*c,t}function rotate(t,a,n){let r=a[0],e=a[1],o=a[2],u=a[3],s=Math.sin(n),i=Math.cos(n);return t[0]=r*i+o*s,t[1]=e*i+u*s,t[2]=r*-s+o*i,t[3]=e*-s+u*i,t}function scale(t,a,n){let r=a[0],e=a[1],o=a[2],u=a[3],s=n[0],i=n[1];return t[0]=r*s,t[1]=e*s,t[2]=o*i,t[3]=u*i,t}function fromRotation(t,a){let n=Math.sin(a),r=Math.cos(a);return t[0]=r,t[1]=n,t[2]=-n,t[3]=r,t}function fromScaling(t,a){return t[0]=a[0],t[1]=0,t[2]=0,t[3]=a[1],t}function str(t){return"mat2("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"}function frob(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2))}function LDU(t,a,n,r){return t[2]=r[2]/r[0],n[0]=r[0],n[1]=r[1],n[3]=r[3]-t[2]*n[1],[t,a,n]}function add(t,a,n){return t[0]=a[0]+n[0],t[1]=a[1]+n[1],t[2]=a[2]+n[2],t[3]=a[3]+n[3],t}function subtract(t,a,n){return t[0]=a[0]-n[0],t[1]=a[1]-n[1],t[2]=a[2]-n[2],t[3]=a[3]-n[3],t}function exactEquals(t,a){return t[0]===a[0]&&t[1]===a[1]&&t[2]===a[2]&&t[3]===a[3]}function equals$1(t,a){let n=t[0],r=t[1],e=t[2],o=t[3],u=a[0],s=a[1],i=a[2],l=a[3];return Math.abs(n-u)<=EPSILON*Math.max(1,Math.abs(n),Math.abs(u))&&Math.abs(r-s)<=EPSILON*Math.max(1,Math.abs(r),Math.abs(s))&&Math.abs(e-i)<=EPSILON*Math.max(1,Math.abs(e),Math.abs(i))&&Math.abs(o-l)<=EPSILON*Math.max(1,Math.abs(o),Math.abs(l))}function multiplyScalar(t,a,n){return t[0]=a[0]*n,t[1]=a[1]*n,t[2]=a[2]*n,t[3]=a[3]*n,t}function multiplyScalarAndAdd(t,a,n,r){return t[0]=a[0]+n[0]*r,t[1]=a[1]+n[1]*r,t[2]=a[2]+n[2]*r,t[3]=a[3]+n[3]*r,t}const mul=multiply,sub=subtract;var mat2=Object.freeze({create:create,clone:clone,copy:copy,identity:identity,fromValues:fromValues,set:set,transpose:transpose,invert:invert,adjoint:adjoint,determinant:determinant,multiply:multiply,rotate:rotate,scale:scale,fromRotation:fromRotation,fromScaling:fromScaling,str:str,frob:frob,LDU:LDU,add:add,subtract:subtract,exactEquals:exactEquals,equals:equals$1,multiplyScalar:multiplyScalar,multiplyScalarAndAdd:multiplyScalarAndAdd,mul:mul,sub:sub});function create$1(){let t=new ARRAY_TYPE(6);return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t}function clone$1(t){let a=new ARRAY_TYPE(6);return a[0]=t[0],a[1]=t[1],a[2]=t[2],a[3]=t[3],a[4]=t[4],a[5]=t[5],a}function copy$1(t,a){return t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t[4]=a[4],t[5]=a[5],t}function identity$1(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t}function fromValues$1(t,a,n,r,e,o){let u=new ARRAY_TYPE(6);return u[0]=t,u[1]=a,u[2]=n,u[3]=r,u[4]=e,u[5]=o,u}function set$1(t,a,n,r,e,o,u){return t[0]=a,t[1]=n,t[2]=r,t[3]=e,t[4]=o,t[5]=u,t}function invert$1(t,a){let n=a[0],r=a[1],e=a[2],o=a[3],u=a[4],s=a[5],i=n*o-r*e;return i?(i=1/i,t[0]=o*i,t[1]=-r*i,t[2]=-e*i,t[3]=n*i,t[4]=(e*s-o*u)*i,t[5]=(r*u-n*s)*i,t):null}function determinant$1(t){return t[0]*t[3]-t[1]*t[2]}function multiply$1(t,a,n){let r=a[0],e=a[1],o=a[2],u=a[3],s=a[4],i=a[5],l=n[0],c=n[1],$=n[2],f=n[3],h=n[4],M=n[5];return t[0]=r*l+o*c,t[1]=e*l+u*c,t[2]=r*$+o*f,t[3]=e*$+u*f,t[4]=r*h+o*M+s,t[5]=e*h+u*M+i,t}function rotate$1(t,a,n){let r=a[0],e=a[1],o=a[2],u=a[3],s=a[4],i=a[5],l=Math.sin(n),c=Math.cos(n);return t[0]=r*c+o*l,t[1]=e*c+u*l,t[2]=r*-l+o*c,t[3]=e*-l+u*c,t[4]=s,t[5]=i,t}function scale$1(t,a,n){let r=a[0],e=a[1],o=a[2],u=a[3],s=a[4],i=a[5],l=n[0],c=n[1];return t[0]=r*l,t[1]=e*l,t[2]=o*c,t[3]=u*c,t[4]=s,t[5]=i,t}function translate(t,a,n){let r=a[0],e=a[1],o=a[2],u=a[3],s=a[4],i=a[5],l=n[0],c=n[1];return t[0]=r,t[1]=e,t[2]=o,t[3]=u,t[4]=r*l+o*c+s,t[5]=e*l+u*c+i,t}function fromRotation$1(t,a){let n=Math.sin(a),r=Math.cos(a);return t[0]=r,t[1]=n,t[2]=-n,t[3]=r,t[4]=0,t[5]=0,t}function fromScaling$1(t,a){return t[0]=a[0],t[1]=0,t[2]=0,t[3]=a[1],t[4]=0,t[5]=0,t}function fromTranslation(t,a){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=a[0],t[5]=a[1],t}function str$1(t){return"mat2d("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+")"}function frob$1(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+1)}function add$1(t,a,n){return t[0]=a[0]+n[0],t[1]=a[1]+n[1],t[2]=a[2]+n[2],t[3]=a[3]+n[3],t[4]=a[4]+n[4],t[5]=a[5]+n[5],t}function subtract$1(t,a,n){return t[0]=a[0]-n[0],t[1]=a[1]-n[1],t[2]=a[2]-n[2],t[3]=a[3]-n[3],t[4]=a[4]-n[4],t[5]=a[5]-n[5],t}function multiplyScalar$1(t,a,n){return t[0]=a[0]*n,t[1]=a[1]*n,t[2]=a[2]*n,t[3]=a[3]*n,t[4]=a[4]*n,t[5]=a[5]*n,t}function multiplyScalarAndAdd$1(t,a,n,r){return t[0]=a[0]+n[0]*r,t[1]=a[1]+n[1]*r,t[2]=a[2]+n[2]*r,t[3]=a[3]+n[3]*r,t[4]=a[4]+n[4]*r,t[5]=a[5]+n[5]*r,t}function exactEquals$1(t,a){return t[0]===a[0]&&t[1]===a[1]&&t[2]===a[2]&&t[3]===a[3]&&t[4]===a[4]&&t[5]===a[5]}function equals$2(t,a){let n=t[0],r=t[1],e=t[2],o=t[3],u=t[4],s=t[5],i=a[0],l=a[1],c=a[2],$=a[3],f=a[4],h=a[5];return Math.abs(n-i)<=EPSILON*Math.max(1,Math.abs(n),Math.abs(i))&&Math.abs(r-l)<=EPSILON*Math.max(1,Math.abs(r),Math.abs(l))&&Math.abs(e-c)<=EPSILON*Math.max(1,Math.abs(e),Math.abs(c))&&Math.abs(o-$)<=EPSILON*Math.max(1,Math.abs(o),Math.abs($))&&Math.abs(u-f)<=EPSILON*Math.max(1,Math.abs(u),Math.abs(f))&&Math.abs(s-h)<=EPSILON*Math.max(1,Math.abs(s),Math.abs(h))}const mul$1=multiply$1,sub$1=subtract$1;var mat2d=Object.freeze({create:create$1,clone:clone$1,copy:copy$1,identity:identity$1,fromValues:fromValues$1,set:set$1,invert:invert$1,determinant:determinant$1,multiply:multiply$1,rotate:rotate$1,scale:scale$1,translate:translate,fromRotation:fromRotation$1,fromScaling:fromScaling$1,fromTranslation:fromTranslation,str:str$1,frob:frob$1,add:add$1,subtract:subtract$1,multiplyScalar:multiplyScalar$1,multiplyScalarAndAdd:multiplyScalarAndAdd$1,exactEquals:exactEquals$1,equals:equals$2,mul:mul$1,sub:sub$1});function create$2(){let t=new ARRAY_TYPE(9);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t}function fromMat4(t,a){return t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[4],t[4]=a[5],t[5]=a[6],t[6]=a[8],t[7]=a[9],t[8]=a[10],t}function clone$2(t){let a=new ARRAY_TYPE(9);return a[0]=t[0],a[1]=t[1],a[2]=t[2],a[3]=t[3],a[4]=t[4],a[5]=t[5],a[6]=t[6],a[7]=t[7],a[8]=t[8],a}function copy$2(t,a){return t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t[4]=a[4],t[5]=a[5],t[6]=a[6],t[7]=a[7],t[8]=a[8],t}function fromValues$2(t,a,n,r,e,o,u,s,i){let l=new ARRAY_TYPE(9);return l[0]=t,l[1]=a,l[2]=n,l[3]=r,l[4]=e,l[5]=o,l[6]=u,l[7]=s,l[8]=i,l}function set$2(t,a,n,r,e,o,u,s,i,l){return t[0]=a,t[1]=n,t[2]=r,t[3]=e,t[4]=o,t[5]=u,t[6]=s,t[7]=i,t[8]=l,t}function identity$2(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t}function transpose$1(t,a){if(t===a){let n=a[1],r=a[2],e=a[5];t[1]=a[3],t[2]=a[6],t[3]=n,t[5]=a[7],t[6]=r,t[7]=e}else t[0]=a[0],t[1]=a[3],t[2]=a[6],t[3]=a[1],t[4]=a[4],t[5]=a[7],t[6]=a[2],t[7]=a[5],t[8]=a[8];return t}function invert$2(t,a){let n=a[0],r=a[1],e=a[2],o=a[3],u=a[4],s=a[5],i=a[6],l=a[7],c=a[8],$=c*u-s*l,f=-c*o+s*i,h=l*o-u*i,M=n*$+r*f+e*h;return M?(M=1/M,t[0]=$*M,t[1]=(-c*r+e*l)*M,t[2]=(s*r-e*u)*M,t[3]=f*M,t[4]=(c*n-e*i)*M,t[5]=(-s*n+e*o)*M,t[6]=h*M,t[7]=(-l*n+r*i)*M,t[8]=(u*n-r*o)*M,t):null}function adjoint$1(t,a){let n=a[0],r=a[1],e=a[2],o=a[3],u=a[4],s=a[5],i=a[6],l=a[7],c=a[8];return t[0]=u*c-s*l,t[1]=e*l-r*c,t[2]=r*s-e*u,t[3]=s*i-o*c,t[4]=n*c-e*i,t[5]=e*o-n*s,t[6]=o*l-u*i,t[7]=r*i-n*l,t[8]=n*u-r*o,t}function determinant$2(t){let a=t[0],n=t[1],r=t[2],e=t[3],o=t[4],u=t[5],s=t[6],i=t[7],l=t[8];return a*(l*o-u*i)+n*(-l*e+u*s)+r*(i*e-o*s)}function multiply$2(t,a,n){let r=a[0],e=a[1],o=a[2],u=a[3],s=a[4],i=a[5],l=a[6],c=a[7],$=a[8],f=n[0],h=n[1],M=n[2],m=n[3],d=n[4],b=n[5],p=n[6],q=n[7],A=n[8];return t[0]=f*r+h*u+M*l,t[1]=f*e+h*s+M*c,t[2]=f*o+h*i+M*$,t[3]=m*r+d*u+b*l,t[4]=m*e+d*s+b*c,t[5]=m*o+d*i+b*$,t[6]=p*r+q*u+A*l,t[7]=p*e+q*s+A*c,t[8]=p*o+q*i+A*$,t}function translate$1(t,a,n){let r=a[0],e=a[1],o=a[2],u=a[3],s=a[4],i=a[5],l=a[6],c=a[7],$=a[8],f=n[0],h=n[1];return t[0]=r,t[1]=e,t[2]=o,t[3]=u,t[4]=s,t[5]=i,t[6]=f*r+h*u+l,t[7]=f*e+h*s+c,t[8]=f*o+h*i+$,t}function rotate$2(t,a,n){let r=a[0],e=a[1],o=a[2],u=a[3],s=a[4],i=a[5],l=a[6],c=a[7],$=a[8],f=Math.sin(n),h=Math.cos(n);return t[0]=h*r+f*u,t[1]=h*e+f*s,t[2]=h*o+f*i,t[3]=h*u-f*r,t[4]=h*s-f*e,t[5]=h*i-f*o,t[6]=l,t[7]=c,t[8]=$,t}function scale$2(t,a,n){let r=n[0],e=n[1];return t[0]=r*a[0],t[1]=r*a[1],t[2]=r*a[2],t[3]=e*a[3],t[4]=e*a[4],t[5]=e*a[5],t[6]=a[6],t[7]=a[7],t[8]=a[8],t}function fromTranslation$1(t,a){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=a[0],t[7]=a[1],t[8]=1,t}function fromRotation$2(t,a){let n=Math.sin(a),r=Math.cos(a);return t[0]=r,t[1]=n,t[2]=0,t[3]=-n,t[4]=r,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t}function fromScaling$2(t,a){return t[0]=a[0],t[1]=0,t[2]=0,t[3]=0,t[4]=a[1],t[5]=0,t[6]=0,t[7]=0,t[8]=1,t}function fromMat2d(t,a){return t[0]=a[0],t[1]=a[1],t[2]=0,t[3]=a[2],t[4]=a[3],t[5]=0,t[6]=a[4],t[7]=a[5],t[8]=1,t}function fromQuat(t,a){let n=a[0],r=a[1],e=a[2],o=a[3],u=n+n,s=r+r,i=e+e,l=n*u,c=r*u,$=r*s,f=e*u,h=e*s,M=e*i,m=o*u,d=o*s,b=o*i;return t[0]=1-$-M,t[3]=c-b,t[6]=f+d,t[1]=c+b,t[4]=1-l-M,t[7]=h-m,t[2]=f-d,t[5]=h+m,t[8]=1-l-$,t}function normalFromMat4(t,a){let n=a[0],r=a[1],e=a[2],o=a[3],u=a[4],s=a[5],i=a[6],l=a[7],c=a[8],$=a[9],f=a[10],h=a[11],M=a[12],m=a[13],d=a[14],b=a[15],p=n*s-r*u,q=n*i-e*u,A=n*l-o*u,E=r*i-e*s,y=r*l-o*s,g=e*l-o*i,x=c*m-$*M,R=c*d-f*M,S=c*b-h*M,P=$*d-f*m,L=$*b-h*m,v=f*b-h*d,O=p*v-q*L+A*P+E*S-y*R+g*x;return O?(O=1/O,t[0]=(s*v-i*L+l*P)*O,t[1]=(i*S-u*v-l*R)*O,t[2]=(u*L-s*S+l*x)*O,t[3]=(e*L-r*v-o*P)*O,t[4]=(n*v-e*S+o*R)*O,t[5]=(r*S-n*L-o*x)*O,t[6]=(m*g-d*y+b*E)*O,t[7]=(d*A-M*g-b*q)*O,t[8]=(M*y-m*A+b*p)*O,t):null}function projection(t,a,n){return t[0]=2/a,t[1]=0,t[2]=0,t[3]=0,t[4]=-2/n,t[5]=0,t[6]=-1,t[7]=1,t[8]=1,t}function str$2(t){return"mat3("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+")"}function frob$2(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+Math.pow(t[6],2)+Math.pow(t[7],2)+Math.pow(t[8],2))}function add$2(t,a,n){return t[0]=a[0]+n[0],t[1]=a[1]+n[1],t[2]=a[2]+n[2],t[3]=a[3]+n[3],t[4]=a[4]+n[4],t[5]=a[5]+n[5],t[6]=a[6]+n[6],t[7]=a[7]+n[7],t[8]=a[8]+n[8],t}function subtract$2(t,a,n){return t[0]=a[0]-n[0],t[1]=a[1]-n[1],t[2]=a[2]-n[2],t[3]=a[3]-n[3],t[4]=a[4]-n[4],t[5]=a[5]-n[5],t[6]=a[6]-n[6],t[7]=a[7]-n[7],t[8]=a[8]-n[8],t}function multiplyScalar$2(t,a,n){return t[0]=a[0]*n,t[1]=a[1]*n,t[2]=a[2]*n,t[3]=a[3]*n,t[4]=a[4]*n,t[5]=a[5]*n,t[6]=a[6]*n,t[7]=a[7]*n,t[8]=a[8]*n,t}function multiplyScalarAndAdd$2(t,a,n,r){return t[0]=a[0]+n[0]*r,t[1]=a[1]+n[1]*r,t[2]=a[2]+n[2]*r,t[3]=a[3]+n[3]*r,t[4]=a[4]+n[4]*r,t[5]=a[5]+n[5]*r,t[6]=a[6]+n[6]*r,t[7]=a[7]+n[7]*r,t[8]=a[8]+n[8]*r,t}function exactEquals$2(t,a){return t[0]===a[0]&&t[1]===a[1]&&t[2]===a[2]&&t[3]===a[3]&&t[4]===a[4]&&t[5]===a[5]&&t[6]===a[6]&&t[7]===a[7]&&t[8]===a[8]}function equals$3(t,a){let n=t[0],r=t[1],e=t[2],o=t[3],u=t[4],s=t[5],i=t[6],l=t[7],c=t[8],$=a[0],f=a[1],h=a[2],M=a[3],m=a[4],d=a[5],b=a[6],p=a[7],q=a[8];return Math.abs(n-$)<=EPSILON*Math.max(1,Math.abs(n),Math.abs($))&&Math.abs(r-f)<=EPSILON*Math.max(1,Math.abs(r),Math.abs(f))&&Math.abs(e-h)<=EPSILON*Math.max(1,Math.abs(e),Math.abs(h))&&Math.abs(o-M)<=EPSILON*Math.max(1,Math.abs(o),Math.abs(M))&&Math.abs(u-m)<=EPSILON*Math.max(1,Math.abs(u),Math.abs(m))&&Math.abs(s-d)<=EPSILON*Math.max(1,Math.abs(s),Math.abs(d))&&Math.abs(i-b)<=EPSILON*Math.max(1,Math.abs(i),Math.abs(b))&&Math.abs(l-p)<=EPSILON*Math.max(1,Math.abs(l),Math.abs(p))&&Math.abs(c-q)<=EPSILON*Math.max(1,Math.abs(c),Math.abs(q))}const mul$2=multiply$2,sub$2=subtract$2;var mat3=Object.freeze({create:create$2,fromMat4:fromMat4,clone:clone$2,copy:copy$2,fromValues:fromValues$2,set:set$2,identity:identity$2,transpose:transpose$1,invert:invert$2,adjoint:adjoint$1,determinant:determinant$2,multiply:multiply$2,translate:translate$1,rotate:rotate$2,scale:scale$2,fromTranslation:fromTranslation$1,fromRotation:fromRotation$2,fromScaling:fromScaling$2,fromMat2d:fromMat2d,fromQuat:fromQuat,normalFromMat4:normalFromMat4,projection:projection,str:str$2,frob:frob$2,add:add$2,subtract:subtract$2,multiplyScalar:multiplyScalar$2,multiplyScalarAndAdd:multiplyScalarAndAdd$2,exactEquals:exactEquals$2,equals:equals$3,mul:mul$2,sub:sub$2});function create$3(){let t=new ARRAY_TYPE(16);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function clone$3(t){let a=new ARRAY_TYPE(16);return a[0]=t[0],a[1]=t[1],a[2]=t[2],a[3]=t[3],a[4]=t[4],a[5]=t[5],a[6]=t[6],a[7]=t[7],a[8]=t[8],a[9]=t[9],a[10]=t[10],a[11]=t[11],a[12]=t[12],a[13]=t[13],a[14]=t[14],a[15]=t[15],a}function copy$3(t,a){return t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t[4]=a[4],t[5]=a[5],t[6]=a[6],t[7]=a[7],t[8]=a[8],t[9]=a[9],t[10]=a[10],t[11]=a[11],t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15],t}function fromValues$3(t,a,n,r,e,o,u,s,i,l,c,$,f,h,M,m){let d=new ARRAY_TYPE(16);return d[0]=t,d[1]=a,d[2]=n,d[3]=r,d[4]=e,d[5]=o,d[6]=u,d[7]=s,d[8]=i,d[9]=l,d[10]=c,d[11]=$,d[12]=f,d[13]=h,d[14]=M,d[15]=m,d}function set$3(t,a,n,r,e,o,u,s,i,l,c,$,f,h,M,m,d){return t[0]=a,t[1]=n,t[2]=r,t[3]=e,t[4]=o,t[5]=u,t[6]=s,t[7]=i,t[8]=l,t[9]=c,t[10]=$,t[11]=f,t[12]=h,t[13]=M,t[14]=m,t[15]=d,t}function identity$3(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function transpose$2(t,a){if(t===a){let n=a[1],r=a[2],e=a[3],o=a[6],u=a[7],s=a[11];t[1]=a[4],t[2]=a[8],t[3]=a[12],t[4]=n,t[6]=a[9],t[7]=a[13],t[8]=r,t[9]=o,t[11]=a[14],t[12]=e,t[13]=u,t[14]=s}else t[0]=a[0],t[1]=a[4],t[2]=a[8],t[3]=a[12],t[4]=a[1],t[5]=a[5],t[6]=a[9],t[7]=a[13],t[8]=a[2],t[9]=a[6],t[10]=a[10],t[11]=a[14],t[12]=a[3],t[13]=a[7],t[14]=a[11],t[15]=a[15];return t}function invert$3(t,a){let n=a[0],r=a[1],e=a[2],o=a[3],u=a[4],s=a[5],i=a[6],l=a[7],c=a[8],$=a[9],f=a[10],h=a[11],M=a[12],m=a[13],d=a[14],b=a[15],p=n*s-r*u,q=n*i-e*u,A=n*l-o*u,E=r*i-e*s,y=r*l-o*s,g=e*l-o*i,x=c*m-$*M,R=c*d-f*M,S=c*b-h*M,P=$*d-f*m,L=$*b-h*m,v=f*b-h*d,O=p*v-q*L+A*P+E*S-y*R+g*x;return O?(O=1/O,t[0]=(s*v-i*L+l*P)*O,t[1]=(e*L-r*v-o*P)*O,t[2]=(m*g-d*y+b*E)*O,t[3]=(f*y-$*g-h*E)*O,t[4]=(i*S-u*v-l*R)*O,t[5]=(n*v-e*S+o*R)*O,t[6]=(d*A-M*g-b*q)*O,t[7]=(c*g-f*A+h*q)*O,t[8]=(u*L-s*S+l*x)*O,t[9]=(r*S-n*L-o*x)*O,t[10]=(M*y-m*A+b*p)*O,t[11]=($*A-c*y-h*p)*O,t[12]=(s*R-u*P-i*x)*O,t[13]=(n*P-r*R+e*x)*O,t[14]=(m*q-M*E-d*p)*O,t[15]=(c*E-$*q+f*p)*O,t):null}function adjoint$2(t,a){let n=a[0],r=a[1],e=a[2],o=a[3],u=a[4],s=a[5],i=a[6],l=a[7],c=a[8],$=a[9],f=a[10],h=a[11],M=a[12],m=a[13],d=a[14],b=a[15];return t[0]=s*(f*b-h*d)-$*(i*b-l*d)+m*(i*h-l*f),t[1]=-(r*(f*b-h*d)-$*(e*b-o*d)+m*(e*h-o*f)),t[2]=r*(i*b-l*d)-s*(e*b-o*d)+m*(e*l-o*i),t[3]=-(r*(i*h-l*f)-s*(e*h-o*f)+$*(e*l-o*i)),t[4]=-(u*(f*b-h*d)-c*(i*b-l*d)+M*(i*h-l*f)),t[5]=n*(f*b-h*d)-c*(e*b-o*d)+M*(e*h-o*f),t[6]=-(n*(i*b-l*d)-u*(e*b-o*d)+M*(e*l-o*i)),t[7]=n*(i*h-l*f)-u*(e*h-o*f)+c*(e*l-o*i),t[8]=u*($*b-h*m)-c*(s*b-l*m)+M*(s*h-l*$),t[9]=-(n*($*b-h*m)-c*(r*b-o*m)+M*(r*h-o*$)),t[10]=n*(s*b-l*m)-u*(r*b-o*m)+M*(r*l-o*s),t[11]=-(n*(s*h-l*$)-u*(r*h-o*$)+c*(r*l-o*s)),t[12]=-(u*($*d-f*m)-c*(s*d-i*m)+M*(s*f-i*$)),t[13]=n*($*d-f*m)-c*(r*d-e*m)+M*(r*f-e*$),t[14]=-(n*(s*d-i*m)-u*(r*d-e*m)+M*(r*i-e*s)),t[15]=n*(s*f-i*$)-u*(r*f-e*$)+c*(r*i-e*s),t}function determinant$3(t){let a=t[0],n=t[1],r=t[2],e=t[3],o=t[4],u=t[5],s=t[6],i=t[7],l=t[8],c=t[9],$=t[10],f=t[11],h=t[12],M=t[13],m=t[14],d=t[15];return(a*u-n*o)*($*d-f*m)-(a*s-r*o)*(c*d-f*M)+(a*i-e*o)*(c*m-$*M)+(n*s-r*u)*(l*d-f*h)-(n*i-e*u)*(l*m-$*h)+(r*i-e*s)*(l*M-c*h)}function multiply$3(t,a,n){let r=a[0],e=a[1],o=a[2],u=a[3],s=a[4],i=a[5],l=a[6],c=a[7],$=a[8],f=a[9],h=a[10],M=a[11],m=a[12],d=a[13],b=a[14],p=a[15],q=n[0],A=n[1],E=n[2],y=n[3];return t[0]=q*r+A*s+E*$+y*m,t[1]=q*e+A*i+E*f+y*d,t[2]=q*o+A*l+E*h+y*b,t[3]=q*u+A*c+E*M+y*p,q=n[4],A=n[5],E=n[6],y=n[7],t[4]=q*r+A*s+E*$+y*m,t[5]=q*e+A*i+E*f+y*d,t[6]=q*o+A*l+E*h+y*b,t[7]=q*u+A*c+E*M+y*p,q=n[8],A=n[9],E=n[10],y=n[11],t[8]=q*r+A*s+E*$+y*m,t[9]=q*e+A*i+E*f+y*d,t[10]=q*o+A*l+E*h+y*b,t[11]=q*u+A*c+E*M+y*p,q=n[12],A=n[13],E=n[14],y=n[15],t[12]=q*r+A*s+E*$+y*m,t[13]=q*e+A*i+E*f+y*d,t[14]=q*o+A*l+E*h+y*b,t[15]=q*u+A*c+E*M+y*p,t}function translate$2(t,a,n){let r,e,o,u,s,i,l,c,$,f,h,M,m=n[0],d=n[1],b=n[2];return a===t?(t[12]=a[0]*m+a[4]*d+a[8]*b+a[12],t[13]=a[1]*m+a[5]*d+a[9]*b+a[13],t[14]=a[2]*m+a[6]*d+a[10]*b+a[14],t[15]=a[3]*m+a[7]*d+a[11]*b+a[15]):(r=a[0],e=a[1],o=a[2],u=a[3],s=a[4],i=a[5],l=a[6],c=a[7],$=a[8],f=a[9],h=a[10],M=a[11],t[0]=r,t[1]=e,t[2]=o,t[3]=u,t[4]=s,t[5]=i,t[6]=l,t[7]=c,t[8]=$,t[9]=f,t[10]=h,t[11]=M,t[12]=r*m+s*d+$*b+a[12],t[13]=e*m+i*d+f*b+a[13],t[14]=o*m+l*d+h*b+a[14],t[15]=u*m+c*d+M*b+a[15]),t}function scale$3(t,a,n){let r=n[0],e=n[1],o=n[2];return t[0]=a[0]*r,t[1]=a[1]*r,t[2]=a[2]*r,t[3]=a[3]*r,t[4]=a[4]*e,t[5]=a[5]*e,t[6]=a[6]*e,t[7]=a[7]*e,t[8]=a[8]*o,t[9]=a[9]*o,t[10]=a[10]*o,t[11]=a[11]*o,t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15],t}function rotate$3(t,a,n,r){let e,o,u,s,i,l,c,$,f,h,M,m,d,b,p,q,A,E,y,g,x,R,S,P,L=r[0],v=r[1],O=r[2],Y=Math.sqrt(L*L+v*v+O*O);return Math.abs(Y)<EPSILON?null:(L*=Y=1/Y,v*=Y,O*=Y,e=Math.sin(n),u=1-(o=Math.cos(n)),s=a[0],i=a[1],l=a[2],c=a[3],$=a[4],f=a[5],h=a[6],M=a[7],m=a[8],d=a[9],b=a[10],p=a[11],q=L*L*u+o,A=v*L*u+O*e,E=O*L*u-v*e,y=L*v*u-O*e,g=v*v*u+o,x=O*v*u+L*e,R=L*O*u+v*e,S=v*O*u-L*e,P=O*O*u+o,t[0]=s*q+$*A+m*E,t[1]=i*q+f*A+d*E,t[2]=l*q+h*A+b*E,t[3]=c*q+M*A+p*E,t[4]=s*y+$*g+m*x,t[5]=i*y+f*g+d*x,t[6]=l*y+h*g+b*x,t[7]=c*y+M*g+p*x,t[8]=s*R+$*S+m*P,t[9]=i*R+f*S+d*P,t[10]=l*R+h*S+b*P,t[11]=c*R+M*S+p*P,a!==t&&(t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15]),t)}function rotateX(t,a,n){let r=Math.sin(n),e=Math.cos(n),o=a[4],u=a[5],s=a[6],i=a[7],l=a[8],c=a[9],$=a[10],f=a[11];return a!==t&&(t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15]),t[4]=o*e+l*r,t[5]=u*e+c*r,t[6]=s*e+$*r,t[7]=i*e+f*r,t[8]=l*e-o*r,t[9]=c*e-u*r,t[10]=$*e-s*r,t[11]=f*e-i*r,t}function rotateY(t,a,n){let r=Math.sin(n),e=Math.cos(n),o=a[0],u=a[1],s=a[2],i=a[3],l=a[8],c=a[9],$=a[10],f=a[11];return a!==t&&(t[4]=a[4],t[5]=a[5],t[6]=a[6],t[7]=a[7],t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15]),t[0]=o*e-l*r,t[1]=u*e-c*r,t[2]=s*e-$*r,t[3]=i*e-f*r,t[8]=o*r+l*e,t[9]=u*r+c*e,t[10]=s*r+$*e,t[11]=i*r+f*e,t}function rotateZ(t,a,n){let r=Math.sin(n),e=Math.cos(n),o=a[0],u=a[1],s=a[2],i=a[3],l=a[4],c=a[5],$=a[6],f=a[7];return a!==t&&(t[8]=a[8],t[9]=a[9],t[10]=a[10],t[11]=a[11],t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15]),t[0]=o*e+l*r,t[1]=u*e+c*r,t[2]=s*e+$*r,t[3]=i*e+f*r,t[4]=l*e-o*r,t[5]=c*e-u*r,t[6]=$*e-s*r,t[7]=f*e-i*r,t}function fromTranslation$2(t,a){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=a[0],t[13]=a[1],t[14]=a[2],t[15]=1,t}function fromScaling$3(t,a){return t[0]=a[0],t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=a[1],t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=a[2],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function fromRotation$3(t,a,n){let r,e,o,u=n[0],s=n[1],i=n[2],l=Math.sqrt(u*u+s*s+i*i);return Math.abs(l)<EPSILON?null:(u*=l=1/l,s*=l,i*=l,r=Math.sin(a),o=1-(e=Math.cos(a)),t[0]=u*u*o+e,t[1]=s*u*o+i*r,t[2]=i*u*o-s*r,t[3]=0,t[4]=u*s*o-i*r,t[5]=s*s*o+e,t[6]=i*s*o+u*r,t[7]=0,t[8]=u*i*o+s*r,t[9]=s*i*o-u*r,t[10]=i*i*o+e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t)}function fromXRotation(t,a){let n=Math.sin(a),r=Math.cos(a);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=r,t[6]=n,t[7]=0,t[8]=0,t[9]=-n,t[10]=r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function fromYRotation(t,a){let n=Math.sin(a),r=Math.cos(a);return t[0]=r,t[1]=0,t[2]=-n,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=n,t[9]=0,t[10]=r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function fromZRotation(t,a){let n=Math.sin(a),r=Math.cos(a);return t[0]=r,t[1]=n,t[2]=0,t[3]=0,t[4]=-n,t[5]=r,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function fromRotationTranslation(t,a,n){let r=a[0],e=a[1],o=a[2],u=a[3],s=r+r,i=e+e,l=o+o,c=r*s,$=r*i,f=r*l,h=e*i,M=e*l,m=o*l,d=u*s,b=u*i,p=u*l;return t[0]=1-(h+m),t[1]=$+p,t[2]=f-b,t[3]=0,t[4]=$-p,t[5]=1-(c+m),t[6]=M+d,t[7]=0,t[8]=f+b,t[9]=M-d,t[10]=1-(c+h),t[11]=0,t[12]=n[0],t[13]=n[1],t[14]=n[2],t[15]=1,t}function getTranslation(t,a){return t[0]=a[12],t[1]=a[13],t[2]=a[14],t}function getScaling(t,a){let n=a[0],r=a[1],e=a[2],o=a[4],u=a[5],s=a[6],i=a[8],l=a[9],c=a[10];return t[0]=Math.sqrt(n*n+r*r+e*e),t[1]=Math.sqrt(o*o+u*u+s*s),t[2]=Math.sqrt(i*i+l*l+c*c),t}function getRotation(t,a){let n=a[0]+a[5]+a[10],r=0;return n>0?(r=2*Math.sqrt(n+1),t[3]=.25*r,t[0]=(a[6]-a[9])/r,t[1]=(a[8]-a[2])/r,t[2]=(a[1]-a[4])/r):a[0]>a[5]&a[0]>a[10]?(r=2*Math.sqrt(1+a[0]-a[5]-a[10]),t[3]=(a[6]-a[9])/r,t[0]=.25*r,t[1]=(a[1]+a[4])/r,t[2]=(a[8]+a[2])/r):a[5]>a[10]?(r=2*Math.sqrt(1+a[5]-a[0]-a[10]),t[3]=(a[8]-a[2])/r,t[0]=(a[1]+a[4])/r,t[1]=.25*r,t[2]=(a[6]+a[9])/r):(r=2*Math.sqrt(1+a[10]-a[0]-a[5]),t[3]=(a[1]-a[4])/r,t[0]=(a[8]+a[2])/r,t[1]=(a[6]+a[9])/r,t[2]=.25*r),t}function fromRotationTranslationScale(t,a,n,r){let e=a[0],o=a[1],u=a[2],s=a[3],i=e+e,l=o+o,c=u+u,$=e*i,f=e*l,h=e*c,M=o*l,m=o*c,d=u*c,b=s*i,p=s*l,q=s*c,A=r[0],E=r[1],y=r[2];return t[0]=(1-(M+d))*A,t[1]=(f+q)*A,t[2]=(h-p)*A,t[3]=0,t[4]=(f-q)*E,t[5]=(1-($+d))*E,t[6]=(m+b)*E,t[7]=0,t[8]=(h+p)*y,t[9]=(m-b)*y,t[10]=(1-($+M))*y,t[11]=0,t[12]=n[0],t[13]=n[1],t[14]=n[2],t[15]=1,t}function fromRotationTranslationScaleOrigin(t,a,n,r,e){let o=a[0],u=a[1],s=a[2],i=a[3],l=o+o,c=u+u,$=s+s,f=o*l,h=o*c,M=o*$,m=u*c,d=u*$,b=s*$,p=i*l,q=i*c,A=i*$,E=r[0],y=r[1],g=r[2],x=e[0],R=e[1],S=e[2];return t[0]=(1-(m+b))*E,t[1]=(h+A)*E,t[2]=(M-q)*E,t[3]=0,t[4]=(h-A)*y,t[5]=(1-(f+b))*y,t[6]=(d+p)*y,t[7]=0,t[8]=(M+q)*g,t[9]=(d-p)*g,t[10]=(1-(f+m))*g,t[11]=0,t[12]=n[0]+x-(t[0]*x+t[4]*R+t[8]*S),t[13]=n[1]+R-(t[1]*x+t[5]*R+t[9]*S),t[14]=n[2]+S-(t[2]*x+t[6]*R+t[10]*S),t[15]=1,t}function fromQuat$1(t,a){let n=a[0],r=a[1],e=a[2],o=a[3],u=n+n,s=r+r,i=e+e,l=n*u,c=r*u,$=r*s,f=e*u,h=e*s,M=e*i,m=o*u,d=o*s,b=o*i;return t[0]=1-$-M,t[1]=c+b,t[2]=f-d,t[3]=0,t[4]=c-b,t[5]=1-l-M,t[6]=h+m,t[7]=0,t[8]=f+d,t[9]=h-m,t[10]=1-l-$,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function frustum(t,a,n,r,e,o,u){let s=1/(n-a),i=1/(e-r),l=1/(o-u);return t[0]=2*o*s,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=2*o*i,t[6]=0,t[7]=0,t[8]=(n+a)*s,t[9]=(e+r)*i,t[10]=(u+o)*l,t[11]=-1,t[12]=0,t[13]=0,t[14]=u*o*2*l,t[15]=0,t}function perspective(t,a,n,r,e){let o=1/Math.tan(a/2),u=1/(r-e);return t[0]=o/n,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=o,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=(e+r)*u,t[11]=-1,t[12]=0,t[13]=0,t[14]=2*e*r*u,t[15]=0,t}function perspectiveFromFieldOfView(t,a,n,r){let e=Math.tan(a.upDegrees*Math.PI/180),o=Math.tan(a.downDegrees*Math.PI/180),u=Math.tan(a.leftDegrees*Math.PI/180),s=Math.tan(a.rightDegrees*Math.PI/180),i=2/(u+s),l=2/(e+o);return t[0]=i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=l,t[6]=0,t[7]=0,t[8]=-(u-s)*i*.5,t[9]=(e-o)*l*.5,t[10]=r/(n-r),t[11]=-1,t[12]=0,t[13]=0,t[14]=r*n/(n-r),t[15]=0,t}function ortho(t,a,n,r,e,o,u){let s=1/(a-n),i=1/(r-e),l=1/(o-u);return t[0]=-2*s,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*i,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*l,t[11]=0,t[12]=(a+n)*s,t[13]=(e+r)*i,t[14]=(u+o)*l,t[15]=1,t}function lookAt(t,a,n,r){let e,o,u,s,i,l,c,$,f,h,M=a[0],m=a[1],d=a[2],b=r[0],p=r[1],q=r[2],A=n[0],E=n[1],y=n[2];return Math.abs(M-A)<EPSILON&&Math.abs(m-E)<EPSILON&&Math.abs(d-y)<EPSILON?identity$3(t):(c=M-A,$=m-E,f=d-y,e=p*(f*=h=1/Math.sqrt(c*c+$*$+f*f))-q*($*=h),o=q*(c*=h)-b*f,u=b*$-p*c,(h=Math.sqrt(e*e+o*o+u*u))?(e*=h=1/h,o*=h,u*=h):(e=0,o=0,u=0),s=$*u-f*o,i=f*e-c*u,l=c*o-$*e,(h=Math.sqrt(s*s+i*i+l*l))?(s*=h=1/h,i*=h,l*=h):(s=0,i=0,l=0),t[0]=e,t[1]=s,t[2]=c,t[3]=0,t[4]=o,t[5]=i,t[6]=$,t[7]=0,t[8]=u,t[9]=l,t[10]=f,t[11]=0,t[12]=-(e*M+o*m+u*d),t[13]=-(s*M+i*m+l*d),t[14]=-(c*M+$*m+f*d),t[15]=1,t)}function targetTo(t,a,n,r){let e=a[0],o=a[1],u=a[2],s=r[0],i=r[1],l=r[2],c=e-n[0],$=o-n[1],f=u-n[2],h=c*c+$*$+f*f;h>0&&(c*=h=1/Math.sqrt(h),$*=h,f*=h);let M=i*f-l*$,m=l*c-s*f,d=s*$-i*c;return t[0]=M,t[1]=m,t[2]=d,t[3]=0,t[4]=$*d-f*m,t[5]=f*M-c*d,t[6]=c*m-$*M,t[7]=0,t[8]=c,t[9]=$,t[10]=f,t[11]=0,t[12]=e,t[13]=o,t[14]=u,t[15]=1,t}function str$3(t){return"mat4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+", "+t[9]+", "+t[10]+", "+t[11]+", "+t[12]+", "+t[13]+", "+t[14]+", "+t[15]+")"}function frob$3(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+Math.pow(t[6],2)+Math.pow(t[7],2)+Math.pow(t[8],2)+Math.pow(t[9],2)+Math.pow(t[10],2)+Math.pow(t[11],2)+Math.pow(t[12],2)+Math.pow(t[13],2)+Math.pow(t[14],2)+Math.pow(t[15],2))}function add$3(t,a,n){return t[0]=a[0]+n[0],t[1]=a[1]+n[1],t[2]=a[2]+n[2],t[3]=a[3]+n[3],t[4]=a[4]+n[4],t[5]=a[5]+n[5],t[6]=a[6]+n[6],t[7]=a[7]+n[7],t[8]=a[8]+n[8],t[9]=a[9]+n[9],t[10]=a[10]+n[10],t[11]=a[11]+n[11],t[12]=a[12]+n[12],t[13]=a[13]+n[13],t[14]=a[14]+n[14],t[15]=a[15]+n[15],t}function subtract$3(t,a,n){return t[0]=a[0]-n[0],t[1]=a[1]-n[1],t[2]=a[2]-n[2],t[3]=a[3]-n[3],t[4]=a[4]-n[4],t[5]=a[5]-n[5],t[6]=a[6]-n[6],t[7]=a[7]-n[7],t[8]=a[8]-n[8],t[9]=a[9]-n[9],t[10]=a[10]-n[10],t[11]=a[11]-n[11],t[12]=a[12]-n[12],t[13]=a[13]-n[13],t[14]=a[14]-n[14],t[15]=a[15]-n[15],t}function multiplyScalar$3(t,a,n){return t[0]=a[0]*n,t[1]=a[1]*n,t[2]=a[2]*n,t[3]=a[3]*n,t[4]=a[4]*n,t[5]=a[5]*n,t[6]=a[6]*n,t[7]=a[7]*n,t[8]=a[8]*n,t[9]=a[9]*n,t[10]=a[10]*n,t[11]=a[11]*n,t[12]=a[12]*n,t[13]=a[13]*n,t[14]=a[14]*n,t[15]=a[15]*n,t}function multiplyScalarAndAdd$3(t,a,n,r){return t[0]=a[0]+n[0]*r,t[1]=a[1]+n[1]*r,t[2]=a[2]+n[2]*r,t[3]=a[3]+n[3]*r,t[4]=a[4]+n[4]*r,t[5]=a[5]+n[5]*r,t[6]=a[6]+n[6]*r,t[7]=a[7]+n[7]*r,t[8]=a[8]+n[8]*r,t[9]=a[9]+n[9]*r,t[10]=a[10]+n[10]*r,t[11]=a[11]+n[11]*r,t[12]=a[12]+n[12]*r,t[13]=a[13]+n[13]*r,t[14]=a[14]+n[14]*r,t[15]=a[15]+n[15]*r,t}function exactEquals$3(t,a){return t[0]===a[0]&&t[1]===a[1]&&t[2]===a[2]&&t[3]===a[3]&&t[4]===a[4]&&t[5]===a[5]&&t[6]===a[6]&&t[7]===a[7]&&t[8]===a[8]&&t[9]===a[9]&&t[10]===a[10]&&t[11]===a[11]&&t[12]===a[12]&&t[13]===a[13]&&t[14]===a[14]&&t[15]===a[15]}function equals$4(t,a){let n=t[0],r=t[1],e=t[2],o=t[3],u=t[4],s=t[5],i=t[6],l=t[7],c=t[8],$=t[9],f=t[10],h=t[11],M=t[12],m=t[13],d=t[14],b=t[15],p=a[0],q=a[1],A=a[2],E=a[3],y=a[4],g=a[5],x=a[6],R=a[7],S=a[8],P=a[9],L=a[10],v=a[11],O=a[12],Y=a[13],I=a[14],N=a[15];return Math.abs(n-p)<=EPSILON*Math.max(1,Math.abs(n),Math.abs(p))&&Math.abs(r-q)<=EPSILON*Math.max(1,Math.abs(r),Math.abs(q))&&Math.abs(e-A)<=EPSILON*Math.max(1,Math.abs(e),Math.abs(A))&&Math.abs(o-E)<=EPSILON*Math.max(1,Math.abs(o),Math.abs(E))&&Math.abs(u-y)<=EPSILON*Math.max(1,Math.abs(u),Math.abs(y))&&Math.abs(s-g)<=EPSILON*Math.max(1,Math.abs(s),Math.abs(g))&&Math.abs(i-x)<=EPSILON*Math.max(1,Math.abs(i),Math.abs(x))&&Math.abs(l-R)<=EPSILON*Math.max(1,Math.abs(l),Math.abs(R))&&Math.abs(c-S)<=EPSILON*Math.max(1,Math.abs(c),Math.abs(S))&&Math.abs($-P)<=EPSILON*Math.max(1,Math.abs($),Math.abs(P))&&Math.abs(f-L)<=EPSILON*Math.max(1,Math.abs(f),Math.abs(L))&&Math.abs(h-v)<=EPSILON*Math.max(1,Math.abs(h),Math.abs(v))&&Math.abs(M-O)<=EPSILON*Math.max(1,Math.abs(M),Math.abs(O))&&Math.abs(m-Y)<=EPSILON*Math.max(1,Math.abs(m),Math.abs(Y))&&Math.abs(d-I)<=EPSILON*Math.max(1,Math.abs(d),Math.abs(I))&&Math.abs(b-N)<=EPSILON*Math.max(1,Math.abs(b),Math.abs(N))}const mul$3=multiply$3,sub$3=subtract$3;var mat4=Object.freeze({create:create$3,clone:clone$3,copy:copy$3,fromValues:fromValues$3,set:set$3,identity:identity$3,transpose:transpose$2,invert:invert$3,adjoint:adjoint$2,determinant:determinant$3,multiply:multiply$3,translate:translate$2,scale:scale$3,rotate:rotate$3,rotateX:rotateX,rotateY:rotateY,rotateZ:rotateZ,fromTranslation:fromTranslation$2,fromScaling:fromScaling$3,fromRotation:fromRotation$3,fromXRotation:fromXRotation,fromYRotation:fromYRotation,fromZRotation:fromZRotation,fromRotationTranslation:fromRotationTranslation,getTranslation:getTranslation,getScaling:getScaling,getRotation:getRotation,fromRotationTranslationScale:fromRotationTranslationScale,fromRotationTranslationScaleOrigin:fromRotationTranslationScaleOrigin,fromQuat:fromQuat$1,frustum:frustum,perspective:perspective,perspectiveFromFieldOfView:perspectiveFromFieldOfView,ortho:ortho,lookAt:lookAt,targetTo:targetTo,str:str$3,frob:frob$3,add:add$3,subtract:subtract$3,multiplyScalar:multiplyScalar$3,multiplyScalarAndAdd:multiplyScalarAndAdd$3,exactEquals:exactEquals$3,equals:equals$4,mul:mul$3,sub:sub$3});function create$4(){let t=new ARRAY_TYPE(3);return t[0]=0,t[1]=0,t[2]=0,t}function clone$4(t){var a=new ARRAY_TYPE(3);return a[0]=t[0],a[1]=t[1],a[2]=t[2],a}function length(t){let a=t[0],n=t[1],r=t[2];return Math.sqrt(a*a+n*n+r*r)}function fromValues$4(t,a,n){let r=new ARRAY_TYPE(3);return r[0]=t,r[1]=a,r[2]=n,r}function copy$4(t,a){return t[0]=a[0],t[1]=a[1],t[2]=a[2],t}function set$4(t,a,n,r){return t[0]=a,t[1]=n,t[2]=r,t}function add$4(t,a,n){return t[0]=a[0]+n[0],t[1]=a[1]+n[1],t[2]=a[2]+n[2],t}function subtract$4(t,a,n){return t[0]=a[0]-n[0],t[1]=a[1]-n[1],t[2]=a[2]-n[2],t}function multiply$4(t,a,n){return t[0]=a[0]*n[0],t[1]=a[1]*n[1],t[2]=a[2]*n[2],t}function divide(t,a,n){return t[0]=a[0]/n[0],t[1]=a[1]/n[1],t[2]=a[2]/n[2],t}function ceil(t,a){return t[0]=Math.ceil(a[0]),t[1]=Math.ceil(a[1]),t[2]=Math.ceil(a[2]),t}function floor(t,a){return t[0]=Math.floor(a[0]),t[1]=Math.floor(a[1]),t[2]=Math.floor(a[2]),t}function min(t,a,n){return t[0]=Math.min(a[0],n[0]),t[1]=Math.min(a[1],n[1]),t[2]=Math.min(a[2],n[2]),t}function max(t,a,n){return t[0]=Math.max(a[0],n[0]),t[1]=Math.max(a[1],n[1]),t[2]=Math.max(a[2],n[2]),t}function round(t,a){return t[0]=Math.round(a[0]),t[1]=Math.round(a[1]),t[2]=Math.round(a[2]),t}function scale$4(t,a,n){return t[0]=a[0]*n,t[1]=a[1]*n,t[2]=a[2]*n,t}function scaleAndAdd(t,a,n,r){return t[0]=a[0]+n[0]*r,t[1]=a[1]+n[1]*r,t[2]=a[2]+n[2]*r,t}function distance(t,a){let n=a[0]-t[0],r=a[1]-t[1],e=a[2]-t[2];return Math.sqrt(n*n+r*r+e*e)}function squaredDistance(t,a){let n=a[0]-t[0],r=a[1]-t[1],e=a[2]-t[2];return n*n+r*r+e*e}function squaredLength(t){let a=t[0],n=t[1],r=t[2];return a*a+n*n+r*r}function negate(t,a){return t[0]=-a[0],t[1]=-a[1],t[2]=-a[2],t}function inverse(t,a){return t[0]=1/a[0],t[1]=1/a[1],t[2]=1/a[2],t}function normalize(t,a){let n=a[0],r=a[1],e=a[2],o=n*n+r*r+e*e;return o>0&&(o=1/Math.sqrt(o),t[0]=a[0]*o,t[1]=a[1]*o,t[2]=a[2]*o),t}function dot(t,a){return t[0]*a[0]+t[1]*a[1]+t[2]*a[2]}function cross(t,a,n){let r=a[0],e=a[1],o=a[2],u=n[0],s=n[1],i=n[2];return t[0]=e*i-o*s,t[1]=o*u-r*i,t[2]=r*s-e*u,t}function lerp(t,a,n,r){let e=a[0],o=a[1],u=a[2];return t[0]=e+r*(n[0]-e),t[1]=o+r*(n[1]-o),t[2]=u+r*(n[2]-u),t}function hermite(t,a,n,r,e,o){let u=o*o,s=u*(2*o-3)+1,i=u*(o-2)+o,l=u*(o-1),c=u*(3-2*o);return t[0]=a[0]*s+n[0]*i+r[0]*l+e[0]*c,t[1]=a[1]*s+n[1]*i+r[1]*l+e[1]*c,t[2]=a[2]*s+n[2]*i+r[2]*l+e[2]*c,t}function bezier(t,a,n,r,e,o){let u=1-o,s=u*u,i=o*o,l=s*u,c=3*o*s,$=3*i*u,f=i*o;return t[0]=a[0]*l+n[0]*c+r[0]*$+e[0]*f,t[1]=a[1]*l+n[1]*c+r[1]*$+e[1]*f,t[2]=a[2]*l+n[2]*c+r[2]*$+e[2]*f,t}function random(t,a){a=a||1;let n=2*RANDOM()*Math.PI,r=2*RANDOM()-1,e=Math.sqrt(1-r*r)*a;return t[0]=Math.cos(n)*e,t[1]=Math.sin(n)*e,t[2]=r*a,t}function transformMat4(t,a,n){let r=a[0],e=a[1],o=a[2],u=n[3]*r+n[7]*e+n[11]*o+n[15];return u=u||1,t[0]=(n[0]*r+n[4]*e+n[8]*o+n[12])/u,t[1]=(n[1]*r+n[5]*e+n[9]*o+n[13])/u,t[2]=(n[2]*r+n[6]*e+n[10]*o+n[14])/u,t}function transformMat3(t,a,n){let r=a[0],e=a[1],o=a[2];return t[0]=r*n[0]+e*n[3]+o*n[6],t[1]=r*n[1]+e*n[4]+o*n[7],t[2]=r*n[2]+e*n[5]+o*n[8],t}function transformQuat(t,a,n){let r=a[0],e=a[1],o=a[2],u=n[0],s=n[1],i=n[2],l=n[3],c=l*r+s*o-i*e,$=l*e+i*r-u*o,f=l*o+u*e-s*r,h=-u*r-s*e-i*o;return t[0]=c*l+h*-u+$*-i-f*-s,t[1]=$*l+h*-s+f*-u-c*-i,t[2]=f*l+h*-i+c*-s-$*-u,t}function rotateX$1(t,a,n,r){let e=[],o=[];return e[0]=a[0]-n[0],e[1]=a[1]-n[1],e[2]=a[2]-n[2],o[0]=e[0],o[1]=e[1]*Math.cos(r)-e[2]*Math.sin(r),o[2]=e[1]*Math.sin(r)+e[2]*Math.cos(r),t[0]=o[0]+n[0],t[1]=o[1]+n[1],t[2]=o[2]+n[2],t}function rotateY$1(t,a,n,r){let e=[],o=[];return e[0]=a[0]-n[0],e[1]=a[1]-n[1],e[2]=a[2]-n[2],o[0]=e[2]*Math.sin(r)+e[0]*Math.cos(r),o[1]=e[1],o[2]=e[2]*Math.cos(r)-e[0]*Math.sin(r),t[0]=o[0]+n[0],t[1]=o[1]+n[1],t[2]=o[2]+n[2],t}function rotateZ$1(t,a,n,r){let e=[],o=[];return e[0]=a[0]-n[0],e[1]=a[1]-n[1],e[2]=a[2]-n[2],o[0]=e[0]*Math.cos(r)-e[1]*Math.sin(r),o[1]=e[0]*Math.sin(r)+e[1]*Math.cos(r),o[2]=e[2],t[0]=o[0]+n[0],t[1]=o[1]+n[1],t[2]=o[2]+n[2],t}function angle(t,a){let n=fromValues$4(t[0],t[1],t[2]),r=fromValues$4(a[0],a[1],a[2]);normalize(n,n),normalize(r,r);let e=dot(n,r);return e>1?0:e<-1?Math.PI:Math.acos(e)}function str$4(t){return"vec3("+t[0]+", "+t[1]+", "+t[2]+")"}function exactEquals$4(t,a){return t[0]===a[0]&&t[1]===a[1]&&t[2]===a[2]}function equals$5(t,a){let n=t[0],r=t[1],e=t[2],o=a[0],u=a[1],s=a[2];return Math.abs(n-o)<=EPSILON*Math.max(1,Math.abs(n),Math.abs(o))&&Math.abs(r-u)<=EPSILON*Math.max(1,Math.abs(r),Math.abs(u))&&Math.abs(e-s)<=EPSILON*Math.max(1,Math.abs(e),Math.abs(s))}const sub$4=subtract$4,mul$4=multiply$4,div=divide,dist=distance,sqrDist=squaredDistance,len=length,sqrLen=squaredLength,forEach=function(){let t=create$4();return function(a,n,r,e,o,u){let s,i;for(n||(n=3),r||(r=0),i=e?Math.min(e*n+r,a.length):a.length,s=r;s<i;s+=n)t[0]=a[s],t[1]=a[s+1],t[2]=a[s+2],o(t,t,u),a[s]=t[0],a[s+1]=t[1],a[s+2]=t[2];return a}}();var vec3=Object.freeze({create:create$4,clone:clone$4,length:length,fromValues:fromValues$4,copy:copy$4,set:set$4,add:add$4,subtract:subtract$4,multiply:multiply$4,divide:divide,ceil:ceil,floor:floor,min:min,max:max,round:round,scale:scale$4,scaleAndAdd:scaleAndAdd,distance:distance,squaredDistance:squaredDistance,squaredLength:squaredLength,negate:negate,inverse:inverse,normalize:normalize,dot:dot,cross:cross,lerp:lerp,hermite:hermite,bezier:bezier,random:random,transformMat4:transformMat4,transformMat3:transformMat3,transformQuat:transformQuat,rotateX:rotateX$1,rotateY:rotateY$1,rotateZ:rotateZ$1,angle:angle,str:str$4,exactEquals:exactEquals$4,equals:equals$5,sub:sub$4,mul:mul$4,div:div,dist:dist,sqrDist:sqrDist,len:len,sqrLen:sqrLen,forEach:forEach});function create$5(){let t=new ARRAY_TYPE(4);return t[0]=0,t[1]=0,t[2]=0,t[3]=0,t}function clone$5(t){let a=new ARRAY_TYPE(4);return a[0]=t[0],a[1]=t[1],a[2]=t[2],a[3]=t[3],a}function fromValues$5(t,a,n,r){let e=new ARRAY_TYPE(4);return e[0]=t,e[1]=a,e[2]=n,e[3]=r,e}function copy$5(t,a){return t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t}function set$5(t,a,n,r,e){return t[0]=a,t[1]=n,t[2]=r,t[3]=e,t}function add$5(t,a,n){return t[0]=a[0]+n[0],t[1]=a[1]+n[1],t[2]=a[2]+n[2],t[3]=a[3]+n[3],t}function subtract$5(t,a,n){return t[0]=a[0]-n[0],t[1]=a[1]-n[1],t[2]=a[2]-n[2],t[3]=a[3]-n[3],t}function multiply$5(t,a,n){return t[0]=a[0]*n[0],t[1]=a[1]*n[1],t[2]=a[2]*n[2],t[3]=a[3]*n[3],t}function divide$1(t,a,n){return t[0]=a[0]/n[0],t[1]=a[1]/n[1],t[2]=a[2]/n[2],t[3]=a[3]/n[3],t}function ceil$1(t,a){return t[0]=Math.ceil(a[0]),t[1]=Math.ceil(a[1]),t[2]=Math.ceil(a[2]),t[3]=Math.ceil(a[3]),t}function floor$1(t,a){return t[0]=Math.floor(a[0]),t[1]=Math.floor(a[1]),t[2]=Math.floor(a[2]),t[3]=Math.floor(a[3]),t}function min$1(t,a,n){return t[0]=Math.min(a[0],n[0]),t[1]=Math.min(a[1],n[1]),t[2]=Math.min(a[2],n[2]),t[3]=Math.min(a[3],n[3]),t}function max$1(t,a,n){return t[0]=Math.max(a[0],n[0]),t[1]=Math.max(a[1],n[1]),t[2]=Math.max(a[2],n[2]),t[3]=Math.max(a[3],n[3]),t}function round$1(t,a){return t[0]=Math.round(a[0]),t[1]=Math.round(a[1]),t[2]=Math.round(a[2]),t[3]=Math.round(a[3]),t}function scale$5(t,a,n){return t[0]=a[0]*n,t[1]=a[1]*n,t[2]=a[2]*n,t[3]=a[3]*n,t}function scaleAndAdd$1(t,a,n,r){return t[0]=a[0]+n[0]*r,t[1]=a[1]+n[1]*r,t[2]=a[2]+n[2]*r,t[3]=a[3]+n[3]*r,t}function distance$1(t,a){let n=a[0]-t[0],r=a[1]-t[1],e=a[2]-t[2],o=a[3]-t[3];return Math.sqrt(n*n+r*r+e*e+o*o)}function squaredDistance$1(t,a){let n=a[0]-t[0],r=a[1]-t[1],e=a[2]-t[2],o=a[3]-t[3];return n*n+r*r+e*e+o*o}function length$1(t){let a=t[0],n=t[1],r=t[2],e=t[3];return Math.sqrt(a*a+n*n+r*r+e*e)}function squaredLength$1(t){let a=t[0],n=t[1],r=t[2],e=t[3];return a*a+n*n+r*r+e*e}function negate$1(t,a){return t[0]=-a[0],t[1]=-a[1],t[2]=-a[2],t[3]=-a[3],t}function inverse$1(t,a){return t[0]=1/a[0],t[1]=1/a[1],t[2]=1/a[2],t[3]=1/a[3],t}function normalize$1(t,a){let n=a[0],r=a[1],e=a[2],o=a[3],u=n*n+r*r+e*e+o*o;return u>0&&(u=1/Math.sqrt(u),t[0]=n*u,t[1]=r*u,t[2]=e*u,t[3]=o*u),t}function dot$1(t,a){return t[0]*a[0]+t[1]*a[1]+t[2]*a[2]+t[3]*a[3]}function lerp$1(t,a,n,r){let e=a[0],o=a[1],u=a[2],s=a[3];return t[0]=e+r*(n[0]-e),t[1]=o+r*(n[1]-o),t[2]=u+r*(n[2]-u),t[3]=s+r*(n[3]-s),t}function random$1(t,a){return a=a||1,t[0]=RANDOM(),t[1]=RANDOM(),t[2]=RANDOM(),t[3]=RANDOM(),normalize$1(t,t),scale$5(t,t,a),t}function transformMat4$1(t,a,n){let r=a[0],e=a[1],o=a[2],u=a[3];return t[0]=n[0]*r+n[4]*e+n[8]*o+n[12]*u,t[1]=n[1]*r+n[5]*e+n[9]*o+n[13]*u,t[2]=n[2]*r+n[6]*e+n[10]*o+n[14]*u,t[3]=n[3]*r+n[7]*e+n[11]*o+n[15]*u,t}function transformQuat$1(t,a,n){let r=a[0],e=a[1],o=a[2],u=n[0],s=n[1],i=n[2],l=n[3],c=l*r+s*o-i*e,$=l*e+i*r-u*o,f=l*o+u*e-s*r,h=-u*r-s*e-i*o;return t[0]=c*l+h*-u+$*-i-f*-s,t[1]=$*l+h*-s+f*-u-c*-i,t[2]=f*l+h*-i+c*-s-$*-u,t[3]=a[3],t}function str$5(t){return"vec4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"}function exactEquals$5(t,a){return t[0]===a[0]&&t[1]===a[1]&&t[2]===a[2]&&t[3]===a[3]}function equals$6(t,a){let n=t[0],r=t[1],e=t[2],o=t[3],u=a[0],s=a[1],i=a[2],l=a[3];return Math.abs(n-u)<=EPSILON*Math.max(1,Math.abs(n),Math.abs(u))&&Math.abs(r-s)<=EPSILON*Math.max(1,Math.abs(r),Math.abs(s))&&Math.abs(e-i)<=EPSILON*Math.max(1,Math.abs(e),Math.abs(i))&&Math.abs(o-l)<=EPSILON*Math.max(1,Math.abs(o),Math.abs(l))}const sub$5=subtract$5,mul$5=multiply$5,div$1=divide$1,dist$1=distance$1,sqrDist$1=squaredDistance$1,len$1=length$1,sqrLen$1=squaredLength$1,forEach$1=function(){let t=create$5();return function(a,n,r,e,o,u){let s,i;for(n||(n=4),r||(r=0),i=e?Math.min(e*n+r,a.length):a.length,s=r;s<i;s+=n)t[0]=a[s],t[1]=a[s+1],t[2]=a[s+2],t[3]=a[s+3],o(t,t,u),a[s]=t[0],a[s+1]=t[1],a[s+2]=t[2],a[s+3]=t[3];return a}}();var vec4=Object.freeze({create:create$5,clone:clone$5,fromValues:fromValues$5,copy:copy$5,set:set$5,add:add$5,subtract:subtract$5,multiply:multiply$5,divide:divide$1,ceil:ceil$1,floor:floor$1,min:min$1,max:max$1,round:round$1,scale:scale$5,scaleAndAdd:scaleAndAdd$1,distance:distance$1,squaredDistance:squaredDistance$1,length:length$1,squaredLength:squaredLength$1,negate:negate$1,inverse:inverse$1,normalize:normalize$1,dot:dot$1,lerp:lerp$1,random:random$1,transformMat4:transformMat4$1,transformQuat:transformQuat$1,str:str$5,exactEquals:exactEquals$5,equals:equals$6,sub:sub$5,mul:mul$5,div:div$1,dist:dist$1,sqrDist:sqrDist$1,len:len$1,sqrLen:sqrLen$1,forEach:forEach$1});function create$6(){let t=new ARRAY_TYPE(4);return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t}function identity$4(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t}function setAxisAngle(t,a,n){n*=.5;let r=Math.sin(n);return t[0]=r*a[0],t[1]=r*a[1],t[2]=r*a[2],t[3]=Math.cos(n),t}function getAxisAngle(t,a){let n=2*Math.acos(a[3]),r=Math.sin(n/2);return 0!=r?(t[0]=a[0]/r,t[1]=a[1]/r,t[2]=a[2]/r):(t[0]=1,t[1]=0,t[2]=0),n}function multiply$6(t,a,n){let r=a[0],e=a[1],o=a[2],u=a[3],s=n[0],i=n[1],l=n[2],c=n[3];return t[0]=r*c+u*s+e*l-o*i,t[1]=e*c+u*i+o*s-r*l,t[2]=o*c+u*l+r*i-e*s,t[3]=u*c-r*s-e*i-o*l,t}function rotateX$2(t,a,n){n*=.5;let r=a[0],e=a[1],o=a[2],u=a[3],s=Math.sin(n),i=Math.cos(n);return t[0]=r*i+u*s,t[1]=e*i+o*s,t[2]=o*i-e*s,t[3]=u*i-r*s,t}function rotateY$2(t,a,n){n*=.5;let r=a[0],e=a[1],o=a[2],u=a[3],s=Math.sin(n),i=Math.cos(n);return t[0]=r*i-o*s,t[1]=e*i+u*s,t[2]=o*i+r*s,t[3]=u*i-e*s,t}function rotateZ$2(t,a,n){n*=.5;let r=a[0],e=a[1],o=a[2],u=a[3],s=Math.sin(n),i=Math.cos(n);return t[0]=r*i+e*s,t[1]=e*i-r*s,t[2]=o*i+u*s,t[3]=u*i-o*s,t}function calculateW(t,a){let n=a[0],r=a[1],e=a[2];return t[0]=n,t[1]=r,t[2]=e,t[3]=Math.sqrt(Math.abs(1-n*n-r*r-e*e)),t}function slerp(t,a,n,r){let e,o,u,s,i,l=a[0],c=a[1],$=a[2],f=a[3],h=n[0],M=n[1],m=n[2],d=n[3];return(o=l*h+c*M+$*m+f*d)<0&&(o=-o,h=-h,M=-M,m=-m,d=-d),1-o>1e-6?(e=Math.acos(o),u=Math.sin(e),s=Math.sin((1-r)*e)/u,i=Math.sin(r*e)/u):(s=1-r,i=r),t[0]=s*l+i*h,t[1]=s*c+i*M,t[2]=s*$+i*m,t[3]=s*f+i*d,t}function invert$4(t,a){let n=a[0],r=a[1],e=a[2],o=a[3],u=n*n+r*r+e*e+o*o,s=u?1/u:0;return t[0]=-n*s,t[1]=-r*s,t[2]=-e*s,t[3]=o*s,t}function conjugate(t,a){return t[0]=-a[0],t[1]=-a[1],t[2]=-a[2],t[3]=a[3],t}function fromMat3(t,a){let n,r=a[0]+a[4]+a[8];if(r>0)n=Math.sqrt(r+1),t[3]=.5*n,n=.5/n,t[0]=(a[5]-a[7])*n,t[1]=(a[6]-a[2])*n,t[2]=(a[1]-a[3])*n;else{let r=0;a[4]>a[0]&&(r=1),a[8]>a[3*r+r]&&(r=2);let e=(r+1)%3,o=(r+2)%3;n=Math.sqrt(a[3*r+r]-a[3*e+e]-a[3*o+o]+1),t[r]=.5*n,n=.5/n,t[3]=(a[3*e+o]-a[3*o+e])*n,t[e]=(a[3*e+r]+a[3*r+e])*n,t[o]=(a[3*o+r]+a[3*r+o])*n}return t}function fromEuler(t,a,n,r){let e=.5*Math.PI/180;a*=e,n*=e,r*=e;let o=Math.sin(a),u=Math.cos(a),s=Math.sin(n),i=Math.cos(n),l=Math.sin(r),c=Math.cos(r);return t[0]=o*i*c-u*s*l,t[1]=u*s*c+o*i*l,t[2]=u*i*l-o*s*c,t[3]=u*i*c+o*s*l,t}function str$6(t){return"quat("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"}const clone$6=clone$5,fromValues$6=fromValues$5,copy$6=copy$5,set$6=set$5,add$6=add$5,mul$6=multiply$6,scale$6=scale$5,dot$2=dot$1,lerp$2=lerp$1,length$2=length$1,len$2=length$2,squaredLength$2=squaredLength$1,sqrLen$2=squaredLength$2,normalize$2=normalize$1,exactEquals$6=exactEquals$5,equals$7=equals$6,rotationTo=function(){let t=create$4(),a=fromValues$4(1,0,0),n=fromValues$4(0,1,0);return function(r,e,o){let u=dot(e,o);return u<-.999999?(cross(t,a,e),len(t)<1e-6&&cross(t,n,e),normalize(t,t),setAxisAngle(r,t,Math.PI),r):u>.999999?(r[0]=0,r[1]=0,r[2]=0,r[3]=1,r):(cross(t,e,o),r[0]=t[0],r[1]=t[1],r[2]=t[2],r[3]=1+u,normalize$2(r,r))}}(),sqlerp=function(){let t=create$6(),a=create$6();return function(n,r,e,o,u,s){return slerp(t,r,u,s),slerp(a,e,o,s),slerp(n,t,a,2*s*(1-s)),n}}(),setAxes=function(){let t=create$2();return function(a,n,r,e){return t[0]=r[0],t[3]=r[1],t[6]=r[2],t[1]=e[0],t[4]=e[1],t[7]=e[2],t[2]=-n[0],t[5]=-n[1],t[8]=-n[2],normalize$2(a,fromMat3(a,t))}}();var quat=Object.freeze({create:create$6,identity:identity$4,setAxisAngle:setAxisAngle,getAxisAngle:getAxisAngle,multiply:multiply$6,rotateX:rotateX$2,rotateY:rotateY$2,rotateZ:rotateZ$2,calculateW:calculateW,slerp:slerp,invert:invert$4,conjugate:conjugate,fromMat3:fromMat3,fromEuler:fromEuler,str:str$6,clone:clone$6,fromValues:fromValues$6,copy:copy$6,set:set$6,add:add$6,mul:mul$6,scale:scale$6,dot:dot$2,lerp:lerp$2,length:length$2,len:len$2,squaredLength:squaredLength$2,sqrLen:sqrLen$2,normalize:normalize$2,exactEquals:exactEquals$6,equals:equals$7,rotationTo:rotationTo,sqlerp:sqlerp,setAxes:setAxes});function create$7(){let t=new ARRAY_TYPE(2);return t[0]=0,t[1]=0,t}function clone$7(t){let a=new ARRAY_TYPE(2);return a[0]=t[0],a[1]=t[1],a}function fromValues$7(t,a){let n=new ARRAY_TYPE(2);return n[0]=t,n[1]=a,n}function copy$7(t,a){return t[0]=a[0],t[1]=a[1],t}function set$7(t,a,n){return t[0]=a,t[1]=n,t}function add$7(t,a,n){return t[0]=a[0]+n[0],t[1]=a[1]+n[1],t}function subtract$6(t,a,n){return t[0]=a[0]-n[0],t[1]=a[1]-n[1],t}function multiply$7(t,a,n){return t[0]=a[0]*n[0],t[1]=a[1]*n[1],t}function divide$2(t,a,n){return t[0]=a[0]/n[0],t[1]=a[1]/n[1],t}function ceil$2(t,a){return t[0]=Math.ceil(a[0]),t[1]=Math.ceil(a[1]),t}function floor$2(t,a){return t[0]=Math.floor(a[0]),t[1]=Math.floor(a[1]),t}function min$2(t,a,n){return t[0]=Math.min(a[0],n[0]),t[1]=Math.min(a[1],n[1]),t}function max$2(t,a,n){return t[0]=Math.max(a[0],n[0]),t[1]=Math.max(a[1],n[1]),t}function round$2(t,a){return t[0]=Math.round(a[0]),t[1]=Math.round(a[1]),t}function scale$7(t,a,n){return t[0]=a[0]*n,t[1]=a[1]*n,t}function scaleAndAdd$2(t,a,n,r){return t[0]=a[0]+n[0]*r,t[1]=a[1]+n[1]*r,t}function distance$2(t,a){var n=a[0]-t[0],r=a[1]-t[1];return Math.sqrt(n*n+r*r)}function squaredDistance$2(t,a){var n=a[0]-t[0],r=a[1]-t[1];return n*n+r*r}function length$3(t){var a=t[0],n=t[1];return Math.sqrt(a*a+n*n)}function squaredLength$3(t){var a=t[0],n=t[1];return a*a+n*n}function negate$2(t,a){return t[0]=-a[0],t[1]=-a[1],t}function inverse$2(t,a){return t[0]=1/a[0],t[1]=1/a[1],t}function normalize$3(t,a){var n=a[0],r=a[1],e=n*n+r*r;return e>0&&(e=1/Math.sqrt(e),t[0]=a[0]*e,t[1]=a[1]*e),t}function dot$3(t,a){return t[0]*a[0]+t[1]*a[1]}function cross$1(t,a,n){var r=a[0]*n[1]-a[1]*n[0];return t[0]=t[1]=0,t[2]=r,t}function lerp$3(t,a,n,r){var e=a[0],o=a[1];return t[0]=e+r*(n[0]-e),t[1]=o+r*(n[1]-o),t}function random$2(t,a){a=a||1;var n=2*RANDOM()*Math.PI;return t[0]=Math.cos(n)*a,t[1]=Math.sin(n)*a,t}function transformMat2(t,a,n){var r=a[0],e=a[1];return t[0]=n[0]*r+n[2]*e,t[1]=n[1]*r+n[3]*e,t}function transformMat2d(t,a,n){var r=a[0],e=a[1];return t[0]=n[0]*r+n[2]*e+n[4],t[1]=n[1]*r+n[3]*e+n[5],t}function transformMat3$1(t,a,n){var r=a[0],e=a[1];return t[0]=n[0]*r+n[3]*e+n[6],t[1]=n[1]*r+n[4]*e+n[7],t}function transformMat4$2(t,a,n){let r=a[0],e=a[1];return t[0]=n[0]*r+n[4]*e+n[12],t[1]=n[1]*r+n[5]*e+n[13],t}function str$7(t){return"vec2("+t[0]+", "+t[1]+")"}function exactEquals$7(t,a){return t[0]===a[0]&&t[1]===a[1]}function equals$8(t,a){let n=t[0],r=t[1],e=a[0],o=a[1];return Math.abs(n-e)<=EPSILON*Math.max(1,Math.abs(n),Math.abs(e))&&Math.abs(r-o)<=EPSILON*Math.max(1,Math.abs(r),Math.abs(o))}const len$3=length$3,sub$6=subtract$6,mul$7=multiply$7,div$2=divide$2,dist$2=distance$2,sqrDist$2=squaredDistance$2,sqrLen$3=squaredLength$3,forEach$2=function(){let t=create$7();return function(a,n,r,e,o,u){let s,i;for(n||(n=2),r||(r=0),i=e?Math.min(e*n+r,a.length):a.length,s=r;s<i;s+=n)t[0]=a[s],t[1]=a[s+1],o(t,t,u),a[s]=t[0],a[s+1]=t[1];return a}}();var vec2=Object.freeze({create:create$7,clone:clone$7,fromValues:fromValues$7,copy:copy$7,set:set$7,add:add$7,subtract:subtract$6,multiply:multiply$7,divide:divide$2,ceil:ceil$2,floor:floor$2,min:min$2,max:max$2,round:round$2,scale:scale$7,scaleAndAdd:scaleAndAdd$2,distance:distance$2,squaredDistance:squaredDistance$2,length:length$3,squaredLength:squaredLength$3,negate:negate$2,inverse:inverse$2,normalize:normalize$3,dot:dot$3,cross:cross$1,lerp:lerp$3,random:random$2,transformMat2:transformMat2,transformMat2d:transformMat2d,transformMat3:transformMat3$1,transformMat4:transformMat4$2,str:str$7,exactEquals:exactEquals$7,equals:equals$8,len:len$3,sub:sub$6,mul:mul$7,div:div$2,dist:dist$2,sqrDist:sqrDist$2,sqrLen:sqrLen$3,forEach:forEach$2});export{common as glMatrix,mat2,mat2d,mat3,mat4,quat,vec2,vec3,vec4};
//# sourceMappingURL=gl-matrix.es.min.js.map
