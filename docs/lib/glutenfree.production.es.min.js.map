{"version":3,"file":"glutenfree.production.es.min.js","sources":["../build/assert.js","../build/glutil.js","../build/array.js","../build/command.js","../build/device.js","../build/vertex-buffer.js","../build/element-buffer.js","../build/vertex-array.js","../build/framebuffer.js","../build/texture.js"],"sourcesContent":["/**\n * This file is an exercise in proprocessor voodoo.\n *\n * \"process.env.NODE_ENV\", gets suplied by the string replacer during a\n * custom build or our production build. If \"production\", constant evaluation\n * will eliminate the if blocks, making the functions no-ops, in turn eligible\n * for elimination from their callsites.\n *\n * While cool, this disables us to return values from the asserts, which would\n * make for a slightly nice programming model: const checkedVal = truthy(val)\n */\n// This does not get replaced and serves as a default velue. If all its uses\n// are eliminated, the value itself is pruned as well.\nconst process = {\n    env: {\n        NODE_ENV: \"development\",\n    },\n};\nexport function nonNull(p, name, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof p === \"undefined\" || typeof p === \"object\" && !p) {\n            throw new Error(msg || fmt(`object ${name || \"\"} ${p}`));\n        }\n    }\n}\nexport function nonEmpty(p, name, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!p || !p.length) {\n            throw new Error(msg || fmt(`array ${name || \"\"} empty`));\n        }\n    }\n}\nexport function equal(p, val, name, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (p !== val) {\n            throw new Error(msg || fmt(`${name || \"\"} values not equal: ${p} ${val}`));\n        }\n    }\n}\nexport function range(p, start, end, name, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (p < start || p > end) {\n            throw new Error(msg || fmt(`${name || \"\"} value ${p} not in [${start}, ${end}]`));\n        }\n    }\n}\nexport function never(p, msg) {\n    // \"never\" can not be eliminated, as its \"return value\" is actually captured\n    // at the callsites. It should never be invoked, though.\n    throw new Error(msg || fmt(`Unexpected object: ${p}`));\n}\nfunction fmt(msg) {\n    return `Assertion Failed: ${msg}`;\n}\n//# sourceMappingURL=assert.js.map","/*\n███████╗██╗  ██╗ █████╗ ██████╗ ███████╗██████╗\n██╔════╝██║  ██║██╔══██╗██╔══██╗██╔════╝██╔══██╗\n███████╗███████║███████║██║  ██║█████╗  ██████╔╝\n╚════██║██╔══██║██╔══██║██║  ██║██╔══╝  ██╔══██╗\n███████║██║  ██║██║  ██║██████╔╝███████╗██║  ██║\n╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝ ╚══════╝╚═╝  ╚═╝\n*/\nexport function createProgram(gl, vertex, fragment) {\n    const program = gl.createProgram();\n    if (!program) {\n        throw new Error(\"Could not create Program\");\n    }\n    gl.attachShader(program, vertex);\n    gl.attachShader(program, fragment);\n    gl.linkProgram(program);\n    if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        return program;\n    }\n    const msg = gl.getProgramInfoLog(program);\n    gl.deleteProgram(program);\n    throw new Error(`Could not link shader program: ${msg}`);\n}\nexport function createShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    if (!shader) {\n        throw new Error(\"Could not create Shader\");\n    }\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        return shader;\n    }\n    const msg = gl.getShaderInfoLog(shader);\n    gl.deleteShader(shader);\n    const prettySource = source\n        .split(\"\\n\")\n        .map((l, i) => `${i + 1}: ${l}`)\n        .join(\"\\n\");\n    throw new Error(`Could not compile shader:\\n${msg}\\n${prettySource}`);\n}\n//# sourceMappingURL=glutil.js.map","/**\n * Chacks whether array is at least 2d, mostly useful because of return type\n * predicate.\n */\nexport function isArray2(array) {\n    return !!array.length && Array.isArray(array[0]);\n}\nexport function shape2(array) {\n    const outer = array.length;\n    const inner = outer ? array[0].length : 0;\n    return [outer, inner];\n}\nexport function ravel2(unraveled, shape) {\n    const [outer, inner] = shape;\n    const raveled = new Array(inner * outer);\n    unraveled.forEach((arr, i) => {\n        arr.forEach((elem, j) => {\n            raveled[inner * i + j] = elem;\n        });\n    });\n    return raveled;\n}\n//# sourceMappingURL=array.js.map","import * as assert from \"./assert\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nimport { VertexArray } from \"./vertex-array\";\nimport { Framebuffer } from \"./framebuffer\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nconst UNKNOWN_ATTRIB_LOCATION = -1;\nexport var DepthFunc;\n(function (DepthFunc) {\n    DepthFunc[DepthFunc[\"ALWAYS\"] = 519] = \"ALWAYS\";\n    DepthFunc[DepthFunc[\"NEVER\"] = 512] = \"NEVER\";\n    DepthFunc[DepthFunc[\"EQUAL\"] = 514] = \"EQUAL\";\n    DepthFunc[DepthFunc[\"NOTEQUAL\"] = 517] = \"NOTEQUAL\";\n    DepthFunc[DepthFunc[\"LESS\"] = 513] = \"LESS\";\n    DepthFunc[DepthFunc[\"LEQUAL\"] = 515] = \"LEQUAL\";\n    DepthFunc[DepthFunc[\"GREATER\"] = 516] = \"GREATER\";\n    DepthFunc[DepthFunc[\"GEQUAL\"] = 518] = \"GEQUAL\";\n})(DepthFunc || (DepthFunc = {}));\nexport var StencilFunc;\n(function (StencilFunc) {\n    StencilFunc[StencilFunc[\"ALWAYS\"] = 519] = \"ALWAYS\";\n    StencilFunc[StencilFunc[\"NEVER\"] = 512] = \"NEVER\";\n    StencilFunc[StencilFunc[\"EQUAL\"] = 514] = \"EQUAL\";\n    StencilFunc[StencilFunc[\"NOTEQUAL\"] = 517] = \"NOTEQUAL\";\n    StencilFunc[StencilFunc[\"LESS\"] = 513] = \"LESS\";\n    StencilFunc[StencilFunc[\"LEQUAL\"] = 515] = \"LEQUAL\";\n    StencilFunc[StencilFunc[\"GREATER\"] = 516] = \"GREATER\";\n    StencilFunc[StencilFunc[\"GEQUAL\"] = 518] = \"GEQUAL\";\n})(StencilFunc || (StencilFunc = {}));\nexport var StencilOp;\n(function (StencilOp) {\n    StencilOp[StencilOp[\"KEEP\"] = 7680] = \"KEEP\";\n    StencilOp[StencilOp[\"ZERO\"] = 0] = \"ZERO\";\n    StencilOp[StencilOp[\"REPLACE\"] = 7681] = \"REPLACE\";\n    StencilOp[StencilOp[\"INCR\"] = 7682] = \"INCR\";\n    StencilOp[StencilOp[\"INCR_WRAP\"] = 34055] = \"INCR_WRAP\";\n    StencilOp[StencilOp[\"DECR\"] = 7683] = \"DECR\";\n    StencilOp[StencilOp[\"DECR_WRAP\"] = 34056] = \"DECR_WRAP\";\n    StencilOp[StencilOp[\"INVERT\"] = 5386] = \"INVERT\";\n})(StencilOp || (StencilOp = {}));\nexport var BlendFunc;\n(function (BlendFunc) {\n    BlendFunc[BlendFunc[\"ZERO\"] = 0] = \"ZERO\";\n    BlendFunc[BlendFunc[\"ONE\"] = 1] = \"ONE\";\n    BlendFunc[BlendFunc[\"SRC_COLOR\"] = 768] = \"SRC_COLOR\";\n    BlendFunc[BlendFunc[\"SRC_ALPHA\"] = 770] = \"SRC_ALPHA\";\n    BlendFunc[BlendFunc[\"ONE_MINUS_SRC_COLOR\"] = 769] = \"ONE_MINUS_SRC_COLOR\";\n    BlendFunc[BlendFunc[\"ONE_MINUS_SRC_ALPHA\"] = 771] = \"ONE_MINUS_SRC_ALPHA\";\n    BlendFunc[BlendFunc[\"DST_COLOR\"] = 774] = \"DST_COLOR\";\n    BlendFunc[BlendFunc[\"DST_ALPHA\"] = 772] = \"DST_ALPHA\";\n    BlendFunc[BlendFunc[\"ONE_MINUS_DST_COLOR\"] = 775] = \"ONE_MINUS_DST_COLOR\";\n    BlendFunc[BlendFunc[\"ONE_MINUS_DST_ALPHA\"] = 773] = \"ONE_MINUS_DST_ALPHA\";\n    BlendFunc[BlendFunc[\"CONSTANT_COLOR\"] = 32769] = \"CONSTANT_COLOR\";\n    BlendFunc[BlendFunc[\"CONSTANT_ALPHA\"] = 32771] = \"CONSTANT_ALPHA\";\n    BlendFunc[BlendFunc[\"ONE_MINUS_CONSTANT_COLOR\"] = 32770] = \"ONE_MINUS_CONSTANT_COLOR\";\n    BlendFunc[BlendFunc[\"ONE_MINUS_CONSTANT_ALPHA\"] = 32772] = \"ONE_MINUS_CONSTANT_ALPHA\";\n})(BlendFunc || (BlendFunc = {}));\nexport var BlendEquation;\n(function (BlendEquation) {\n    BlendEquation[BlendEquation[\"FUNC_ADD\"] = 32774] = \"FUNC_ADD\";\n    BlendEquation[BlendEquation[\"FUNC_SUBTRACT\"] = 32778] = \"FUNC_SUBTRACT\";\n    BlendEquation[BlendEquation[\"FUNC_REVERSE_SUBTRACT\"] = 32779] = \"FUNC_REVERSE_SUBTRACT\";\n    BlendEquation[BlendEquation[\"MIN\"] = 32775] = \"MIN\";\n    BlendEquation[BlendEquation[\"MAX\"] = 32776] = \"MAX\";\n})(BlendEquation || (BlendEquation = {}));\nexport class Command {\n    constructor(gl, glProgram, uniformDescrs, count, offset, primitive, vertexArrayAcc, framebufferAcc, depthDescr, stencilDescr, blendDescr) {\n        this.gl = gl;\n        this.glProgram = glProgram;\n        this.primitive = typeof primitive === \"number\" ? primitive : undefined;\n        this.uniformDescrs = uniformDescrs;\n        this.count = count;\n        this.offset = offset;\n        this.vertexArrayAcc = vertexArrayAcc;\n        this.framebufferAcc = framebufferAcc;\n        this.depthDescr = depthDescr;\n        this.stencilDescr = stencilDescr;\n        this.blendDescr = blendDescr;\n        this.currVao = null;\n        this.currFbo = null;\n    }\n    static create(dev, { vert, frag, uniforms = {}, data, framebuffer, count = 0, offset = 0, primitive, depth, stencil, blend, }) {\n        assert.nonNull(vert, \"vert\");\n        assert.nonNull(frag, \"frag\");\n        assert.nonNull(data, \"data\");\n        if (depth) {\n            assert.nonNull(depth.func, \"depth.func\");\n        }\n        if (blend) {\n            assert.nonNull(blend.func, \"blend.func\");\n            assert.nonNull(blend.func.src, \"blend.func.src\");\n            assert.nonNull(blend.func.dst, \"blend.func.dst\");\n            if (typeof blend.func.src === \"object\") {\n                assert.nonNull(blend.func.src.rgb, \"blend.func.src.rgb\");\n                assert.nonNull(blend.func.src.alpha, \"blend.func.src.alpha\");\n            }\n            if (typeof blend.func.dst === \"object\") {\n                assert.nonNull(blend.func.dst.rgb, \"blend.func.dst.rgb\");\n                assert.nonNull(blend.func.dst.alpha, \"blend.func.dst.alpha\");\n            }\n        }\n        if (stencil) {\n            assert.nonNull(stencil.func, \"stencil.func\");\n            // TODO: complete stencil validation... validation framework?\n        }\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const vs = glutil.createShader(gl, gl.VERTEX_SHADER, vert);\n        const fs = glutil.createShader(gl, gl.FRAGMENT_SHADER, frag);\n        const prog = glutil.createProgram(gl, vs, fs);\n        gl.deleteShader(vs);\n        gl.deleteShader(fs);\n        const uniformDescrs = Object.entries(uniforms)\n            .map(([ident, uniform]) => {\n            const loc = gl.getUniformLocation(prog, ident);\n            if (!loc) {\n                throw new Error(`No location for uniform: ${ident}`);\n            }\n            return new UniformDescriptor(ident, loc, uniform);\n        });\n        const vertexArrayAcc = data\n            ? typeof data === \"function\" || data instanceof VertexArray\n                ? data\n                : VertexArray.create(dev, locate(gl, prog, data))\n            : undefined;\n        const framebufferAcc = framebuffer\n            ? typeof framebuffer === \"function\" || framebuffer instanceof Framebuffer\n                ? framebuffer\n                : Framebuffer.create(gl, framebuffer)\n            : undefined;\n        const depthDescr = parseDepth(depth);\n        const stencilDescr = parseStencil(stencil);\n        const blendDescr = parseBlend(blend);\n        return new Command(gl, prog, uniformDescrs, count, offset, primitive, vertexArrayAcc, framebufferAcc, depthDescr, stencilDescr, blendDescr);\n    }\n    execute(props) {\n        const { gl, glProgram } = this;\n        /*\n        When batching (passing in an array of props), the price for\n        gl.useProgram, enabling depth/stencil tests and blending is paid only\n        once for all draw calls.\n        */\n        gl.useProgram(glProgram);\n        this.beginDepth();\n        this.beginStencil();\n        this.beginBlend();\n        if (Array.isArray(props)) {\n            props.forEach((p, i) => this.executeInner(p, i));\n        }\n        else {\n            this.executeInner(props, 0);\n        }\n        // FBOs and VAOs are bound without unbinding in the inner loop\n        this.unbindFbo();\n        this.unbindVao();\n        this.endBlend();\n        this.endStencil();\n        this.endDepth();\n        gl.useProgram(null);\n    }\n    locate(vertexArrayProps) {\n        return locate(this.gl, this.glProgram, vertexArrayProps);\n    }\n    executeInner(props, index) {\n        const { gl, primitive, count, offset, vertexArrayAcc, framebufferAcc, } = this;\n        /*\n        Enabling multiple FBOs and VAOs per draw batch is a nice feature. We\n        cache currently bound FBO/VAO to prevent needless rebinding.\n        */\n        let bufferWidth = gl.drawingBufferWidth;\n        let bufferHeight = gl.drawingBufferHeight;\n        const fbo = framebufferAcc && access(props, index, framebufferAcc);\n        if (fbo) {\n            this.bindFbo(fbo);\n            bufferWidth = fbo.width;\n            bufferHeight = fbo.height;\n        }\n        gl.viewport(0, 0, bufferWidth, bufferHeight);\n        this.updateUniforms(props, index);\n        const vao = vertexArrayAcc && access(props, index, vertexArrayAcc);\n        if (vao) {\n            this.bindVao(vao);\n            const prim = typeof primitive === \"undefined\"\n                ? typeof vao.elementPrimitive === \"undefined\"\n                    ? gl.TRIANGLES\n                    : vao.elementPrimitive\n                : primitive;\n            const cnt = count ? Math.min(count, vao.count) : vao.count;\n            if (vao.hasElements) {\n                const ty = vao.elementType;\n                this.drawElements(prim, cnt, ty, offset, vao.instanceCount);\n            }\n            else {\n                this.drawArrays(prim, cnt, offset, vao.instanceCount);\n            }\n        }\n        else {\n            this.drawArrays(typeof primitive === \"undefined\" ? gl.TRIANGLES : primitive, count, offset, 0);\n        }\n    }\n    bindVao(vao) {\n        if (vao !== this.currVao) {\n            this.currVao = vao;\n            this.gl.bindVertexArray(vao.glVertexArray);\n        }\n    }\n    unbindVao() {\n        this.gl.bindVertexArray(null);\n        this.currVao = null;\n    }\n    bindFbo(fbo) {\n        const gl = this.gl;\n        if (fbo !== this.currFbo) {\n            this.currFbo = fbo;\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n            gl.drawBuffers(fbo.glColorAttachments);\n        }\n    }\n    unbindFbo() {\n        const gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        this.currFbo = null;\n    }\n    beginDepth() {\n        const { gl, depthDescr } = this;\n        if (depthDescr) {\n            gl.enable(gl.DEPTH_TEST);\n            gl.depthFunc(depthDescr.func);\n            gl.depthMask(depthDescr.mask);\n            gl.depthRange(depthDescr.rangeStart, depthDescr.rangeEnd);\n        }\n    }\n    endDepth() {\n        const { gl, depthDescr } = this;\n        if (depthDescr) {\n            gl.disable(gl.DEPTH_TEST);\n        }\n    }\n    beginStencil() {\n        const { gl, stencilDescr } = this;\n        if (stencilDescr) {\n            const { fFunc, bFunc, fFuncRef, bfuncRef, fFuncMask, bFuncMask, fMask, bMask, fOpFail, bOpFail, fOpZFail, bOpZFail, fOpZPass, bOpZPass, } = stencilDescr;\n            gl.enable(gl.STENCIL_TEST);\n            gl.stencilFuncSeparate(gl.FRONT, fFunc, fFuncRef, fFuncMask);\n            gl.stencilFuncSeparate(gl.BACK, bFunc, bfuncRef, bFuncMask);\n            gl.stencilMaskSeparate(gl.FRONT, fMask);\n            gl.stencilMaskSeparate(gl.BACK, bMask);\n            gl.stencilOpSeparate(gl.FRONT, fOpFail, fOpZFail, fOpZPass);\n            gl.stencilOpSeparate(gl.BACK, bOpFail, bOpZFail, bOpZPass);\n        }\n    }\n    endStencil() {\n        const { gl, stencilDescr } = this;\n        if (stencilDescr) {\n            gl.disable(gl.STENCIL_TEST);\n        }\n    }\n    beginBlend() {\n        const { gl, blendDescr } = this;\n        if (blendDescr) {\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(blendDescr.srcRGB, blendDescr.dstRGB, blendDescr.srcAlpha, blendDescr.dstAlpha);\n            gl.blendEquationSeparate(blendDescr.equationRGB, blendDescr.equationAlpha);\n            if (blendDescr.color) {\n                const [r, g, b, a] = blendDescr.color;\n                gl.blendColor(r, g, b, a);\n            }\n        }\n    }\n    endBlend() {\n        const { gl, blendDescr } = this;\n        if (blendDescr) {\n            gl.disable(gl.BLEND);\n        }\n    }\n    drawArrays(primitive, count, offset, instCount) {\n        if (instCount) {\n            this.gl.drawArraysInstanced(primitive, offset, count, instCount);\n        }\n        else {\n            this.gl.drawArrays(primitive, offset, count);\n        }\n    }\n    drawElements(primitive, count, type, offset, instCount) {\n        const gl = this.gl;\n        if (instCount) {\n            gl.drawElementsInstanced(primitive, count, type, offset, instCount);\n        }\n        else {\n            gl.drawElements(primitive, count, type, offset);\n        }\n    }\n    updateUniforms(props, index) {\n        const gl = this.gl;\n        let textureUnitOffset = 0;\n        this.uniformDescrs.forEach(({ identifier: ident, location: loc, definition: def, }) => {\n            switch (def.type) {\n                case \"1f\":\n                    gl.uniform1f(loc, access(props, index, def.value));\n                    break;\n                case \"1fv\":\n                    gl.uniform1fv(loc, access(props, index, def.value));\n                    break;\n                case \"1i\":\n                    gl.uniform1i(loc, access(props, index, def.value));\n                    break;\n                case \"1iv\":\n                    gl.uniform1iv(loc, access(props, index, def.value));\n                    break;\n                case \"1ui\":\n                    gl.uniform1ui(loc, access(props, index, def.value));\n                    break;\n                case \"1uiv\":\n                    gl.uniform1uiv(loc, access(props, index, def.value));\n                    break;\n                case \"2f\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2f(loc, x, y);\n                    break;\n                }\n                case \"2fv\":\n                    gl.uniform2fv(loc, access(props, index, def.value));\n                    break;\n                case \"2i\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2i(loc, x, y);\n                    break;\n                }\n                case \"2iv\":\n                    gl.uniform2iv(loc, access(props, index, def.value));\n                    break;\n                case \"2ui\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2ui(loc, x, y);\n                    break;\n                }\n                case \"2uiv\":\n                    gl.uniform2uiv(loc, access(props, index, def.value));\n                    break;\n                case \"3f\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3f(loc, x, y, z);\n                    break;\n                }\n                case \"3fv\":\n                    gl.uniform3fv(loc, access(props, index, def.value));\n                    break;\n                case \"3i\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3i(loc, x, y, z);\n                    break;\n                }\n                case \"3iv\":\n                    gl.uniform3iv(loc, access(props, index, def.value));\n                    break;\n                case \"3ui\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3ui(loc, x, y, z);\n                    break;\n                }\n                case \"3uiv\":\n                    gl.uniform3uiv(loc, access(props, index, def.value));\n                    break;\n                case \"4f\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4f(loc, x, y, z, w);\n                    break;\n                }\n                case \"4fv\":\n                    gl.uniform4fv(loc, access(props, index, def.value));\n                    break;\n                case \"4i\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4i(loc, x, y, z, w);\n                    break;\n                }\n                case \"4iv\":\n                    gl.uniform4iv(loc, access(props, index, def.value));\n                    break;\n                case \"4ui\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4ui(loc, x, y, z, w);\n                    break;\n                }\n                case \"4uiv\":\n                    gl.uniform4uiv(loc, access(props, index, def.value));\n                    break;\n                case \"matrix2fv\":\n                    gl.uniformMatrix2fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix3fv\":\n                    gl.uniformMatrix3fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix4fv\":\n                    gl.uniformMatrix4fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"texture\":\n                    // TODO: is this the best way? (is it fast? can we cache?)\n                    const texture = access(props, index, def.value);\n                    const currentTexture = textureUnitOffset++;\n                    gl.activeTexture(gl.TEXTURE0 + currentTexture);\n                    gl.bindTexture(gl.TEXTURE_2D, texture.glTexture);\n                    gl.uniform1i(loc, currentTexture);\n                    break;\n                default:\n                    assert.never(def, `Unknown uniform type: (${ident})`);\n                    break;\n            }\n        });\n    }\n}\nfunction locate(gl, glProgram, { attributes, elements }) {\n    const locatedAttributes = Object.entries(attributes)\n        .reduce((accum, [identifier, definition]) => {\n        if (INT_PATTERN.test(identifier)) {\n            accum[identifier] = definition;\n        }\n        else {\n            const location = gl.getAttribLocation(glProgram, identifier);\n            if (location === UNKNOWN_ATTRIB_LOCATION) {\n                throw new Error(`No location for attrib: ${identifier}`);\n            }\n            accum[location] = definition;\n        }\n        return accum;\n    }, {});\n    return { attributes: locatedAttributes, elements };\n}\nfunction access(props, index, value) {\n    return typeof value === \"function\" ? value(props, index) : value;\n}\nclass DepthDescriptor {\n    constructor(func, mask, rangeStart, rangeEnd) {\n        this.func = func;\n        this.mask = mask;\n        this.rangeStart = rangeStart;\n        this.rangeEnd = rangeEnd;\n    }\n}\nclass StencilDescriptor {\n    constructor(fFunc, bFunc, fFuncRef, bfuncRef, fFuncMask, bFuncMask, fMask, bMask, fOpFail, bOpFail, fOpZFail, bOpZFail, fOpZPass, bOpZPass) {\n        this.fFunc = fFunc;\n        this.bFunc = bFunc;\n        this.fFuncRef = fFuncRef;\n        this.bfuncRef = bfuncRef;\n        this.fFuncMask = fFuncMask;\n        this.bFuncMask = bFuncMask;\n        this.fMask = fMask;\n        this.bMask = bMask;\n        this.fOpFail = fOpFail;\n        this.bOpFail = bOpFail;\n        this.fOpZFail = fOpZFail;\n        this.bOpZFail = bOpZFail;\n        this.fOpZPass = fOpZPass;\n        this.bOpZPass = bOpZPass;\n    }\n}\nclass BlendDescriptor {\n    constructor(srcRGB, srcAlpha, dstRGB, dstAlpha, equationRGB, equationAlpha, color) {\n        this.srcRGB = srcRGB;\n        this.srcAlpha = srcAlpha;\n        this.dstRGB = dstRGB;\n        this.dstAlpha = dstAlpha;\n        this.equationRGB = equationRGB;\n        this.equationAlpha = equationAlpha;\n        this.color = color;\n    }\n}\nclass UniformDescriptor {\n    constructor(identifier, location, definition) {\n        this.identifier = identifier;\n        this.location = location;\n        this.definition = definition;\n    }\n}\nfunction parseDepth(depth) {\n    if (!depth) {\n        return undefined;\n    }\n    return new DepthDescriptor(depth.func || DepthFunc.LESS, typeof depth.mask === \"boolean\" ? depth.mask : true, depth.range ? depth.range[0] : 0, depth.range ? depth.range[1] : 1);\n}\nfunction parseStencil(stencil) {\n    if (!stencil) {\n        return undefined;\n    }\n    return new StencilDescriptor(typeof stencil.func.func === \"object\"\n        ? stencil.func.func.front\n        : stencil.func.func, typeof stencil.func.func === \"object\"\n        ? stencil.func.func.back\n        : stencil.func.func, typeof stencil.func.ref !== \"undefined\"\n        ? typeof stencil.func.ref === \"object\"\n            ? stencil.func.ref.front\n            : stencil.func.ref\n        : 1, typeof stencil.func.ref !== \"undefined\"\n        ? typeof stencil.func.ref === \"object\"\n            ? stencil.func.ref.back\n            : stencil.func.ref\n        : 1, typeof stencil.func.mask !== \"undefined\"\n        ? typeof stencil.func.mask === \"object\"\n            ? stencil.func.mask.front\n            : stencil.func.mask\n        : 0xFF, typeof stencil.func.mask !== \"undefined\"\n        ? typeof stencil.func.mask === \"object\"\n            ? stencil.func.mask.back\n            : stencil.func.mask\n        : 0xFF, typeof stencil.mask !== \"undefined\"\n        ? typeof stencil.mask === \"object\"\n            ? stencil.mask.front\n            : stencil.mask\n        : 0xFF, typeof stencil.mask !== \"undefined\"\n        ? typeof stencil.mask === \"object\"\n            ? stencil.mask.back\n            : stencil.mask\n        : 0xFF, stencil.op\n        ? typeof stencil.op.fail === \"object\"\n            ? stencil.op.fail.front\n            : stencil.op.fail\n        : StencilOp.KEEP, stencil.op\n        ? typeof stencil.op.fail === \"object\"\n            ? stencil.op.fail.back\n            : stencil.op.fail\n        : StencilOp.KEEP, stencil.op\n        ? typeof stencil.op.zfail === \"object\"\n            ? stencil.op.zfail.front\n            : stencil.op.zfail\n        : StencilOp.KEEP, stencil.op\n        ? typeof stencil.op.zfail === \"object\"\n            ? stencil.op.zfail.back\n            : stencil.op.zfail\n        : StencilOp.KEEP, stencil.op\n        ? typeof stencil.op.zpass === \"object\"\n            ? stencil.op.zpass.front\n            : stencil.op.zpass\n        : StencilOp.KEEP, stencil.op\n        ? typeof stencil.op.zpass === \"object\"\n            ? stencil.op.zpass.back\n            : stencil.op.zpass\n        : StencilOp.KEEP);\n}\nfunction parseBlend(blend) {\n    if (!blend) {\n        return undefined;\n    }\n    return new BlendDescriptor(typeof blend.func.src === \"object\"\n        ? blend.func.src.rgb\n        : blend.func.src, typeof blend.func.src === \"object\"\n        ? blend.func.src.alpha\n        : blend.func.src, typeof blend.func.dst === \"object\"\n        ? blend.func.dst.rgb\n        : blend.func.dst, typeof blend.func.dst === \"object\"\n        ? blend.func.dst.alpha\n        : blend.func.dst, blend.equation\n        ? typeof blend.equation === \"object\"\n            ? blend.equation.rgb\n            : blend.equation\n        : BlendEquation.FUNC_ADD, blend.equation\n        ? typeof blend.equation === \"object\"\n            ? blend.equation.alpha\n            : blend.equation\n        : BlendEquation.FUNC_ADD, blend.color);\n}\n//# sourceMappingURL=command.js.map","export var Extension;\n(function (Extension) {\n    Extension[\"EXTColorBufferFloat\"] = \"EXT_color_buffer_float\";\n    Extension[\"OESTextureFloatLinear\"] = \"OES_texture_float_linear\";\n})(Extension || (Extension = {}));\nexport class Device {\n    constructor(gl, canvas, explicitPixelRatio, explicitViewport) {\n        this.gl = gl;\n        this.canvas = canvas;\n        this.explicitPixelRatio = explicitPixelRatio;\n        this.explicitViewport = explicitViewport;\n    }\n    static mount(element = document.body, options) {\n        if (element instanceof HTMLCanvasElement) {\n            return Device.fromCanvas(element, options);\n        }\n        const canvas = document.createElement(\"canvas\");\n        element.appendChild(canvas);\n        return Device.fromCanvas(canvas, options);\n    }\n    static fromCanvas(canvas, options = {}) {\n        const { antialias = true, alpha = true, depth = true, stencil = true, preserveDrawingBuffer = false, } = options.context || {};\n        const gl = canvas.getContext(\"webgl2\", {\n            antialias,\n            alpha,\n            depth,\n            stencil,\n            preserveDrawingBuffer,\n        });\n        if (!gl) {\n            throw new Error(\"Could not get webgl2 context\");\n        }\n        return Device.fromContext(gl, options);\n    }\n    static fromContext(gl, { pixelRatio, viewport, extensions, } = {}) {\n        if (extensions) {\n            extensions.forEach(ext => {\n                if (!gl.getExtension(ext)) {\n                    throw new Error(`Could not get extension ${ext}`);\n                }\n            });\n        }\n        const dev = new Device(gl, gl.canvas, pixelRatio, viewport);\n        dev.update();\n        return dev;\n    }\n    get bufferWidth() {\n        return this.gl.drawingBufferWidth;\n    }\n    get bufferHeight() {\n        return this.gl.drawingBufferHeight;\n    }\n    get canvasWidth() {\n        return this.canvas.width;\n    }\n    get canvasHeight() {\n        return this.canvas.height;\n    }\n    get canvasCSSWidth() {\n        return this.canvas.clientWidth;\n    }\n    get canvasCSSHeight() {\n        return this.canvas.clientHeight;\n    }\n    get pixelRatio() {\n        return this.explicitPixelRatio || window.devicePixelRatio;\n    }\n    update() {\n        const dpr = this.pixelRatio;\n        const canvas = this.canvas;\n        const width = this.explicitViewport\n            && this.explicitViewport[0]\n            || canvas.clientWidth * dpr;\n        const height = this.explicitViewport\n            && this.explicitViewport[1]\n            || canvas.clientHeight * dpr;\n        if (width !== canvas.width) {\n            canvas.width = width;\n        }\n        if (height !== canvas.height) {\n            canvas.height = height;\n        }\n    }\n    clearColor(r, g, b, a, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearDepth(depth, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearDepth(depth);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearStencil(stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearStencil(stencil);\n        gl.clear(gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearColorAndDepth(r, g, b, a, depth, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearDepthAndStencil(depth, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearDepth(depth);\n        gl.clearStencil(stencil);\n        gl.clear(gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearColorAndStencil(r, g, b, a, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearStencil(stencil);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clear(r, g, b, a, depth, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clearStencil(stencil);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n}\n//# sourceMappingURL=device.js.map","import * as assert from \"./assert\";\nimport { Device } from \"./device\";\nexport var VertexBufferType;\n(function (VertexBufferType) {\n    VertexBufferType[VertexBufferType[\"BYTE\"] = 5120] = \"BYTE\";\n    VertexBufferType[VertexBufferType[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\n    VertexBufferType[VertexBufferType[\"SHORT\"] = 5122] = \"SHORT\";\n    VertexBufferType[VertexBufferType[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n    VertexBufferType[VertexBufferType[\"INT\"] = 5124] = \"INT\";\n    VertexBufferType[VertexBufferType[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\n    VertexBufferType[VertexBufferType[\"FLOAT\"] = 5126] = \"FLOAT\";\n})(VertexBufferType || (VertexBufferType = {}));\nexport class VertexBuffer {\n    constructor(gl, type, data) {\n        this.gl = gl;\n        this.type = type;\n        this.data = data;\n        this.glBuffer = null;\n        this.init();\n    }\n    static create(dev, props) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        switch (props.type) {\n            case VertexBufferType.BYTE:\n                return VertexBuffer.fromInt8Array(gl, props.data);\n            case VertexBufferType.SHORT:\n                return VertexBuffer.fromInt16Array(gl, props.data);\n            case VertexBufferType.INT:\n                return VertexBuffer.fromInt32Array(gl, props.data);\n            case VertexBufferType.UNSIGNED_BYTE:\n                return VertexBuffer.fromUint8Array(gl, props.data);\n            case VertexBufferType.UNSIGNED_SHORT:\n                return VertexBuffer.fromUint16Array(gl, props.data);\n            case VertexBufferType.UNSIGNED_INT:\n                return VertexBuffer.fromUint32Array(gl, props.data);\n            case VertexBufferType.FLOAT:\n                return VertexBuffer.fromFloat32Array(gl, props.data);\n            default: return assert.never(props);\n        }\n    }\n    static fromInt8Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.BYTE, data instanceof Int8Array ? data : new Int8Array(data));\n    }\n    static fromInt16Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.SHORT, data instanceof Int16Array ? data : new Int16Array(data));\n    }\n    static fromInt32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.INT, data instanceof Int32Array ? data : new Int32Array(data));\n    }\n    static fromUint8Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.UNSIGNED_BYTE, \n        // Note: we also have to convert Uint8ClampedArray to Uint8Array\n        // because of webgl bug\n        // https://github.com/KhronosGroup/WebGL/issues/1533\n        data instanceof Uint8Array ? data : new Uint8Array(data));\n    }\n    static fromUint16Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.UNSIGNED_SHORT, data instanceof Uint16Array ? data : new Uint16Array(data));\n    }\n    static fromUint32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.UNSIGNED_INT, data instanceof Uint32Array ? data : new Uint32Array(data));\n    }\n    static fromFloat32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.FLOAT, data instanceof Float32Array ? data : new Float32Array(data));\n    }\n    get count() {\n        return this.data.length;\n    }\n    init() {\n        const { gl, data } = this;\n        const buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        this.glBuffer = buffer;\n    }\n    restore() {\n        const { gl, glBuffer } = this;\n        if (!gl.isBuffer(glBuffer)) {\n            this.init();\n        }\n    }\n}\n//# sourceMappingURL=vertex-buffer.js.map","import * as assert from \"./assert\";\nimport * as array from \"./array\";\nimport { Device } from \"./device\";\nexport var ElementBufferType;\n(function (ElementBufferType) {\n    // Should we enable this?\n    // UNSIGNED_BYTE = 0x1401,\n    ElementBufferType[ElementBufferType[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n    ElementBufferType[ElementBufferType[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\n})(ElementBufferType || (ElementBufferType = {}));\nexport var Primitive;\n(function (Primitive) {\n    Primitive[Primitive[\"POINTS\"] = 0] = \"POINTS\";\n    Primitive[Primitive[\"LINES\"] = 1] = \"LINES\";\n    Primitive[Primitive[\"LINE_LOOP\"] = 2] = \"LINE_LOOP\";\n    Primitive[Primitive[\"LINE_STRIP\"] = 3] = \"LINE_STRIP\";\n    Primitive[Primitive[\"TRIANGLES\"] = 4] = \"TRIANGLES\";\n    Primitive[Primitive[\"TRIANGLE_STRIP\"] = 5] = \"TRIANGLE_STRIP\";\n    Primitive[Primitive[\"TRIANGLE_FAN\"] = 6] = \"TRIANGLE_FAN\";\n})(Primitive || (Primitive = {}));\nexport class ElementBuffer {\n    static create(dev, props) {\n        return Array.isArray(props)\n            ? ElementBuffer.fromArray(dev, props)\n            : ElementBuffer.fromUint32Array(dev, props.data, props.primitive);\n    }\n    static fromArray(dev, data) {\n        if (array.isArray2(data)) {\n            const s = array.shape2(data);\n            assert.range(s[1], 2, 3, \"element tuple length\");\n            const r = array.ravel2(data, s);\n            const prim = s[1] === 3 ? Primitive.TRIANGLES : Primitive.LINES;\n            return ElementBuffer.fromUint32Array(dev, r, prim);\n        }\n        return ElementBuffer.fromUint32Array(dev, data, Primitive.POINTS);\n    }\n    static fromUint16Array(dev, data, primitive) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const arr = Array.isArray(data) ? new Uint16Array(data) : data;\n        return new ElementBuffer(gl, arr, ElementBufferType.UNSIGNED_SHORT, primitive);\n    }\n    static fromUint32Array(dev, data, primitive) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const arr = Array.isArray(data) ? new Uint32Array(data) : data;\n        return new ElementBuffer(gl, arr, ElementBufferType.UNSIGNED_INT, primitive);\n    }\n    constructor(gl, data, type, primitive) {\n        this.gl = gl;\n        this.data = data;\n        this.type = type;\n        this.primitive = primitive;\n        this.glBuffer = null;\n        this.init();\n    }\n    get count() {\n        return this.data.length;\n    }\n    init() {\n        const { gl, data } = this;\n        const buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        this.glBuffer = buffer;\n    }\n    restore() {\n        const { gl, glBuffer } = this;\n        if (!gl.isBuffer(glBuffer)) {\n            this.init();\n        }\n    }\n}\n//# sourceMappingURL=element-buffer.js.map","import * as assert from \"./assert\";\nimport * as array from \"./array\";\nimport { Device } from \"./device\";\nimport { VertexBuffer, } from \"./vertex-buffer\";\nimport { ElementBuffer, } from \"./element-buffer\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nexport var AttributeType;\n(function (AttributeType) {\n    AttributeType[\"POINTER\"] = \"pointer\";\n    AttributeType[\"IPOINTER\"] = \"ipointer\";\n})(AttributeType || (AttributeType = {}));\nexport class VertexArray {\n    static create(dev, { attributes, elements }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const attrs = Object.entries(attributes)\n            .map(([locationStr, definition]) => {\n            if (!INT_PATTERN.test(locationStr)) {\n                throw new Error(\"Location not a number. Use Command#locate\");\n            }\n            const location = parseInt(locationStr, 10);\n            return AttributeDescriptor.create(gl, location, definition);\n        });\n        const elementBuffer = elements\n            ? elements instanceof ElementBuffer\n                ? elements\n                : ElementBuffer.create(gl, elements)\n            : undefined;\n        const count = elementBuffer\n            ? elementBuffer.count\n            : attrs.length\n                ? attrs\n                    .map(attr => attr.count)\n                    .reduce((min, curr) => Math.min(min, curr))\n                : 0;\n        const instAttrs = attrs.filter(attr => !!attr.divisor);\n        const instanceCount = instAttrs.length\n            ? instAttrs\n                .map(attr => attr.count * attr.divisor)\n                .reduce((min, curr) => Math.min(min, curr))\n            : 0;\n        return new VertexArray(gl, attrs, elementBuffer, count, instanceCount);\n    }\n    constructor(gl, attributes, elements, count, instanceCount) {\n        this.gl = gl;\n        this.elementBuffer = elements;\n        this.attributes = attributes;\n        this.count = count;\n        this.instanceCount = instanceCount;\n        this.glVertexArray = null;\n        this.init();\n    }\n    get hasElements() {\n        return !!this.elementBuffer;\n    }\n    get elementPrimitive() {\n        return this.elementBuffer && this.elementBuffer.primitive;\n    }\n    get elementType() {\n        return this.elementBuffer && this.elementBuffer.type;\n    }\n    init() {\n        const { gl, attributes, elementBuffer } = this;\n        if (!gl.isContextLost()) {\n            const vao = gl.createVertexArray();\n            gl.bindVertexArray(vao);\n            attributes.forEach(({ location, type, buffer: { glBuffer, type: glBufferType }, size, normalized = false, divisor, }) => {\n                // Enable sending attribute arrays for location\n                gl.enableVertexAttribArray(location);\n                // Send buffer\n                gl.bindBuffer(gl.ARRAY_BUFFER, glBuffer);\n                switch (type) {\n                    case AttributeType.POINTER:\n                        gl.vertexAttribPointer(location, size, glBufferType, normalized, 0, 0);\n                        break;\n                    case AttributeType.IPOINTER:\n                        gl.vertexAttribIPointer(location, size, glBufferType, 0, 0);\n                        break;\n                    default: assert.never(type);\n                }\n                if (divisor) {\n                    gl.vertexAttribDivisor(location, divisor);\n                }\n            });\n            if (elementBuffer) {\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer.glBuffer);\n            }\n            gl.bindVertexArray(null);\n            gl.bindBuffer(gl.ARRAY_BUFFER, null);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n            this.glVertexArray = vao;\n        }\n    }\n    restore() {\n        const { gl, glVertexArray, attributes, elementBuffer } = this;\n        if (elementBuffer) {\n            elementBuffer.restore();\n        }\n        attributes.forEach(attr => attr.buffer.restore());\n        if (!gl.isVertexArray(glVertexArray)) {\n            this.init();\n        }\n    }\n}\n// TODO: this could use some further refactoring. Currently its just former\n// public API made private.\nclass AttributeDescriptor {\n    constructor(location, type, buffer, count, size, normalized, divisor) {\n        this.location = location;\n        this.type = type;\n        this.buffer = buffer;\n        this.count = count;\n        this.size = size;\n        this.normalized = normalized;\n        this.divisor = divisor;\n    }\n    static create(gl, location, props) {\n        if (Array.isArray(props)) {\n            if (array.isArray2(props)) {\n                const s = array.shape2(props);\n                const r = array.ravel2(props, s);\n                return new AttributeDescriptor(location, AttributeType.POINTER, VertexBuffer.fromFloat32Array(gl, r), s[0], s[1], false, 0);\n            }\n            return new AttributeDescriptor(location, AttributeType.POINTER, VertexBuffer.fromFloat32Array(gl, props), props.length, 1, false, 0);\n        }\n        const buffer = props.value instanceof VertexBuffer\n            ? props.value\n            // Typescript is not smart enough here\n            : VertexBuffer.create(gl, props.value);\n        switch (props.type) {\n            case AttributeType.POINTER: return new AttributeDescriptor(location, props.type, buffer, props.count, props.size, props.normalized || false, props.divisor || 0);\n            case AttributeType.IPOINTER: return new AttributeDescriptor(location, props.type, buffer, props.count, props.size, false, props.divisor || 0);\n            default: return assert.never(props);\n        }\n    }\n}\n//# sourceMappingURL=vertex-array.js.map","import * as assert from \"./assert\";\nimport { Device } from \"./device\";\nexport class Framebuffer {\n    static create(dev, { width, height, color, depth, stencil }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const colorBuffers = Array.isArray(color) ? color : [color];\n        colorBuffers.forEach(buffer => {\n            assert.equal(width, buffer.width, \"width\");\n            assert.equal(height, buffer.height, \"height\");\n        });\n        if (depth) {\n            assert.equal(width, depth.width, \"width\");\n            assert.equal(height, depth.height, \"height\");\n        }\n        if (stencil) {\n            assert.equal(width, stencil.width, \"width\");\n            assert.equal(height, stencil.height, \"height\");\n        }\n        return new Framebuffer(gl, width, height, colorBuffers, depth, stencil);\n    }\n    constructor(gl, width, height, colorBuffers, depthBuffer, stencilBuffer) {\n        this.gl = gl;\n        this.width = width;\n        this.height = height;\n        this.colorBuffers = colorBuffers;\n        this.depthBuffer = depthBuffer;\n        this.stencilBuffer = stencilBuffer;\n        this.glColorAttachments = colorBuffers\n            .map((_, i) => gl.COLOR_ATTACHMENT0 + i);\n        this.glFramebuffer = null;\n        this.init();\n    }\n    init() {\n        const { gl, colorBuffers, depthBuffer, stencilBuffer } = this;\n        const fbo = gl.createFramebuffer();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n        colorBuffers.forEach((buffer, i) => {\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.TEXTURE_2D, buffer.glTexture, 0);\n        });\n        if (depthBuffer) {\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depthBuffer, 0);\n        }\n        if (stencilBuffer) {\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.STENCIL_ATTACHMENT, gl.TEXTURE_2D, stencilBuffer, 0);\n        }\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        if (status !== gl.FRAMEBUFFER_COMPLETE) {\n            gl.deleteFramebuffer(fbo);\n            throw new Error(\"Framebuffer not complete\");\n        }\n        this.glFramebuffer = fbo;\n    }\n    restore() {\n        const { gl, glFramebuffer, colorBuffers, depthBuffer, stencilBuffer, } = this;\n        colorBuffers.forEach(buffer => buffer.restore());\n        if (depthBuffer) {\n            depthBuffer.restore();\n        }\n        if (stencilBuffer) {\n            stencilBuffer.restore();\n        }\n        if (!gl.isFramebuffer(glFramebuffer)) {\n            this.init();\n        }\n    }\n}\n//# sourceMappingURL=framebuffer.js.map","import { Device } from \"./device\";\nexport var TextureWrap;\n(function (TextureWrap) {\n    TextureWrap[TextureWrap[\"CLAMP_TO_EDGE\"] = 33071] = \"CLAMP_TO_EDGE\";\n    TextureWrap[TextureWrap[\"REPEAT\"] = 10497] = \"REPEAT\";\n    TextureWrap[TextureWrap[\"MIRRORED_REPEAT\"] = 33648] = \"MIRRORED_REPEAT\";\n})(TextureWrap || (TextureWrap = {}));\nexport var TextureFilter;\n(function (TextureFilter) {\n    TextureFilter[TextureFilter[\"NEAREST\"] = 9728] = \"NEAREST\";\n    TextureFilter[TextureFilter[\"LINEAR\"] = 9729] = \"LINEAR\";\n    TextureFilter[TextureFilter[\"NEAREST_MIPMAP_NEAREST\"] = 9984] = \"NEAREST_MIPMAP_NEAREST\";\n    TextureFilter[TextureFilter[\"LINEAR_MIPMAP_NEAREST\"] = 9985] = \"LINEAR_MIPMAP_NEAREST\";\n    TextureFilter[TextureFilter[\"NEAREST_MIPMAP_LINEAR\"] = 9986] = \"NEAREST_MIPMAP_LINEAR\";\n    TextureFilter[TextureFilter[\"LINEAR_MIPMAP_LINEAR\"] = 9987] = \"LINEAR_MIPMAP_LINEAR\";\n})(TextureFilter || (TextureFilter = {}));\nexport var TextureInternalFormat;\n(function (TextureInternalFormat) {\n    // R\n    TextureInternalFormat[TextureInternalFormat[\"R8\"] = 33321] = \"R8\";\n    TextureInternalFormat[TextureInternalFormat[\"R8_SNORM\"] = 36756] = \"R8_SNORM\";\n    TextureInternalFormat[TextureInternalFormat[\"R8UI\"] = 33330] = \"R8UI\";\n    TextureInternalFormat[TextureInternalFormat[\"R8I\"] = 33329] = \"R8I\";\n    TextureInternalFormat[TextureInternalFormat[\"R16UI\"] = 33332] = \"R16UI\";\n    TextureInternalFormat[TextureInternalFormat[\"R16I\"] = 33331] = \"R16I\";\n    TextureInternalFormat[TextureInternalFormat[\"R32UI\"] = 33334] = \"R32UI\";\n    TextureInternalFormat[TextureInternalFormat[\"R32I\"] = 33333] = \"R32I\";\n    TextureInternalFormat[TextureInternalFormat[\"R16F\"] = 33325] = \"R16F\";\n    TextureInternalFormat[TextureInternalFormat[\"R32F\"] = 33326] = \"R32F\";\n    // RG\n    TextureInternalFormat[TextureInternalFormat[\"RG8\"] = 33323] = \"RG8\";\n    TextureInternalFormat[TextureInternalFormat[\"RG8_SNORM\"] = 36757] = \"RG8_SNORM\";\n    TextureInternalFormat[TextureInternalFormat[\"RG8UI\"] = 33336] = \"RG8UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RG8I\"] = 33335] = \"RG8I\";\n    TextureInternalFormat[TextureInternalFormat[\"RG16UI\"] = 33338] = \"RG16UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RG16I\"] = 33337] = \"RG16I\";\n    TextureInternalFormat[TextureInternalFormat[\"RG32UI\"] = 33340] = \"RG32UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RG32I\"] = 33339] = \"RG32I\";\n    TextureInternalFormat[TextureInternalFormat[\"RG16F\"] = 33327] = \"RG16F\";\n    TextureInternalFormat[TextureInternalFormat[\"RG32F\"] = 33328] = \"RG32F\";\n    // RGB\n    TextureInternalFormat[TextureInternalFormat[\"RGB8\"] = 32849] = \"RGB8\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB8_SNORM\"] = 36758] = \"RGB8_SNORM\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB8UI\"] = 36221] = \"RGB8UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB8I\"] = 36239] = \"RGB8I\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB16UI\"] = 36215] = \"RGB16UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB16I\"] = 36233] = \"RGB16I\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB32UI\"] = 36209] = \"RGB32UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB32I\"] = 36227] = \"RGB32I\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB16F\"] = 34843] = \"RGB16F\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB32F\"] = 34837] = \"RGB32F\";\n    // RGBA\n    TextureInternalFormat[TextureInternalFormat[\"RGBA8\"] = 32856] = \"RGBA8\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA8_SNORM\"] = 36759] = \"RGBA8_SNORM\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA8UI\"] = 36220] = \"RGBA8UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA8I\"] = 36238] = \"RGBA8I\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA16UI\"] = 36214] = \"RGBA16UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA16I\"] = 36232] = \"RGBA16I\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA32UI\"] = 36208] = \"RGBA32UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA32I\"] = 36226] = \"RGBA32I\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA16F\"] = 34842] = \"RGBA16F\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA32F\"] = 34836] = \"RGBA32F\";\n    // TODO: support exotic formats\n    // ~DEPTH\n    // DEPTH_COMPONENT16\n    // DEPTH_COMPONENT24\n    // DEPTH_COMPONENT32F\n    // ~DEPTH STENCIL\n    // DEPTH24_STENCIL8\n    // DEPTH32F_STENCIL8\n    // ~LUMINANCE ALPHA\n    // LUMINANCE_ALPHA\n    // LUMINANCE\n    // ALPHA\n})(TextureInternalFormat || (TextureInternalFormat = {}));\nexport var TextureFormat;\n(function (TextureFormat) {\n    TextureFormat[TextureFormat[\"RED\"] = 6403] = \"RED\";\n    TextureFormat[TextureFormat[\"RG\"] = 33319] = \"RG\";\n    TextureFormat[TextureFormat[\"RGB\"] = 6407] = \"RGB\";\n    TextureFormat[TextureFormat[\"RGBA\"] = 6408] = \"RGBA\";\n    TextureFormat[TextureFormat[\"RED_INTEGER\"] = 36244] = \"RED_INTEGER\";\n    TextureFormat[TextureFormat[\"RG_INTEGER\"] = 33320] = \"RG_INTEGER\";\n    TextureFormat[TextureFormat[\"RGB_INTEGER\"] = 36248] = \"RGB_INTEGER\";\n    TextureFormat[TextureFormat[\"RGBA_INTEGER\"] = 36249] = \"RGBA_INTEGER\";\n    // TODO: support exotic formats\n    // DEPTH_COMPONENT\n    // DEPTH_STENCIL\n    // LUMINANCE_ALPHA\n    // LUMINANCE\n    // ALPHA\n})(TextureFormat || (TextureFormat = {}));\nexport var TextureType;\n(function (TextureType) {\n    TextureType[TextureType[\"BYTE\"] = 5120] = \"BYTE\";\n    TextureType[TextureType[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\n    TextureType[TextureType[\"SHORT\"] = 5122] = \"SHORT\";\n    TextureType[TextureType[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n    TextureType[TextureType[\"INT\"] = 5124] = \"INT\";\n    TextureType[TextureType[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\n    TextureType[TextureType[\"FLOAT\"] = 5126] = \"FLOAT\";\n    // TODO: support exotic formats\n    // HALF_FLOAT\n    // UNSIGNED_SHORT_4_4_4_4\n    // UNSIGNED_SHORT_5_5_5_1\n    // UNSIGNED_SHORT_5_6_5\n    // UNSIGNED_INT_24_8\n    // UNSIGNED_INT_5_9_9_9_REV\n    // UNSIGNED_INT_2_10_10_10_REV\n    // UNSIGNED_INT_10F_11F_11F_REV\n    // FLOAT_32_UNSIGNED_INT_24_8_REV\n})(TextureType || (TextureType = {}));\nexport class Texture {\n    static fromImage(dev, image, options) {\n        return Texture.fromRGBA8(dev, image.data, image.width, image.height, options);\n    }\n    static fromRGBA8(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Uint8Array\n            ? data\n            // Note: we also have to convert Uint8ClampedArray to Uint8Array\n            // because of webgl bug\n            // https://github.com/KhronosGroup/WebGL/issues/1533\n            : new Uint8Array(data), width, height, TextureInternalFormat.RGBA8, TextureFormat.RGBA, TextureType.UNSIGNED_BYTE, options);\n    }\n    static fromRG16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, TextureInternalFormat.RG16F, TextureFormat.RG, TextureType.FLOAT, options);\n    }\n    static fromRGB16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, TextureInternalFormat.RGB16F, TextureFormat.RGB, TextureType.FLOAT, options);\n    }\n    static fromRGBA16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, TextureInternalFormat.RGBA16F, TextureFormat.RGBA, TextureType.FLOAT, options);\n    }\n    static fromRGB32F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, TextureInternalFormat.RGB32F, TextureFormat.RGB, TextureType.FLOAT, options);\n    }\n    static fromRGBA32F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, TextureInternalFormat.RGBA32F, TextureFormat.RGBA, TextureType.FLOAT, options);\n    }\n    static fromArrayBufferView(dev, data, width, height, internalFormat, format, type, { min = TextureFilter.NEAREST, mag = TextureFilter.NEAREST, wrapS = TextureWrap.CLAMP_TO_EDGE, wrapT = TextureWrap.CLAMP_TO_EDGE, mipmap = false, } = {}) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new Texture(gl, data, width, height, internalFormat, format, type, wrapS, wrapT, min, mag, mipmap);\n    }\n    constructor(gl, data, width, height, internalFormat, format, type, wrapS, wrapT, minFilter, magFilter, mipmap) {\n        this.gl = gl;\n        this.data = data;\n        this.width = width;\n        this.height = height;\n        this.internalFormat = internalFormat;\n        this.format = format;\n        this.type = type;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.mipmap = mipmap;\n        this.glTexture = null;\n        this.init();\n    }\n    init() {\n        const { gl, data, width, height, internalFormat, format, type, wrapS, wrapT, minFilter, magFilter, mipmap, } = this;\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texStorage2D(gl.TEXTURE_2D, 1, internalFormat, width, height);\n        if (data) {\n            gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, width, height, format, type, data);\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\n        if (mipmap) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        this.glTexture = texture;\n    }\n    restore() {\n        const { gl, glTexture } = this;\n        if (!gl.isTexture(glTexture)) {\n            this.init();\n        }\n    }\n}\n//# sourceMappingURL=texture.js.map"],"names":["never","p","msg","Error","fmt","createProgram","gl","vertex","fragment","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","prettySource","split","map","l","i","join","isArray2","array","length","Array","isArray","shape2","outer","ravel2","unraveled","shape","inner","raveled","forEach","arr","elem","j","locate","glProgram","attributes","elements","Object","entries","reduce","accum","identifier","definition","INT_PATTERN","test","location","getAttribLocation","UNKNOWN_ATTRIB_LOCATION","access","props","index","value","parseDepth","depth","DepthDescriptor","func","DepthFunc","LESS","mask","range","parseStencil","stencil","StencilDescriptor","front","back","ref","op","fail","StencilOp","KEEP","zfail","zpass","parseBlend","blend","BlendDescriptor","src","rgb","alpha","dst","equation","BlendEquation","FUNC_ADD","color","Extension","Device","[object Object]","canvas","explicitPixelRatio","explicitViewport","this","element","document","body","options","HTMLCanvasElement","fromCanvas","createElement","appendChild","antialias","preserveDrawingBuffer","context","getContext","fromContext","pixelRatio","viewport","extensions","ext","getExtension","dev","update","bufferWidth","drawingBufferWidth","bufferHeight","drawingBufferHeight","canvasWidth","width","canvasHeight","height","canvasCSSWidth","clientWidth","canvasCSSHeight","clientHeight","window","devicePixelRatio","dpr","r","g","b","a","fbo","bindFramebuffer","FRAMEBUFFER","glFramebuffer","clearColor","clear","COLOR_BUFFER_BIT","clearDepth","DEPTH_BUFFER_BIT","clearStencil","STENCIL_BUFFER_BIT","VertexBufferType","VertexBuffer","data","glBuffer","init","BYTE","fromInt8Array","SHORT","fromInt16Array","INT","fromInt32Array","UNSIGNED_BYTE","fromUint8Array","UNSIGNED_SHORT","fromUint16Array","UNSIGNED_INT","fromUint32Array","FLOAT","fromFloat32Array","assert.never","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Float32Array","count","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","isBuffer","ElementBufferType","Primitive","ElementBuffer","fromArray","primitive","array.isArray2","s","array.shape2","array.ravel2","prim","TRIANGLES","LINES","POINTS","ELEMENT_ARRAY_BUFFER","AttributeType","VertexArray","attrs","locationStr","parseInt","AttributeDescriptor","create","elementBuffer","undefined","attr","min","curr","Math","instAttrs","filter","divisor","instanceCount","glVertexArray","hasElements","elementPrimitive","elementType","isContextLost","vao","createVertexArray","bindVertexArray","glBufferType","size","normalized","enableVertexAttribArray","POINTER","vertexAttribPointer","IPOINTER","vertexAttribIPointer","vertexAttribDivisor","restore","isVertexArray","Framebuffer","colorBuffers","depthBuffer","stencilBuffer","glColorAttachments","_","COLOR_ATTACHMENT0","createFramebuffer","framebufferTexture2D","TEXTURE_2D","glTexture","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","deleteFramebuffer","isFramebuffer","StencilFunc","BlendFunc","Command","uniformDescrs","offset","vertexArrayAcc","framebufferAcc","depthDescr","stencilDescr","blendDescr","currVao","currFbo","vert","frag","uniforms","framebuffer","vs","glutil.createShader","VERTEX_SHADER","fs","FRAGMENT_SHADER","prog","glutil.createProgram","ident","uniform","loc","getUniformLocation","UniformDescriptor","useProgram","beginDepth","beginStencil","beginBlend","executeInner","unbindFbo","unbindVao","endBlend","endStencil","endDepth","vertexArrayProps","bindFbo","updateUniforms","bindVao","cnt","ty","drawElements","drawArrays","drawBuffers","enable","DEPTH_TEST","depthFunc","depthMask","depthRange","rangeStart","rangeEnd","disable","fFunc","bFunc","fFuncRef","bfuncRef","fFuncMask","bFuncMask","fMask","bMask","fOpFail","bOpFail","fOpZFail","bOpZFail","fOpZPass","bOpZPass","STENCIL_TEST","stencilFuncSeparate","FRONT","BACK","stencilMaskSeparate","stencilOpSeparate","BLEND","blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","blendEquationSeparate","equationRGB","equationAlpha","blendColor","instCount","drawArraysInstanced","drawElementsInstanced","textureUnitOffset","def","uniform1f","uniform1fv","uniform1i","uniform1iv","uniform1ui","uniform1uiv","x","y","uniform2f","uniform2fv","uniform2i","uniform2iv","uniform2ui","uniform2uiv","z","uniform3f","uniform3fv","uniform3i","uniform3iv","uniform3ui","uniform3uiv","w","uniform4f","uniform4fv","uniform4i","uniform4iv","uniform4ui","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","texture","currentTexture","activeTexture","TEXTURE0","bindTexture","TextureWrap","TextureFilter","TextureInternalFormat","TextureFormat","TextureType","Texture","image","fromRGBA8","fromArrayBufferView","RGBA8","RGBA","RG16F","RG","RGB16F","RGB","RGBA16F","RGB32F","RGBA32F","internalFormat","format","NEAREST","mag","wrapS","CLAMP_TO_EDGE","wrapT","mipmap","minFilter","magFilter","createTexture","texStorage2D","texSubImage2D","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","generateMipmap","isTexture"],"mappings":"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"}