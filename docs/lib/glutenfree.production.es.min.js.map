{"version":3,"file":"glutenfree.production.es.min.js","sources":["../build/device.js","../build/vertex-buffer.js","../build/element-buffer.js","../build/assert.js","../build/glutil.js","../build/array.js","../build/vertex-array.js","../build/framebuffer.js","../build/command.js","../build/texture.js"],"sourcesContent":["/**\n * Available extensions.\n */\nexport var Extension;\n(function (Extension) {\n    Extension[\"EXTColorBufferFloat\"] = \"EXT_color_buffer_float\";\n    Extension[\"OESTextureFloatLinear\"] = \"OES_texture_float_linear\";\n})(Extension || (Extension = {}));\nexport class Device {\n    constructor(gl, canvas, explicitPixelRatio, explicitViewport) {\n        this.gl = gl;\n        this.canvas = canvas;\n        this.explicitPixelRatio = explicitPixelRatio;\n        this.explicitViewport = explicitViewport;\n    }\n    /**\n     * Create a new canvas and device (containing a gl context). Mount it on\n     * `element` parameter (default is `document.body`).\n     */\n    static mount(element = document.body, options) {\n        if (element instanceof HTMLCanvasElement) {\n            return Device.fromCanvas(element, options);\n        }\n        const canvas = document.createElement(\"canvas\");\n        element.appendChild(canvas);\n        return Device.fromCanvas(canvas, options);\n    }\n    /**\n     * Create a new device (containing a gl context) from existing canvas.\n     */\n    static fromCanvas(canvas, options = {}) {\n        const { antialias = true, alpha = true, depth = true, stencil = true, preserveDrawingBuffer = false, } = options.context || {};\n        const gl = canvas.getContext(\"webgl2\", {\n            antialias,\n            alpha,\n            depth,\n            stencil,\n            preserveDrawingBuffer,\n        });\n        if (!gl) {\n            throw new Error(\"Could not get webgl2 context\");\n        }\n        return Device.fromContext(gl, options);\n    }\n    /**\n     * Create a new device from existing gl context.\n     */\n    static fromContext(gl, { pixelRatio, viewport, extensions, } = {}) {\n        if (extensions) {\n            extensions.forEach(ext => {\n                if (!gl.getExtension(ext)) {\n                    throw new Error(`Could not get extension ${ext}`);\n                }\n            });\n        }\n        const dev = new Device(gl, gl.canvas, pixelRatio, viewport);\n        dev.update();\n        return dev;\n    }\n    /**\n     * Return width of the gl drawing buffer.\n     */\n    get bufferWidth() {\n        return this.gl.drawingBufferWidth;\n    }\n    /**\n     * Return height of the gl drawing buffer.\n     */\n    get bufferHeight() {\n        return this.gl.drawingBufferHeight;\n    }\n    /**\n     * Return width of the canvas. This will usually be the same as:\n     *   device.bufferWidth\n     */\n    get canvasWidth() {\n        return this.canvas.width;\n    }\n    /**\n     * Return height of the canvas. This will usually be the same as:\n     *   device.bufferHeight\n     */\n    get canvasHeight() {\n        return this.canvas.height;\n    }\n    /**\n     * Return width of canvas in CSS pixels (before applying device pixel ratio)\n     */\n    get canvasCSSWidth() {\n        return this.canvas.clientWidth;\n    }\n    /**\n     * Return height of canvas in CSS pixels (before applying device pixel ratio)\n     */\n    get canvasCSSHeight() {\n        return this.canvas.clientHeight;\n    }\n    /**\n     * Return the device pixel ratio for this device\n     */\n    get pixelRatio() {\n        return this.explicitPixelRatio || window.devicePixelRatio;\n    }\n    /**\n     * Notify the device to check whether updates are needed. This resizes the\n     * canvas, if the device pixel ratio or css canvas width/height changed.\n     */\n    update() {\n        const dpr = this.pixelRatio;\n        const canvas = this.canvas;\n        const width = this.explicitViewport\n            && this.explicitViewport[0]\n            || canvas.clientWidth * dpr;\n        const height = this.explicitViewport\n            && this.explicitViewport[1]\n            || canvas.clientHeight * dpr;\n        if (width !== canvas.width) {\n            canvas.width = width;\n        }\n        if (height !== canvas.height) {\n            canvas.height = height;\n        }\n    }\n    /**\n     * Clear the color buffer to provided color. Optionally, clear color buffers\n     * attached to a framebuffer instead.\n     */\n    clearColor(r, g, b, a, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    /**\n     * Clear the depth buffer to provided depth. Optionally, clear depth buffer\n     * attached to a framebuffer instead.\n     */\n    clearDepth(depth, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearDepth(depth);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    /**\n     * Clear the stencil buffer to provided stencil. Optionally, clear stencil\n     * buffer attached to a framebuffer instead.\n     */\n    clearStencil(stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearStencil(stencil);\n        gl.clear(gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    /**\n     * Clear the color buffers and depth buffer to provided color and depth.\n     * Optionally, clear buffers attached to a framebuffer instead.\n     *\n     * This is equivalent to but more efficient than:\n     *   device.clearColor()\n     *   device.clearDepth()\n     */\n    clearColorAndDepth(r, g, b, a, depth, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    /**\n     * Clear the depth buffer and stencil buffer to provided depth and stencil.\n     * Optionally, clear buffers attached to a framebuffer instead.\n     *\n     * This is equivalent to but more efficient than:\n     *   device.clearDepth()\n     *   device.clearStencil()\n     */\n    clearDepthAndStencil(depth, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearDepth(depth);\n        gl.clearStencil(stencil);\n        gl.clear(gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    /**\n     * Clear the color buffers and stencil buffer to provided color and stencil.\n     * Optionally, clear buffers attached to a framebuffer instead.\n     *\n     * This is equivalent to but more efficient than:\n     *   device.clearColor()\n     *   device.clearStencil()\n     */\n    clearColorAndStencil(r, g, b, a, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearStencil(stencil);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    /**\n     * Clear the color buffers, depth buffer and stencil buffer to provided\n     * color, depth and stencil.\n     * Optionally, clear buffers attached to a framebuffer instead.\n     *\n     * This is equivalent to but more efficient than:\n     *   device.clearColor()\n     *   device.clearDepth()\n     *   device.clearStencil()\n     */\n    clear(r, g, b, a, depth, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clearStencil(stencil);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n}\n//# sourceMappingURL=device.js.map","import { Device } from \"./device\";\n/**\n * Possible data types of vertex buffers.\n */\nexport var VertexBufferType;\n(function (VertexBufferType) {\n    VertexBufferType[VertexBufferType[\"BYTE\"] = 5120] = \"BYTE\";\n    VertexBufferType[VertexBufferType[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\n    VertexBufferType[VertexBufferType[\"SHORT\"] = 5122] = \"SHORT\";\n    VertexBufferType[VertexBufferType[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n    VertexBufferType[VertexBufferType[\"INT\"] = 5124] = \"INT\";\n    VertexBufferType[VertexBufferType[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\n    VertexBufferType[VertexBufferType[\"FLOAT\"] = 5126] = \"FLOAT\";\n})(VertexBufferType || (VertexBufferType = {}));\n/**\n * Vertex buffers contain GPU accessible data. Accessing them is usually done\n * via setting up an attribute that reads the buffer.\n */\nexport class VertexBuffer {\n    constructor(gl, type, data) {\n        this.gl = gl;\n        this.type = type;\n        this.data = data;\n        this.glBuffer = null;\n        this.init();\n    }\n    /**\n     * Create a new vertex buffer from bytes.\n     */\n    static fromInt8Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.BYTE, data instanceof Int8Array ? data : new Int8Array(data));\n    }\n    /**\n     * Create a new vertex buffer from short ints.\n     */\n    static fromInt16Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.SHORT, data instanceof Int16Array ? data : new Int16Array(data));\n    }\n    /**\n     * Create a new vertex buffer from ints.\n     */\n    static fromInt32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.INT, data instanceof Int32Array ? data : new Int32Array(data));\n    }\n    /**\n     * Create a new vertex buffer from unsigned bytes.\n     */\n    static fromUint8Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.UNSIGNED_BYTE, \n        // Note: we also have to convert Uint8ClampedArray to Uint8Array\n        // because of webgl bug\n        // https://github.com/KhronosGroup/WebGL/issues/1533\n        data instanceof Uint8Array ? data : new Uint8Array(data));\n    }\n    /**\n     * Create a new vertex buffer from unsigned short ints.\n     */\n    static fromUint16Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.UNSIGNED_SHORT, data instanceof Uint16Array ? data : new Uint16Array(data));\n    }\n    /**\n     * Create a new vertex buffer from unsigned ints.\n     */\n    static fromUint32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.UNSIGNED_INT, data instanceof Uint32Array ? data : new Uint32Array(data));\n    }\n    /**\n     * Create a new vertex buffer from floats.\n     */\n    static fromFloat32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.FLOAT, data instanceof Float32Array ? data : new Float32Array(data));\n    }\n    get count() {\n        return this.data.length;\n    }\n    /**\n     * Force buffer reinitialization.\n     */\n    init() {\n        const { gl, data } = this;\n        const buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        this.glBuffer = buffer;\n    }\n    /**\n     * Reinitialize invalid buffer, eg. after context is lost.\n     */\n    restore() {\n        const { gl, glBuffer } = this;\n        if (!gl.isBuffer(glBuffer)) {\n            this.init();\n        }\n    }\n}\n//# sourceMappingURL=vertex-buffer.js.map","import * as assert from \"./assert\";\nimport * as array from \"./array\";\nimport { Device } from \"./device\";\n/**\n * Possible data types of element buffers.\n */\nexport var ElementBufferType;\n(function (ElementBufferType) {\n    // Should we enable this?\n    // UNSIGNED_BYTE = 0x1401,\n    ElementBufferType[ElementBufferType[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n    ElementBufferType[ElementBufferType[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\n})(ElementBufferType || (ElementBufferType = {}));\n/**\n * WebGL drawing primitives.\n */\nexport var Primitive;\n(function (Primitive) {\n    Primitive[Primitive[\"POINTS\"] = 0] = \"POINTS\";\n    Primitive[Primitive[\"LINES\"] = 1] = \"LINES\";\n    Primitive[Primitive[\"LINE_LOOP\"] = 2] = \"LINE_LOOP\";\n    Primitive[Primitive[\"LINE_STRIP\"] = 3] = \"LINE_STRIP\";\n    Primitive[Primitive[\"TRIANGLES\"] = 4] = \"TRIANGLES\";\n    Primitive[Primitive[\"TRIANGLE_STRIP\"] = 5] = \"TRIANGLE_STRIP\";\n    Primitive[Primitive[\"TRIANGLE_FAN\"] = 6] = \"TRIANGLE_FAN\";\n})(Primitive || (Primitive = {}));\n/**\n * Element buffers contain indices for accessing vertex buffer data. They are,\n * together with vertex buffers part of VertexArray objects.\n */\nexport class ElementBuffer {\n    constructor(gl, data, type, primitive) {\n        this.gl = gl;\n        this.data = data;\n        this.type = type;\n        this.primitive = primitive;\n        this.glBuffer = null;\n        this.init();\n    }\n    /**\n     * Creates a new element buffer from plain javascript array. Tries to infer\n     * Primitive from the array's shape:\n     *   number[] -> POINTS\n     *   [number, number][] -> LINES\n     *   [number, number, number][] -> TRIANGLES\n     * To select other drawing Primitives, use fromTypedArray family of methods.\n     */\n    static fromArray(dev, data) {\n        if (array.isArray2(data)) {\n            const s = array.shape2(data);\n            assert.range(s[1], 2, 3, \"element tuple length\");\n            const r = array.ravel2(data, s);\n            const prim = s[1] === 3 ? Primitive.TRIANGLES : Primitive.LINES;\n            return ElementBuffer.fromUint32Array(dev, r, prim);\n        }\n        return ElementBuffer.fromUint32Array(dev, data, Primitive.POINTS);\n    }\n    /**\n     * Create a new element buffer from unsigned short ints.\n     */\n    static fromUint16Array(dev, data, primitive) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const arr = Array.isArray(data) ? new Uint16Array(data) : data;\n        return new ElementBuffer(gl, arr, ElementBufferType.UNSIGNED_SHORT, primitive);\n    }\n    /**\n     * Create a new element buffer from unsigned ints.\n     */\n    static fromUint32Array(dev, data, primitive) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const arr = Array.isArray(data) ? new Uint32Array(data) : data;\n        return new ElementBuffer(gl, arr, ElementBufferType.UNSIGNED_INT, primitive);\n    }\n    get count() {\n        return this.data.length;\n    }\n    /**\n     * Force buffer reinitialization.\n     */\n    init() {\n        const { gl, data } = this;\n        const buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        this.glBuffer = buffer;\n    }\n    /**\n     * Reinitialize invalid buffer, eg. after context is lost.\n     */\n    restore() {\n        const { gl, glBuffer } = this;\n        if (!gl.isBuffer(glBuffer)) {\n            this.init();\n        }\n    }\n}\n//# sourceMappingURL=element-buffer.js.map","/**\n * This file is an exercise in proprocessor voodoo.\n *\n * \"process.env.NODE_ENV\", gets suplied by the string replacer during a\n * custom build or our production build. If \"production\", constant evaluation\n * will eliminate the if blocks, making the functions no-ops, in turn eligible\n * for elimination from their callsites.\n *\n * While cool, this disables us to return values from the asserts, which would\n * make for a slightly nice programming model: const checkedVal = truthy(val)\n */\n// This does not get replaced and serves as a default velue. If all its uses\n// are eliminated, the value itself is pruned as well.\nconst process = {\n    env: {\n        NODE_ENV: \"development\",\n    },\n};\nexport function nonNull(p, name, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof p === \"undefined\" || typeof p === \"object\" && !p) {\n            throw new Error(msg || fmt(`object ${name || \"\"} ${p}`));\n        }\n    }\n}\nexport function nonEmpty(p, name, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!p || !p.length) {\n            throw new Error(msg || fmt(`array ${name || \"\"} empty`));\n        }\n    }\n}\nexport function equal(p, val, name, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (p !== val) {\n            throw new Error(msg || fmt(`${name || \"\"} values not equal: ${p} ${val}`));\n        }\n    }\n}\nexport function range(p, start, end, name, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (p < start || p > end) {\n            throw new Error(msg || fmt(`${name || \"\"} value ${p} not in [${start}, ${end}]`));\n        }\n    }\n}\nexport function never(p, msg) {\n    // \"never\" can not be eliminated, as its \"return value\" is actually captured\n    // at the callsites. It should never be invoked, though.\n    throw new Error(msg || fmt(`Unexpected object: ${p}`));\n}\nfunction fmt(msg) {\n    return `Assertion Failed: ${msg}`;\n}\n//# sourceMappingURL=assert.js.map","/*\n███████╗██╗  ██╗ █████╗ ██████╗ ███████╗██████╗\n██╔════╝██║  ██║██╔══██╗██╔══██╗██╔════╝██╔══██╗\n███████╗███████║███████║██║  ██║█████╗  ██████╔╝\n╚════██║██╔══██║██╔══██║██║  ██║██╔══╝  ██╔══██╗\n███████║██║  ██║██║  ██║██████╔╝███████╗██║  ██║\n╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝ ╚══════╝╚═╝  ╚═╝\n*/\nexport function createProgram(gl, vertex, fragment) {\n    const program = gl.createProgram();\n    if (!program) {\n        throw new Error(\"Could not create Program\");\n    }\n    gl.attachShader(program, vertex);\n    gl.attachShader(program, fragment);\n    gl.linkProgram(program);\n    if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        return program;\n    }\n    const msg = gl.getProgramInfoLog(program);\n    gl.deleteProgram(program);\n    throw new Error(`Could not link shader program: ${msg}`);\n}\nexport function createShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    if (!shader) {\n        throw new Error(\"Could not create Shader\");\n    }\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        return shader;\n    }\n    const msg = gl.getShaderInfoLog(shader);\n    gl.deleteShader(shader);\n    const prettySource = source\n        .split(\"\\n\")\n        .map((l, i) => `${i + 1}: ${l}`)\n        .join(\"\\n\");\n    throw new Error(`Could not compile shader:\\n${msg}\\n${prettySource}`);\n}\n//# sourceMappingURL=glutil.js.map","/**\n * Chacks whether array is at least 2d, mostly useful because of return type\n * predicate.\n */\nexport function isArray2(array) {\n    return !!array.length && Array.isArray(array[0]);\n}\nexport function shape2(array) {\n    const outer = array.length;\n    const inner = outer ? array[0].length : 0;\n    return [outer, inner];\n}\nexport function ravel2(unraveled, shape) {\n    const [outer, inner] = shape;\n    const raveled = new Array(inner * outer);\n    unraveled.forEach((arr, i) => {\n        arr.forEach((elem, j) => {\n            raveled[inner * i + j] = elem;\n        });\n    });\n    return raveled;\n}\n//# sourceMappingURL=array.js.map","import * as assert from \"./assert\";\nimport * as array from \"./array\";\nimport { Device } from \"./device\";\nimport { VertexBuffer } from \"./vertex-buffer\";\nimport { ElementBuffer, } from \"./element-buffer\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\n/**\n * Attribute type for reading vertex buffers. POINTER provides normalization\n * options for converting integer values to floats. IPOINTER always converts\n * to data integers types.\n */\nexport var AttributeType;\n(function (AttributeType) {\n    AttributeType[\"POINTER\"] = \"pointer\";\n    AttributeType[\"IPOINTER\"] = \"ipointer\";\n})(AttributeType || (AttributeType = {}));\n/**\n * Vertex array objects store store vertex buffers, an index buffer,\n * and attributes with the vertex format for provided vertex buffers.\n */\nexport class VertexArray {\n    /**\n     * Create a new vertex array with attribute and element definitions.\n     * `attributes` can either reference an existing vertex buffer, or have\n     * enough information to create a vertex buffer.\n     * `elements` can either reference an existing element buffer, or be the\n     * arguments for `ElementBuffer.create()`\n     */\n    static create(dev, { attributes, elements }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const attrs = Object.entries(attributes)\n            .map(([locationStr, definition]) => {\n            if (!INT_PATTERN.test(locationStr)) {\n                throw new Error(\"Location not a number. Use Command#locate\");\n            }\n            const location = parseInt(locationStr, 10);\n            return AttributeDescriptor.create(gl, location, definition);\n        });\n        const elementBuffer = elements && (elements instanceof ElementBuffer\n            ? elements\n            : ElementBuffer.fromArray(gl, elements));\n        const count = elementBuffer\n            ? elementBuffer.count\n            : attrs.length\n                ? attrs\n                    .map(attr => attr.count)\n                    .reduce((min, curr) => Math.min(min, curr))\n                : 0;\n        const instAttrs = attrs.filter(attr => !!attr.divisor);\n        const instanceCount = instAttrs.length\n            ? instAttrs\n                .map(attr => attr.count * attr.divisor)\n                .reduce((min, curr) => Math.min(min, curr))\n            : 0;\n        return new VertexArray(gl, attrs, elementBuffer, count, instanceCount);\n    }\n    constructor(gl, attributes, elements, count, instanceCount) {\n        this.gl = gl;\n        this.elementBuffer = elements;\n        this.attributes = attributes;\n        this.count = count;\n        this.instanceCount = instanceCount;\n        this.glVertexArray = null;\n        this.init();\n    }\n    get hasElements() {\n        return !!this.elementBuffer;\n    }\n    get elementPrimitive() {\n        return this.elementBuffer && this.elementBuffer.primitive;\n    }\n    get elementType() {\n        return this.elementBuffer && this.elementBuffer.type;\n    }\n    /**\n     * Force vertex array reinitialization.\n     */\n    init() {\n        const { gl, attributes, elementBuffer } = this;\n        const vao = gl.createVertexArray();\n        gl.bindVertexArray(vao);\n        attributes.forEach(({ location, type, buffer: { glBuffer, type: glBufferType }, size, normalized = false, divisor, }) => {\n            // Enable sending attribute arrays for location\n            gl.enableVertexAttribArray(location);\n            // Send buffer\n            gl.bindBuffer(gl.ARRAY_BUFFER, glBuffer);\n            switch (type) {\n                case AttributeType.POINTER:\n                    gl.vertexAttribPointer(location, size, glBufferType, normalized, 0, 0);\n                    break;\n                case AttributeType.IPOINTER:\n                    gl.vertexAttribIPointer(location, size, glBufferType, 0, 0);\n                    break;\n                default: assert.never(type);\n            }\n            if (divisor) {\n                gl.vertexAttribDivisor(location, divisor);\n            }\n        });\n        if (elementBuffer) {\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer.glBuffer);\n        }\n        gl.bindVertexArray(null);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        this.glVertexArray = vao;\n    }\n    /**\n     * Reinitialize invalid vertex array, eg. after context is lost. Also tries\n     * to reinitialize vertex buffer and element buffer dependencies.\n     */\n    restore() {\n        const { gl, glVertexArray, attributes, elementBuffer } = this;\n        if (elementBuffer) {\n            elementBuffer.restore();\n        }\n        attributes.forEach(attr => attr.buffer.restore());\n        if (!gl.isVertexArray(glVertexArray)) {\n            this.init();\n        }\n    }\n}\n// TODO: this could use some further refactoring. Currently its just former\n// public API made private.\nclass AttributeDescriptor {\n    constructor(location, type, buffer, count, size, normalized, divisor) {\n        this.location = location;\n        this.type = type;\n        this.buffer = buffer;\n        this.count = count;\n        this.size = size;\n        this.normalized = normalized;\n        this.divisor = divisor;\n    }\n    static create(gl, location, props) {\n        if (Array.isArray(props)) {\n            if (array.isArray2(props)) {\n                const s = array.shape2(props);\n                const r = array.ravel2(props, s);\n                return new AttributeDescriptor(location, AttributeType.POINTER, VertexBuffer.fromFloat32Array(gl, r), s[0], s[1], false, 0);\n            }\n            return new AttributeDescriptor(location, AttributeType.POINTER, VertexBuffer.fromFloat32Array(gl, props), props.length, 1, false, 0);\n        }\n        return new AttributeDescriptor(location, props.type, props.value, props.count, props.size, props.type === AttributeType.POINTER\n            ? (props.normalized || false)\n            : false, props.divisor || 0);\n    }\n}\n//# sourceMappingURL=vertex-array.js.map","import * as assert from \"./assert\";\nimport { Device } from \"./device\";\nexport class Framebuffer {\n    static create(dev, { width, height, color, depth, stencil }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const colorBuffers = Array.isArray(color) ? color : [color];\n        colorBuffers.forEach(buffer => {\n            assert.equal(width, buffer.width, \"width\");\n            assert.equal(height, buffer.height, \"height\");\n        });\n        if (depth) {\n            assert.equal(width, depth.width, \"width\");\n            assert.equal(height, depth.height, \"height\");\n        }\n        if (stencil) {\n            assert.equal(width, stencil.width, \"width\");\n            assert.equal(height, stencil.height, \"height\");\n        }\n        return new Framebuffer(gl, width, height, colorBuffers, depth, stencil);\n    }\n    constructor(gl, width, height, colorBuffers, depthBuffer, stencilBuffer) {\n        this.gl = gl;\n        this.width = width;\n        this.height = height;\n        this.colorBuffers = colorBuffers;\n        this.depthBuffer = depthBuffer;\n        this.stencilBuffer = stencilBuffer;\n        this.glColorAttachments = colorBuffers\n            .map((_, i) => gl.COLOR_ATTACHMENT0 + i);\n        this.glFramebuffer = null;\n        this.init();\n    }\n    init() {\n        const { gl, colorBuffers, depthBuffer, stencilBuffer } = this;\n        const fbo = gl.createFramebuffer();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n        colorBuffers.forEach((buffer, i) => {\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.TEXTURE_2D, buffer.glTexture, 0);\n        });\n        if (depthBuffer) {\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depthBuffer, 0);\n        }\n        if (stencilBuffer) {\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.STENCIL_ATTACHMENT, gl.TEXTURE_2D, stencilBuffer, 0);\n        }\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        if (status !== gl.FRAMEBUFFER_COMPLETE) {\n            gl.deleteFramebuffer(fbo);\n            throw new Error(\"Framebuffer not complete\");\n        }\n        this.glFramebuffer = fbo;\n    }\n    restore() {\n        const { gl, glFramebuffer, colorBuffers, depthBuffer, stencilBuffer, } = this;\n        colorBuffers.forEach(buffer => buffer.restore());\n        if (depthBuffer) {\n            depthBuffer.restore();\n        }\n        if (stencilBuffer) {\n            stencilBuffer.restore();\n        }\n        if (!gl.isFramebuffer(glFramebuffer)) {\n            this.init();\n        }\n    }\n}\n//# sourceMappingURL=framebuffer.js.map","import * as assert from \"./assert\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nimport { VertexArray } from \"./vertex-array\";\nimport { Framebuffer } from \"./framebuffer\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nconst UNKNOWN_ATTRIB_LOCATION = -1;\nexport var DepthFunc;\n(function (DepthFunc) {\n    DepthFunc[DepthFunc[\"ALWAYS\"] = 519] = \"ALWAYS\";\n    DepthFunc[DepthFunc[\"NEVER\"] = 512] = \"NEVER\";\n    DepthFunc[DepthFunc[\"EQUAL\"] = 514] = \"EQUAL\";\n    DepthFunc[DepthFunc[\"NOTEQUAL\"] = 517] = \"NOTEQUAL\";\n    DepthFunc[DepthFunc[\"LESS\"] = 513] = \"LESS\";\n    DepthFunc[DepthFunc[\"LEQUAL\"] = 515] = \"LEQUAL\";\n    DepthFunc[DepthFunc[\"GREATER\"] = 516] = \"GREATER\";\n    DepthFunc[DepthFunc[\"GEQUAL\"] = 518] = \"GEQUAL\";\n})(DepthFunc || (DepthFunc = {}));\nexport var StencilFunc;\n(function (StencilFunc) {\n    StencilFunc[StencilFunc[\"ALWAYS\"] = 519] = \"ALWAYS\";\n    StencilFunc[StencilFunc[\"NEVER\"] = 512] = \"NEVER\";\n    StencilFunc[StencilFunc[\"EQUAL\"] = 514] = \"EQUAL\";\n    StencilFunc[StencilFunc[\"NOTEQUAL\"] = 517] = \"NOTEQUAL\";\n    StencilFunc[StencilFunc[\"LESS\"] = 513] = \"LESS\";\n    StencilFunc[StencilFunc[\"LEQUAL\"] = 515] = \"LEQUAL\";\n    StencilFunc[StencilFunc[\"GREATER\"] = 516] = \"GREATER\";\n    StencilFunc[StencilFunc[\"GEQUAL\"] = 518] = \"GEQUAL\";\n})(StencilFunc || (StencilFunc = {}));\nexport var StencilOp;\n(function (StencilOp) {\n    StencilOp[StencilOp[\"KEEP\"] = 7680] = \"KEEP\";\n    StencilOp[StencilOp[\"ZERO\"] = 0] = \"ZERO\";\n    StencilOp[StencilOp[\"REPLACE\"] = 7681] = \"REPLACE\";\n    StencilOp[StencilOp[\"INCR\"] = 7682] = \"INCR\";\n    StencilOp[StencilOp[\"INCR_WRAP\"] = 34055] = \"INCR_WRAP\";\n    StencilOp[StencilOp[\"DECR\"] = 7683] = \"DECR\";\n    StencilOp[StencilOp[\"DECR_WRAP\"] = 34056] = \"DECR_WRAP\";\n    StencilOp[StencilOp[\"INVERT\"] = 5386] = \"INVERT\";\n})(StencilOp || (StencilOp = {}));\nexport var BlendFunc;\n(function (BlendFunc) {\n    BlendFunc[BlendFunc[\"ZERO\"] = 0] = \"ZERO\";\n    BlendFunc[BlendFunc[\"ONE\"] = 1] = \"ONE\";\n    BlendFunc[BlendFunc[\"SRC_COLOR\"] = 768] = \"SRC_COLOR\";\n    BlendFunc[BlendFunc[\"SRC_ALPHA\"] = 770] = \"SRC_ALPHA\";\n    BlendFunc[BlendFunc[\"ONE_MINUS_SRC_COLOR\"] = 769] = \"ONE_MINUS_SRC_COLOR\";\n    BlendFunc[BlendFunc[\"ONE_MINUS_SRC_ALPHA\"] = 771] = \"ONE_MINUS_SRC_ALPHA\";\n    BlendFunc[BlendFunc[\"DST_COLOR\"] = 774] = \"DST_COLOR\";\n    BlendFunc[BlendFunc[\"DST_ALPHA\"] = 772] = \"DST_ALPHA\";\n    BlendFunc[BlendFunc[\"ONE_MINUS_DST_COLOR\"] = 775] = \"ONE_MINUS_DST_COLOR\";\n    BlendFunc[BlendFunc[\"ONE_MINUS_DST_ALPHA\"] = 773] = \"ONE_MINUS_DST_ALPHA\";\n    BlendFunc[BlendFunc[\"CONSTANT_COLOR\"] = 32769] = \"CONSTANT_COLOR\";\n    BlendFunc[BlendFunc[\"CONSTANT_ALPHA\"] = 32771] = \"CONSTANT_ALPHA\";\n    BlendFunc[BlendFunc[\"ONE_MINUS_CONSTANT_COLOR\"] = 32770] = \"ONE_MINUS_CONSTANT_COLOR\";\n    BlendFunc[BlendFunc[\"ONE_MINUS_CONSTANT_ALPHA\"] = 32772] = \"ONE_MINUS_CONSTANT_ALPHA\";\n})(BlendFunc || (BlendFunc = {}));\nexport var BlendEquation;\n(function (BlendEquation) {\n    BlendEquation[BlendEquation[\"FUNC_ADD\"] = 32774] = \"FUNC_ADD\";\n    BlendEquation[BlendEquation[\"FUNC_SUBTRACT\"] = 32778] = \"FUNC_SUBTRACT\";\n    BlendEquation[BlendEquation[\"FUNC_REVERSE_SUBTRACT\"] = 32779] = \"FUNC_REVERSE_SUBTRACT\";\n    BlendEquation[BlendEquation[\"MIN\"] = 32775] = \"MIN\";\n    BlendEquation[BlendEquation[\"MAX\"] = 32776] = \"MAX\";\n})(BlendEquation || (BlendEquation = {}));\nexport class Command {\n    constructor(gl, glProgram, uniformDescrs, count, offset, primitive, vertexArrayAcc, framebufferAcc, depthDescr, stencilDescr, blendDescr) {\n        this.gl = gl;\n        this.glProgram = glProgram;\n        this.primitive = typeof primitive === \"number\" ? primitive : undefined;\n        this.uniformDescrs = uniformDescrs;\n        this.count = count;\n        this.offset = offset;\n        this.vertexArrayAcc = vertexArrayAcc;\n        this.framebufferAcc = framebufferAcc;\n        this.depthDescr = depthDescr;\n        this.stencilDescr = stencilDescr;\n        this.blendDescr = blendDescr;\n        this.currVao = null;\n        this.currFbo = null;\n    }\n    static create(dev, { vert, frag, uniforms = {}, data, framebuffer, count = 0, offset = 0, primitive, depth, stencil, blend, }) {\n        assert.nonNull(vert, \"vert\");\n        assert.nonNull(frag, \"frag\");\n        assert.nonNull(data, \"data\");\n        if (depth) {\n            assert.nonNull(depth.func, \"depth.func\");\n        }\n        if (blend) {\n            assert.nonNull(blend.func, \"blend.func\");\n            assert.nonNull(blend.func.src, \"blend.func.src\");\n            assert.nonNull(blend.func.dst, \"blend.func.dst\");\n            if (typeof blend.func.src === \"object\") {\n                assert.nonNull(blend.func.src.rgb, \"blend.func.src.rgb\");\n                assert.nonNull(blend.func.src.alpha, \"blend.func.src.alpha\");\n            }\n            if (typeof blend.func.dst === \"object\") {\n                assert.nonNull(blend.func.dst.rgb, \"blend.func.dst.rgb\");\n                assert.nonNull(blend.func.dst.alpha, \"blend.func.dst.alpha\");\n            }\n        }\n        if (stencil) {\n            assert.nonNull(stencil.func, \"stencil.func\");\n            // TODO: complete stencil validation... validation framework?\n        }\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const vs = glutil.createShader(gl, gl.VERTEX_SHADER, vert);\n        const fs = glutil.createShader(gl, gl.FRAGMENT_SHADER, frag);\n        const prog = glutil.createProgram(gl, vs, fs);\n        gl.deleteShader(vs);\n        gl.deleteShader(fs);\n        const uniformDescrs = Object.entries(uniforms)\n            .map(([ident, uniform]) => {\n            const loc = gl.getUniformLocation(prog, ident);\n            if (!loc) {\n                throw new Error(`No location for uniform: ${ident}`);\n            }\n            return new UniformDescriptor(ident, loc, uniform);\n        });\n        const vertexArrayAcc = data\n            ? typeof data === \"function\" || data instanceof VertexArray\n                ? data\n                : VertexArray.create(dev, locate(gl, prog, data))\n            : undefined;\n        const framebufferAcc = framebuffer\n            ? typeof framebuffer === \"function\" || framebuffer instanceof Framebuffer\n                ? framebuffer\n                : Framebuffer.create(gl, framebuffer)\n            : undefined;\n        const depthDescr = parseDepth(depth);\n        const stencilDescr = parseStencil(stencil);\n        const blendDescr = parseBlend(blend);\n        return new Command(gl, prog, uniformDescrs, count, offset, primitive, vertexArrayAcc, framebufferAcc, depthDescr, stencilDescr, blendDescr);\n    }\n    execute(props) {\n        const { gl, glProgram } = this;\n        /*\n        When batching (passing in an array of props), the price for\n        gl.useProgram, enabling depth/stencil tests and blending is paid only\n        once for all draw calls.\n        */\n        gl.useProgram(glProgram);\n        this.beginDepth();\n        this.beginStencil();\n        this.beginBlend();\n        if (Array.isArray(props)) {\n            props.forEach((p, i) => this.executeInner(p, i));\n        }\n        else {\n            this.executeInner(props, 0);\n        }\n        // FBOs and VAOs are bound without unbinding in the inner loop\n        this.unbindFbo();\n        this.unbindVao();\n        this.endBlend();\n        this.endStencil();\n        this.endDepth();\n        gl.useProgram(null);\n    }\n    locate(vertexArrayProps) {\n        return locate(this.gl, this.glProgram, vertexArrayProps);\n    }\n    executeInner(props, index) {\n        const { gl, primitive, count, offset, vertexArrayAcc, framebufferAcc, } = this;\n        /*\n        Enabling multiple FBOs and VAOs per draw batch is a nice feature. We\n        cache currently bound FBO/VAO to prevent needless rebinding.\n        */\n        let bufferWidth = gl.drawingBufferWidth;\n        let bufferHeight = gl.drawingBufferHeight;\n        const fbo = framebufferAcc && access(props, index, framebufferAcc);\n        if (fbo) {\n            this.bindFbo(fbo);\n            bufferWidth = fbo.width;\n            bufferHeight = fbo.height;\n        }\n        gl.viewport(0, 0, bufferWidth, bufferHeight);\n        this.updateUniforms(props, index);\n        const vao = vertexArrayAcc && access(props, index, vertexArrayAcc);\n        if (vao) {\n            this.bindVao(vao);\n            const prim = typeof primitive === \"undefined\"\n                ? typeof vao.elementPrimitive === \"undefined\"\n                    ? gl.TRIANGLES\n                    : vao.elementPrimitive\n                : primitive;\n            const cnt = count ? Math.min(count, vao.count) : vao.count;\n            if (vao.hasElements) {\n                const ty = vao.elementType;\n                this.drawElements(prim, cnt, ty, offset, vao.instanceCount);\n            }\n            else {\n                this.drawArrays(prim, cnt, offset, vao.instanceCount);\n            }\n        }\n        else {\n            this.drawArrays(typeof primitive === \"undefined\" ? gl.TRIANGLES : primitive, count, offset, 0);\n        }\n    }\n    bindVao(vao) {\n        if (vao !== this.currVao) {\n            this.currVao = vao;\n            this.gl.bindVertexArray(vao.glVertexArray);\n        }\n    }\n    unbindVao() {\n        this.gl.bindVertexArray(null);\n        this.currVao = null;\n    }\n    bindFbo(fbo) {\n        const gl = this.gl;\n        if (fbo !== this.currFbo) {\n            this.currFbo = fbo;\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n            gl.drawBuffers(fbo.glColorAttachments);\n        }\n    }\n    unbindFbo() {\n        const gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        this.currFbo = null;\n    }\n    beginDepth() {\n        const { gl, depthDescr } = this;\n        if (depthDescr) {\n            gl.enable(gl.DEPTH_TEST);\n            gl.depthFunc(depthDescr.func);\n            gl.depthMask(depthDescr.mask);\n            gl.depthRange(depthDescr.rangeStart, depthDescr.rangeEnd);\n        }\n    }\n    endDepth() {\n        const { gl, depthDescr } = this;\n        if (depthDescr) {\n            gl.disable(gl.DEPTH_TEST);\n        }\n    }\n    beginStencil() {\n        const { gl, stencilDescr } = this;\n        if (stencilDescr) {\n            const { fFunc, bFunc, fFuncRef, bfuncRef, fFuncMask, bFuncMask, fMask, bMask, fOpFail, bOpFail, fOpZFail, bOpZFail, fOpZPass, bOpZPass, } = stencilDescr;\n            gl.enable(gl.STENCIL_TEST);\n            gl.stencilFuncSeparate(gl.FRONT, fFunc, fFuncRef, fFuncMask);\n            gl.stencilFuncSeparate(gl.BACK, bFunc, bfuncRef, bFuncMask);\n            gl.stencilMaskSeparate(gl.FRONT, fMask);\n            gl.stencilMaskSeparate(gl.BACK, bMask);\n            gl.stencilOpSeparate(gl.FRONT, fOpFail, fOpZFail, fOpZPass);\n            gl.stencilOpSeparate(gl.BACK, bOpFail, bOpZFail, bOpZPass);\n        }\n    }\n    endStencil() {\n        const { gl, stencilDescr } = this;\n        if (stencilDescr) {\n            gl.disable(gl.STENCIL_TEST);\n        }\n    }\n    beginBlend() {\n        const { gl, blendDescr } = this;\n        if (blendDescr) {\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(blendDescr.srcRGB, blendDescr.dstRGB, blendDescr.srcAlpha, blendDescr.dstAlpha);\n            gl.blendEquationSeparate(blendDescr.equationRGB, blendDescr.equationAlpha);\n            if (blendDescr.color) {\n                const [r, g, b, a] = blendDescr.color;\n                gl.blendColor(r, g, b, a);\n            }\n        }\n    }\n    endBlend() {\n        const { gl, blendDescr } = this;\n        if (blendDescr) {\n            gl.disable(gl.BLEND);\n        }\n    }\n    drawArrays(primitive, count, offset, instCount) {\n        if (instCount) {\n            this.gl.drawArraysInstanced(primitive, offset, count, instCount);\n        }\n        else {\n            this.gl.drawArrays(primitive, offset, count);\n        }\n    }\n    drawElements(primitive, count, type, offset, instCount) {\n        const gl = this.gl;\n        if (instCount) {\n            gl.drawElementsInstanced(primitive, count, type, offset, instCount);\n        }\n        else {\n            gl.drawElements(primitive, count, type, offset);\n        }\n    }\n    updateUniforms(props, index) {\n        const gl = this.gl;\n        let textureUnitOffset = 0;\n        this.uniformDescrs.forEach(({ identifier: ident, location: loc, definition: def, }) => {\n            switch (def.type) {\n                case \"1f\":\n                    gl.uniform1f(loc, access(props, index, def.value));\n                    break;\n                case \"1fv\":\n                    gl.uniform1fv(loc, access(props, index, def.value));\n                    break;\n                case \"1i\":\n                    gl.uniform1i(loc, access(props, index, def.value));\n                    break;\n                case \"1iv\":\n                    gl.uniform1iv(loc, access(props, index, def.value));\n                    break;\n                case \"1ui\":\n                    gl.uniform1ui(loc, access(props, index, def.value));\n                    break;\n                case \"1uiv\":\n                    gl.uniform1uiv(loc, access(props, index, def.value));\n                    break;\n                case \"2f\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2f(loc, x, y);\n                    break;\n                }\n                case \"2fv\":\n                    gl.uniform2fv(loc, access(props, index, def.value));\n                    break;\n                case \"2i\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2i(loc, x, y);\n                    break;\n                }\n                case \"2iv\":\n                    gl.uniform2iv(loc, access(props, index, def.value));\n                    break;\n                case \"2ui\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2ui(loc, x, y);\n                    break;\n                }\n                case \"2uiv\":\n                    gl.uniform2uiv(loc, access(props, index, def.value));\n                    break;\n                case \"3f\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3f(loc, x, y, z);\n                    break;\n                }\n                case \"3fv\":\n                    gl.uniform3fv(loc, access(props, index, def.value));\n                    break;\n                case \"3i\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3i(loc, x, y, z);\n                    break;\n                }\n                case \"3iv\":\n                    gl.uniform3iv(loc, access(props, index, def.value));\n                    break;\n                case \"3ui\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3ui(loc, x, y, z);\n                    break;\n                }\n                case \"3uiv\":\n                    gl.uniform3uiv(loc, access(props, index, def.value));\n                    break;\n                case \"4f\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4f(loc, x, y, z, w);\n                    break;\n                }\n                case \"4fv\":\n                    gl.uniform4fv(loc, access(props, index, def.value));\n                    break;\n                case \"4i\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4i(loc, x, y, z, w);\n                    break;\n                }\n                case \"4iv\":\n                    gl.uniform4iv(loc, access(props, index, def.value));\n                    break;\n                case \"4ui\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4ui(loc, x, y, z, w);\n                    break;\n                }\n                case \"4uiv\":\n                    gl.uniform4uiv(loc, access(props, index, def.value));\n                    break;\n                case \"matrix2fv\":\n                    gl.uniformMatrix2fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix3fv\":\n                    gl.uniformMatrix3fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix4fv\":\n                    gl.uniformMatrix4fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"texture\":\n                    // TODO: is this the best way? (is it fast? can we cache?)\n                    const texture = access(props, index, def.value);\n                    const currentTexture = textureUnitOffset++;\n                    gl.activeTexture(gl.TEXTURE0 + currentTexture);\n                    gl.bindTexture(gl.TEXTURE_2D, texture.glTexture);\n                    gl.uniform1i(loc, currentTexture);\n                    break;\n                default:\n                    assert.never(def, `Unknown uniform type: (${ident})`);\n                    break;\n            }\n        });\n    }\n}\nfunction locate(gl, glProgram, { attributes, elements }) {\n    const locatedAttributes = Object.entries(attributes)\n        .reduce((accum, [identifier, definition]) => {\n        if (INT_PATTERN.test(identifier)) {\n            accum[identifier] = definition;\n        }\n        else {\n            const location = gl.getAttribLocation(glProgram, identifier);\n            if (location === UNKNOWN_ATTRIB_LOCATION) {\n                throw new Error(`No location for attrib: ${identifier}`);\n            }\n            accum[location] = definition;\n        }\n        return accum;\n    }, {});\n    return { attributes: locatedAttributes, elements };\n}\nfunction access(props, index, value) {\n    return typeof value === \"function\" ? value(props, index) : value;\n}\nclass DepthDescriptor {\n    constructor(func, mask, rangeStart, rangeEnd) {\n        this.func = func;\n        this.mask = mask;\n        this.rangeStart = rangeStart;\n        this.rangeEnd = rangeEnd;\n    }\n}\nclass StencilDescriptor {\n    constructor(fFunc, bFunc, fFuncRef, bfuncRef, fFuncMask, bFuncMask, fMask, bMask, fOpFail, bOpFail, fOpZFail, bOpZFail, fOpZPass, bOpZPass) {\n        this.fFunc = fFunc;\n        this.bFunc = bFunc;\n        this.fFuncRef = fFuncRef;\n        this.bfuncRef = bfuncRef;\n        this.fFuncMask = fFuncMask;\n        this.bFuncMask = bFuncMask;\n        this.fMask = fMask;\n        this.bMask = bMask;\n        this.fOpFail = fOpFail;\n        this.bOpFail = bOpFail;\n        this.fOpZFail = fOpZFail;\n        this.bOpZFail = bOpZFail;\n        this.fOpZPass = fOpZPass;\n        this.bOpZPass = bOpZPass;\n    }\n}\nclass BlendDescriptor {\n    constructor(srcRGB, srcAlpha, dstRGB, dstAlpha, equationRGB, equationAlpha, color) {\n        this.srcRGB = srcRGB;\n        this.srcAlpha = srcAlpha;\n        this.dstRGB = dstRGB;\n        this.dstAlpha = dstAlpha;\n        this.equationRGB = equationRGB;\n        this.equationAlpha = equationAlpha;\n        this.color = color;\n    }\n}\nclass UniformDescriptor {\n    constructor(identifier, location, definition) {\n        this.identifier = identifier;\n        this.location = location;\n        this.definition = definition;\n    }\n}\nfunction parseDepth(depth) {\n    if (!depth) {\n        return undefined;\n    }\n    return new DepthDescriptor(depth.func || DepthFunc.LESS, typeof depth.mask === \"boolean\" ? depth.mask : true, depth.range ? depth.range[0] : 0, depth.range ? depth.range[1] : 1);\n}\nfunction parseStencil(stencil) {\n    if (!stencil) {\n        return undefined;\n    }\n    return new StencilDescriptor(typeof stencil.func.func === \"object\"\n        ? stencil.func.func.front\n        : stencil.func.func, typeof stencil.func.func === \"object\"\n        ? stencil.func.func.back\n        : stencil.func.func, typeof stencil.func.ref !== \"undefined\"\n        ? typeof stencil.func.ref === \"object\"\n            ? stencil.func.ref.front\n            : stencil.func.ref\n        : 1, typeof stencil.func.ref !== \"undefined\"\n        ? typeof stencil.func.ref === \"object\"\n            ? stencil.func.ref.back\n            : stencil.func.ref\n        : 1, typeof stencil.func.mask !== \"undefined\"\n        ? typeof stencil.func.mask === \"object\"\n            ? stencil.func.mask.front\n            : stencil.func.mask\n        : 0xFF, typeof stencil.func.mask !== \"undefined\"\n        ? typeof stencil.func.mask === \"object\"\n            ? stencil.func.mask.back\n            : stencil.func.mask\n        : 0xFF, typeof stencil.mask !== \"undefined\"\n        ? typeof stencil.mask === \"object\"\n            ? stencil.mask.front\n            : stencil.mask\n        : 0xFF, typeof stencil.mask !== \"undefined\"\n        ? typeof stencil.mask === \"object\"\n            ? stencil.mask.back\n            : stencil.mask\n        : 0xFF, stencil.op\n        ? typeof stencil.op.fail === \"object\"\n            ? stencil.op.fail.front\n            : stencil.op.fail\n        : StencilOp.KEEP, stencil.op\n        ? typeof stencil.op.fail === \"object\"\n            ? stencil.op.fail.back\n            : stencil.op.fail\n        : StencilOp.KEEP, stencil.op\n        ? typeof stencil.op.zfail === \"object\"\n            ? stencil.op.zfail.front\n            : stencil.op.zfail\n        : StencilOp.KEEP, stencil.op\n        ? typeof stencil.op.zfail === \"object\"\n            ? stencil.op.zfail.back\n            : stencil.op.zfail\n        : StencilOp.KEEP, stencil.op\n        ? typeof stencil.op.zpass === \"object\"\n            ? stencil.op.zpass.front\n            : stencil.op.zpass\n        : StencilOp.KEEP, stencil.op\n        ? typeof stencil.op.zpass === \"object\"\n            ? stencil.op.zpass.back\n            : stencil.op.zpass\n        : StencilOp.KEEP);\n}\nfunction parseBlend(blend) {\n    if (!blend) {\n        return undefined;\n    }\n    return new BlendDescriptor(typeof blend.func.src === \"object\"\n        ? blend.func.src.rgb\n        : blend.func.src, typeof blend.func.src === \"object\"\n        ? blend.func.src.alpha\n        : blend.func.src, typeof blend.func.dst === \"object\"\n        ? blend.func.dst.rgb\n        : blend.func.dst, typeof blend.func.dst === \"object\"\n        ? blend.func.dst.alpha\n        : blend.func.dst, blend.equation\n        ? typeof blend.equation === \"object\"\n            ? blend.equation.rgb\n            : blend.equation\n        : BlendEquation.FUNC_ADD, blend.equation\n        ? typeof blend.equation === \"object\"\n            ? blend.equation.alpha\n            : blend.equation\n        : BlendEquation.FUNC_ADD, blend.color);\n}\n//# sourceMappingURL=command.js.map","import { Device } from \"./device\";\nexport var TextureWrap;\n(function (TextureWrap) {\n    TextureWrap[TextureWrap[\"CLAMP_TO_EDGE\"] = 33071] = \"CLAMP_TO_EDGE\";\n    TextureWrap[TextureWrap[\"REPEAT\"] = 10497] = \"REPEAT\";\n    TextureWrap[TextureWrap[\"MIRRORED_REPEAT\"] = 33648] = \"MIRRORED_REPEAT\";\n})(TextureWrap || (TextureWrap = {}));\nexport var TextureFilter;\n(function (TextureFilter) {\n    TextureFilter[TextureFilter[\"NEAREST\"] = 9728] = \"NEAREST\";\n    TextureFilter[TextureFilter[\"LINEAR\"] = 9729] = \"LINEAR\";\n    TextureFilter[TextureFilter[\"NEAREST_MIPMAP_NEAREST\"] = 9984] = \"NEAREST_MIPMAP_NEAREST\";\n    TextureFilter[TextureFilter[\"LINEAR_MIPMAP_NEAREST\"] = 9985] = \"LINEAR_MIPMAP_NEAREST\";\n    TextureFilter[TextureFilter[\"NEAREST_MIPMAP_LINEAR\"] = 9986] = \"NEAREST_MIPMAP_LINEAR\";\n    TextureFilter[TextureFilter[\"LINEAR_MIPMAP_LINEAR\"] = 9987] = \"LINEAR_MIPMAP_LINEAR\";\n})(TextureFilter || (TextureFilter = {}));\nexport var TextureInternalFormat;\n(function (TextureInternalFormat) {\n    // R\n    TextureInternalFormat[TextureInternalFormat[\"R8\"] = 33321] = \"R8\";\n    TextureInternalFormat[TextureInternalFormat[\"R8_SNORM\"] = 36756] = \"R8_SNORM\";\n    TextureInternalFormat[TextureInternalFormat[\"R8UI\"] = 33330] = \"R8UI\";\n    TextureInternalFormat[TextureInternalFormat[\"R8I\"] = 33329] = \"R8I\";\n    TextureInternalFormat[TextureInternalFormat[\"R16UI\"] = 33332] = \"R16UI\";\n    TextureInternalFormat[TextureInternalFormat[\"R16I\"] = 33331] = \"R16I\";\n    TextureInternalFormat[TextureInternalFormat[\"R32UI\"] = 33334] = \"R32UI\";\n    TextureInternalFormat[TextureInternalFormat[\"R32I\"] = 33333] = \"R32I\";\n    TextureInternalFormat[TextureInternalFormat[\"R16F\"] = 33325] = \"R16F\";\n    TextureInternalFormat[TextureInternalFormat[\"R32F\"] = 33326] = \"R32F\";\n    // RG\n    TextureInternalFormat[TextureInternalFormat[\"RG8\"] = 33323] = \"RG8\";\n    TextureInternalFormat[TextureInternalFormat[\"RG8_SNORM\"] = 36757] = \"RG8_SNORM\";\n    TextureInternalFormat[TextureInternalFormat[\"RG8UI\"] = 33336] = \"RG8UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RG8I\"] = 33335] = \"RG8I\";\n    TextureInternalFormat[TextureInternalFormat[\"RG16UI\"] = 33338] = \"RG16UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RG16I\"] = 33337] = \"RG16I\";\n    TextureInternalFormat[TextureInternalFormat[\"RG32UI\"] = 33340] = \"RG32UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RG32I\"] = 33339] = \"RG32I\";\n    TextureInternalFormat[TextureInternalFormat[\"RG16F\"] = 33327] = \"RG16F\";\n    TextureInternalFormat[TextureInternalFormat[\"RG32F\"] = 33328] = \"RG32F\";\n    // RGB\n    TextureInternalFormat[TextureInternalFormat[\"RGB8\"] = 32849] = \"RGB8\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB8_SNORM\"] = 36758] = \"RGB8_SNORM\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB8UI\"] = 36221] = \"RGB8UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB8I\"] = 36239] = \"RGB8I\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB16UI\"] = 36215] = \"RGB16UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB16I\"] = 36233] = \"RGB16I\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB32UI\"] = 36209] = \"RGB32UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB32I\"] = 36227] = \"RGB32I\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB16F\"] = 34843] = \"RGB16F\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB32F\"] = 34837] = \"RGB32F\";\n    // RGBA\n    TextureInternalFormat[TextureInternalFormat[\"RGBA8\"] = 32856] = \"RGBA8\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA8_SNORM\"] = 36759] = \"RGBA8_SNORM\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA8UI\"] = 36220] = \"RGBA8UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA8I\"] = 36238] = \"RGBA8I\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA16UI\"] = 36214] = \"RGBA16UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA16I\"] = 36232] = \"RGBA16I\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA32UI\"] = 36208] = \"RGBA32UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA32I\"] = 36226] = \"RGBA32I\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA16F\"] = 34842] = \"RGBA16F\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA32F\"] = 34836] = \"RGBA32F\";\n    // TODO: support exotic formats\n    // ~DEPTH\n    // DEPTH_COMPONENT16\n    // DEPTH_COMPONENT24\n    // DEPTH_COMPONENT32F\n    // ~DEPTH STENCIL\n    // DEPTH24_STENCIL8\n    // DEPTH32F_STENCIL8\n    // ~LUMINANCE ALPHA\n    // LUMINANCE_ALPHA\n    // LUMINANCE\n    // ALPHA\n})(TextureInternalFormat || (TextureInternalFormat = {}));\nexport var TextureFormat;\n(function (TextureFormat) {\n    TextureFormat[TextureFormat[\"RED\"] = 6403] = \"RED\";\n    TextureFormat[TextureFormat[\"RG\"] = 33319] = \"RG\";\n    TextureFormat[TextureFormat[\"RGB\"] = 6407] = \"RGB\";\n    TextureFormat[TextureFormat[\"RGBA\"] = 6408] = \"RGBA\";\n    TextureFormat[TextureFormat[\"RED_INTEGER\"] = 36244] = \"RED_INTEGER\";\n    TextureFormat[TextureFormat[\"RG_INTEGER\"] = 33320] = \"RG_INTEGER\";\n    TextureFormat[TextureFormat[\"RGB_INTEGER\"] = 36248] = \"RGB_INTEGER\";\n    TextureFormat[TextureFormat[\"RGBA_INTEGER\"] = 36249] = \"RGBA_INTEGER\";\n    // TODO: support exotic formats\n    // DEPTH_COMPONENT\n    // DEPTH_STENCIL\n    // LUMINANCE_ALPHA\n    // LUMINANCE\n    // ALPHA\n})(TextureFormat || (TextureFormat = {}));\nexport var TextureType;\n(function (TextureType) {\n    TextureType[TextureType[\"BYTE\"] = 5120] = \"BYTE\";\n    TextureType[TextureType[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\n    TextureType[TextureType[\"SHORT\"] = 5122] = \"SHORT\";\n    TextureType[TextureType[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n    TextureType[TextureType[\"INT\"] = 5124] = \"INT\";\n    TextureType[TextureType[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\n    TextureType[TextureType[\"FLOAT\"] = 5126] = \"FLOAT\";\n    // TODO: support exotic formats\n    // HALF_FLOAT\n    // UNSIGNED_SHORT_4_4_4_4\n    // UNSIGNED_SHORT_5_5_5_1\n    // UNSIGNED_SHORT_5_6_5\n    // UNSIGNED_INT_24_8\n    // UNSIGNED_INT_5_9_9_9_REV\n    // UNSIGNED_INT_2_10_10_10_REV\n    // UNSIGNED_INT_10F_11F_11F_REV\n    // FLOAT_32_UNSIGNED_INT_24_8_REV\n})(TextureType || (TextureType = {}));\nexport class Texture {\n    static fromImage(dev, image, options) {\n        return Texture.fromRGBA8(dev, image.data, image.width, image.height, options);\n    }\n    static fromRGBA8(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Uint8Array\n            ? data\n            // Note: we also have to convert Uint8ClampedArray to Uint8Array\n            // because of webgl bug\n            // https://github.com/KhronosGroup/WebGL/issues/1533\n            : new Uint8Array(data), width, height, TextureInternalFormat.RGBA8, TextureFormat.RGBA, TextureType.UNSIGNED_BYTE, options);\n    }\n    static fromRG16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, TextureInternalFormat.RG16F, TextureFormat.RG, TextureType.FLOAT, options);\n    }\n    static fromRGB16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, TextureInternalFormat.RGB16F, TextureFormat.RGB, TextureType.FLOAT, options);\n    }\n    static fromRGBA16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, TextureInternalFormat.RGBA16F, TextureFormat.RGBA, TextureType.FLOAT, options);\n    }\n    static fromRGB32F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, TextureInternalFormat.RGB32F, TextureFormat.RGB, TextureType.FLOAT, options);\n    }\n    static fromRGBA32F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, TextureInternalFormat.RGBA32F, TextureFormat.RGBA, TextureType.FLOAT, options);\n    }\n    static fromArrayBufferView(dev, data, width, height, internalFormat, format, type, { min = TextureFilter.NEAREST, mag = TextureFilter.NEAREST, wrapS = TextureWrap.CLAMP_TO_EDGE, wrapT = TextureWrap.CLAMP_TO_EDGE, mipmap = false, } = {}) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new Texture(gl, data, width, height, internalFormat, format, type, wrapS, wrapT, min, mag, mipmap);\n    }\n    constructor(gl, data, width, height, internalFormat, format, type, wrapS, wrapT, minFilter, magFilter, mipmap) {\n        this.gl = gl;\n        this.data = data;\n        this.width = width;\n        this.height = height;\n        this.internalFormat = internalFormat;\n        this.format = format;\n        this.type = type;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.mipmap = mipmap;\n        this.glTexture = null;\n        this.init();\n    }\n    init() {\n        const { gl, data, width, height, internalFormat, format, type, wrapS, wrapT, minFilter, magFilter, mipmap, } = this;\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texStorage2D(gl.TEXTURE_2D, 1, internalFormat, width, height);\n        if (data) {\n            gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, width, height, format, type, data);\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\n        if (mipmap) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        this.glTexture = texture;\n    }\n    restore() {\n        const { gl, glTexture } = this;\n        if (!gl.isTexture(glTexture)) {\n            this.init();\n        }\n    }\n}\n//# sourceMappingURL=texture.js.map"],"names":["Extension","VertexBufferType","ElementBufferType","Primitive","Device","[object Object]","gl","canvas","explicitPixelRatio","explicitViewport","this","element","document","body","options","HTMLCanvasElement","fromCanvas","createElement","appendChild","antialias","alpha","depth","stencil","preserveDrawingBuffer","context","getContext","Error","fromContext","pixelRatio","viewport","extensions","forEach","ext","getExtension","dev","update","bufferWidth","drawingBufferWidth","bufferHeight","drawingBufferHeight","canvasWidth","width","canvasHeight","height","canvasCSSWidth","clientWidth","canvasCSSHeight","clientHeight","window","devicePixelRatio","dpr","r","g","b","a","fbo","bindFramebuffer","FRAMEBUFFER","glFramebuffer","clearColor","clear","COLOR_BUFFER_BIT","clearDepth","DEPTH_BUFFER_BIT","clearStencil","STENCIL_BUFFER_BIT","never","p","msg","fmt","createProgram","vertex","fragment","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","prettySource","split","map","l","i","join","isArray2","array","length","Array","isArray","shape2","outer","ravel2","unraveled","shape","inner","raveled","arr","elem","j","VertexBuffer","data","glBuffer","init","BYTE","Int8Array","SHORT","Int16Array","INT","Int32Array","UNSIGNED_BYTE","Uint8Array","UNSIGNED_SHORT","Uint16Array","UNSIGNED_INT","Uint32Array","FLOAT","Float32Array","count","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","isBuffer","ElementBuffer","primitive","array.isArray2","s","array.shape2","array.ravel2","prim","TRIANGLES","LINES","fromUint32Array","POINTS","ELEMENT_ARRAY_BUFFER","INT_PATTERN","AttributeType","VertexArray","attributes","elements","attrs","Object","entries","locationStr","definition","test","location","parseInt","AttributeDescriptor","create","elementBuffer","fromArray","attr","reduce","min","curr","Math","instAttrs","filter","divisor","instanceCount","glVertexArray","hasElements","elementPrimitive","elementType","vao","createVertexArray","bindVertexArray","glBufferType","size","normalized","enableVertexAttribArray","POINTER","vertexAttribPointer","IPOINTER","vertexAttribIPointer","assert.never","vertexAttribDivisor","restore","isVertexArray","props","fromFloat32Array","value","Framebuffer","color","colorBuffers","depthBuffer","stencilBuffer","glColorAttachments","_","COLOR_ATTACHMENT0","createFramebuffer","framebufferTexture2D","TEXTURE_2D","glTexture","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","deleteFramebuffer","isFramebuffer","UNKNOWN_ATTRIB_LOCATION","DepthFunc","StencilFunc","StencilOp","BlendFunc","BlendEquation","TextureWrap","TextureFilter","TextureInternalFormat","TextureFormat","TextureType","Command","glProgram","uniformDescrs","offset","vertexArrayAcc","framebufferAcc","depthDescr","stencilDescr","blendDescr","undefined","currVao","currFbo","vert","frag","uniforms","framebuffer","blend","vs","glutil.createShader","VERTEX_SHADER","fs","FRAGMENT_SHADER","prog","glutil.createProgram","ident","uniform","loc","getUniformLocation","UniformDescriptor","locate","parseDepth","parseStencil","parseBlend","useProgram","beginDepth","beginStencil","beginBlend","executeInner","unbindFbo","unbindVao","endBlend","endStencil","endDepth","vertexArrayProps","index","access","bindFbo","updateUniforms","bindVao","cnt","ty","drawElements","drawArrays","drawBuffers","enable","DEPTH_TEST","depthFunc","func","depthMask","mask","depthRange","rangeStart","rangeEnd","disable","fFunc","bFunc","fFuncRef","bfuncRef","fFuncMask","bFuncMask","fMask","bMask","fOpFail","bOpFail","fOpZFail","bOpZFail","fOpZPass","bOpZPass","STENCIL_TEST","stencilFuncSeparate","FRONT","BACK","stencilMaskSeparate","stencilOpSeparate","BLEND","blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","blendEquationSeparate","equationRGB","equationAlpha","blendColor","instCount","drawArraysInstanced","drawElementsInstanced","textureUnitOffset","identifier","def","uniform1f","uniform1fv","uniform1i","uniform1iv","uniform1ui","uniform1uiv","x","y","uniform2f","uniform2fv","uniform2i","uniform2iv","uniform2ui","uniform2uiv","z","uniform3f","uniform3fv","uniform3i","uniform3iv","uniform3ui","uniform3uiv","w","uniform4f","uniform4fv","uniform4i","uniform4iv","uniform4ui","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","texture","currentTexture","activeTexture","TEXTURE0","bindTexture","accum","getAttribLocation","DepthDescriptor","StencilDescriptor","BlendDescriptor","LESS","range","front","back","ref","op","fail","KEEP","zfail","zpass","src","rgb","dst","equation","FUNC_ADD","Texture","image","fromRGBA8","fromArrayBufferView","RGBA8","RGBA","RG16F","RG","RGB16F","RGB","RGBA16F","RGB32F","RGBA32F","internalFormat","format","NEAREST","mag","wrapS","CLAMP_TO_EDGE","wrapT","mipmap","minFilter","magFilter","createTexture","texStorage2D","texSubImage2D","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","generateMipmap","isTexture"],"mappings":"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"}