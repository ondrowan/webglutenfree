{"version":3,"file":"glutenfree.production.es.min.js","sources":["../build/device.js","../build/vertex-buffer.js","../build/element-buffer.js","../build/assert.js","../build/glutil.js","../build/array.js","../build/vertex-array.js","../build/framebuffer.js","../build/command.js","../build/texture.js"],"sourcesContent":["export var Extension;\n(function (Extension) {\n    Extension[\"EXTColorBufferFloat\"] = \"EXT_color_buffer_float\";\n    Extension[\"OESTextureFloatLinear\"] = \"OES_texture_float_linear\";\n})(Extension || (Extension = {}));\nexport class Device {\n    constructor(gl, canvas, explicitPixelRatio, explicitViewport) {\n        this.gl = gl;\n        this.canvas = canvas;\n        this.explicitPixelRatio = explicitPixelRatio;\n        this.explicitViewport = explicitViewport;\n    }\n    static mount(element = document.body, options) {\n        if (element instanceof HTMLCanvasElement) {\n            return Device.fromCanvas(element, options);\n        }\n        const canvas = document.createElement(\"canvas\");\n        element.appendChild(canvas);\n        return Device.fromCanvas(canvas, options);\n    }\n    static fromCanvas(canvas, options = {}) {\n        const { antialias = true, alpha = true, depth = true, stencil = true, preserveDrawingBuffer = false, } = options.context || {};\n        const gl = canvas.getContext(\"webgl2\", {\n            antialias,\n            alpha,\n            depth,\n            stencil,\n            preserveDrawingBuffer,\n        });\n        if (!gl) {\n            throw new Error(\"Could not get webgl2 context\");\n        }\n        return Device.fromContext(gl, options);\n    }\n    static fromContext(gl, { pixelRatio, viewport, extensions, } = {}) {\n        if (extensions) {\n            extensions.forEach(ext => {\n                if (!gl.getExtension(ext)) {\n                    throw new Error(`Could not get extension ${ext}`);\n                }\n            });\n        }\n        const dev = new Device(gl, gl.canvas, pixelRatio, viewport);\n        dev.update();\n        return dev;\n    }\n    get bufferWidth() {\n        return this.gl.drawingBufferWidth;\n    }\n    get bufferHeight() {\n        return this.gl.drawingBufferHeight;\n    }\n    get canvasWidth() {\n        return this.canvas.width;\n    }\n    get canvasHeight() {\n        return this.canvas.height;\n    }\n    get canvasCSSWidth() {\n        return this.canvas.clientWidth;\n    }\n    get canvasCSSHeight() {\n        return this.canvas.clientHeight;\n    }\n    get pixelRatio() {\n        return this.explicitPixelRatio || window.devicePixelRatio;\n    }\n    update() {\n        const dpr = this.pixelRatio;\n        const canvas = this.canvas;\n        const width = this.explicitViewport\n            && this.explicitViewport[0]\n            || canvas.clientWidth * dpr;\n        const height = this.explicitViewport\n            && this.explicitViewport[1]\n            || canvas.clientHeight * dpr;\n        if (width !== canvas.width) {\n            canvas.width = width;\n        }\n        if (height !== canvas.height) {\n            canvas.height = height;\n        }\n    }\n    clearColor(r, g, b, a, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearDepth(depth, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearDepth(depth);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearStencil(stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearStencil(stencil);\n        gl.clear(gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearColorAndDepth(r, g, b, a, depth, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearDepthAndStencil(depth, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearDepth(depth);\n        gl.clearStencil(stencil);\n        gl.clear(gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearColorAndStencil(r, g, b, a, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearStencil(stencil);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clear(r, g, b, a, depth, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clearStencil(stencil);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n}\n//# sourceMappingURL=device.js.map","import * as assert from \"./assert\";\nimport { Device } from \"./device\";\nexport var VertexBufferType;\n(function (VertexBufferType) {\n    VertexBufferType[VertexBufferType[\"BYTE\"] = 5120] = \"BYTE\";\n    VertexBufferType[VertexBufferType[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\n    VertexBufferType[VertexBufferType[\"SHORT\"] = 5122] = \"SHORT\";\n    VertexBufferType[VertexBufferType[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n    VertexBufferType[VertexBufferType[\"INT\"] = 5124] = \"INT\";\n    VertexBufferType[VertexBufferType[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\n    VertexBufferType[VertexBufferType[\"FLOAT\"] = 5126] = \"FLOAT\";\n})(VertexBufferType || (VertexBufferType = {}));\nexport class VertexBuffer {\n    constructor(gl, type, data) {\n        this.gl = gl;\n        this.type = type;\n        this.data = data;\n        this.glBuffer = null;\n        this.init();\n    }\n    static create(dev, props) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        switch (props.type) {\n            case VertexBufferType.BYTE:\n                return VertexBuffer.fromInt8Array(gl, props.data);\n            case VertexBufferType.SHORT:\n                return VertexBuffer.fromInt16Array(gl, props.data);\n            case VertexBufferType.INT:\n                return VertexBuffer.fromInt32Array(gl, props.data);\n            case VertexBufferType.UNSIGNED_BYTE:\n                return VertexBuffer.fromUint8Array(gl, props.data);\n            case VertexBufferType.UNSIGNED_SHORT:\n                return VertexBuffer.fromUint16Array(gl, props.data);\n            case VertexBufferType.UNSIGNED_INT:\n                return VertexBuffer.fromUint32Array(gl, props.data);\n            case VertexBufferType.FLOAT:\n                return VertexBuffer.fromFloat32Array(gl, props.data);\n            default: return assert.never(props);\n        }\n    }\n    static fromInt8Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.BYTE, data instanceof Int8Array ? data : new Int8Array(data));\n    }\n    static fromInt16Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.SHORT, data instanceof Int16Array ? data : new Int16Array(data));\n    }\n    static fromInt32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.INT, data instanceof Int32Array ? data : new Int32Array(data));\n    }\n    static fromUint8Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.UNSIGNED_BYTE, \n        // Note: we also have to convert Uint8ClampedArray to Uint8Array\n        // because of webgl bug\n        // https://github.com/KhronosGroup/WebGL/issues/1533\n        data instanceof Uint8Array ? data : new Uint8Array(data));\n    }\n    static fromUint16Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.UNSIGNED_SHORT, data instanceof Uint16Array ? data : new Uint16Array(data));\n    }\n    static fromUint32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.UNSIGNED_INT, data instanceof Uint32Array ? data : new Uint32Array(data));\n    }\n    static fromFloat32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, VertexBufferType.FLOAT, data instanceof Float32Array ? data : new Float32Array(data));\n    }\n    get count() {\n        return this.data.length;\n    }\n    init() {\n        const { gl, data } = this;\n        const buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        this.glBuffer = buffer;\n    }\n    restore() {\n        const { gl, glBuffer } = this;\n        if (!gl.isBuffer(glBuffer)) {\n            this.init();\n        }\n    }\n}\n//# sourceMappingURL=vertex-buffer.js.map","import * as assert from \"./assert\";\nimport * as array from \"./array\";\nimport { Device } from \"./device\";\nexport var ElementBufferType;\n(function (ElementBufferType) {\n    // Should we enable this?\n    // UNSIGNED_BYTE = 0x1401,\n    ElementBufferType[ElementBufferType[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n    ElementBufferType[ElementBufferType[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\n})(ElementBufferType || (ElementBufferType = {}));\nexport var Primitive;\n(function (Primitive) {\n    Primitive[Primitive[\"POINTS\"] = 0] = \"POINTS\";\n    Primitive[Primitive[\"LINES\"] = 1] = \"LINES\";\n    Primitive[Primitive[\"LINE_LOOP\"] = 2] = \"LINE_LOOP\";\n    Primitive[Primitive[\"LINE_STRIP\"] = 3] = \"LINE_STRIP\";\n    Primitive[Primitive[\"TRIANGLES\"] = 4] = \"TRIANGLES\";\n    Primitive[Primitive[\"TRIANGLE_STRIP\"] = 5] = \"TRIANGLE_STRIP\";\n    Primitive[Primitive[\"TRIANGLE_FAN\"] = 6] = \"TRIANGLE_FAN\";\n})(Primitive || (Primitive = {}));\nexport class ElementBuffer {\n    static create(dev, props) {\n        return Array.isArray(props)\n            ? ElementBuffer.fromArray(dev, props)\n            : ElementBuffer.fromUint32Array(dev, props.data, props.primitive);\n    }\n    static fromArray(dev, data) {\n        if (array.isArray2(data)) {\n            const s = array.shape2(data);\n            assert.range(s[1], 2, 3, \"element tuple length\");\n            const r = array.ravel2(data, s);\n            const prim = s[1] === 3 ? Primitive.TRIANGLES : Primitive.LINES;\n            return ElementBuffer.fromUint32Array(dev, r, prim);\n        }\n        return ElementBuffer.fromUint32Array(dev, data, Primitive.POINTS);\n    }\n    static fromUint16Array(dev, data, primitive) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const arr = Array.isArray(data) ? new Uint16Array(data) : data;\n        return new ElementBuffer(gl, arr, ElementBufferType.UNSIGNED_SHORT, primitive);\n    }\n    static fromUint32Array(dev, data, primitive) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const arr = Array.isArray(data) ? new Uint32Array(data) : data;\n        return new ElementBuffer(gl, arr, ElementBufferType.UNSIGNED_INT, primitive);\n    }\n    constructor(gl, data, type, primitive) {\n        this.gl = gl;\n        this.data = data;\n        this.type = type;\n        this.primitive = primitive;\n        this.glBuffer = null;\n        this.init();\n    }\n    get count() {\n        return this.data.length;\n    }\n    init() {\n        const { gl, data } = this;\n        const buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        this.glBuffer = buffer;\n    }\n    restore() {\n        const { gl, glBuffer } = this;\n        if (!gl.isBuffer(glBuffer)) {\n            this.init();\n        }\n    }\n}\n//# sourceMappingURL=element-buffer.js.map","/**\n * This file is an exercise in proprocessor voodoo.\n *\n * \"process.env.NODE_ENV\", gets suplied by the string replacer during a\n * custom build or our production build. If \"production\", constant evaluation\n * will eliminate the if blocks, making the functions no-ops, in turn eligible\n * for elimination from their callsites.\n *\n * While cool, this disables us to return values from the asserts, which would\n * make for a slightly nice programming model: const checkedVal = truthy(val)\n */\n// This does not get replaced and serves as a default velue. If all its uses\n// are eliminated, the value itself is pruned as well.\nconst process = {\n    env: {\n        NODE_ENV: \"development\",\n    },\n};\nexport function nonNull(p, name, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof p === \"undefined\" || typeof p === \"object\" && !p) {\n            throw new Error(msg || fmt(`object ${name || \"\"} ${p}`));\n        }\n    }\n}\nexport function nonEmpty(p, name, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!p || !p.length) {\n            throw new Error(msg || fmt(`array ${name || \"\"} empty`));\n        }\n    }\n}\nexport function equal(p, val, name, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (p !== val) {\n            throw new Error(msg || fmt(`${name || \"\"} values not equal: ${p} ${val}`));\n        }\n    }\n}\nexport function range(p, start, end, name, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (p < start || p > end) {\n            throw new Error(msg || fmt(`${name || \"\"} value ${p} not in [${start}, ${end}]`));\n        }\n    }\n}\nexport function never(p, msg) {\n    // \"never\" can not be eliminated, as its \"return value\" is actually captured\n    // at the callsites. It should never be invoked, though.\n    throw new Error(msg || fmt(`Unexpected object: ${p}`));\n}\nfunction fmt(msg) {\n    return `Assertion Failed: ${msg}`;\n}\n//# sourceMappingURL=assert.js.map","/*\n███████╗██╗  ██╗ █████╗ ██████╗ ███████╗██████╗\n██╔════╝██║  ██║██╔══██╗██╔══██╗██╔════╝██╔══██╗\n███████╗███████║███████║██║  ██║█████╗  ██████╔╝\n╚════██║██╔══██║██╔══██║██║  ██║██╔══╝  ██╔══██╗\n███████║██║  ██║██║  ██║██████╔╝███████╗██║  ██║\n╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝ ╚══════╝╚═╝  ╚═╝\n*/\nexport function createProgram(gl, vertex, fragment) {\n    const program = gl.createProgram();\n    if (!program) {\n        throw new Error(\"Could not create Program\");\n    }\n    gl.attachShader(program, vertex);\n    gl.attachShader(program, fragment);\n    gl.linkProgram(program);\n    if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        return program;\n    }\n    const msg = gl.getProgramInfoLog(program);\n    gl.deleteProgram(program);\n    throw new Error(`Could not link shader program: ${msg}`);\n}\nexport function createShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    if (!shader) {\n        throw new Error(\"Could not create Shader\");\n    }\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        return shader;\n    }\n    const msg = gl.getShaderInfoLog(shader);\n    gl.deleteShader(shader);\n    const prettySource = source\n        .split(\"\\n\")\n        .map((l, i) => `${i + 1}: ${l}`)\n        .join(\"\\n\");\n    throw new Error(`Could not compile shader:\\n${msg}\\n${prettySource}`);\n}\n//# sourceMappingURL=glutil.js.map","/**\n * Chacks whether array is at least 2d, mostly useful because of return type\n * predicate.\n */\nexport function isArray2(array) {\n    return !!array.length && Array.isArray(array[0]);\n}\nexport function shape2(array) {\n    const outer = array.length;\n    const inner = outer ? array[0].length : 0;\n    return [outer, inner];\n}\nexport function ravel2(unraveled, shape) {\n    const [outer, inner] = shape;\n    const raveled = new Array(inner * outer);\n    unraveled.forEach((arr, i) => {\n        arr.forEach((elem, j) => {\n            raveled[inner * i + j] = elem;\n        });\n    });\n    return raveled;\n}\n//# sourceMappingURL=array.js.map","import * as assert from \"./assert\";\nimport * as array from \"./array\";\nimport { Device } from \"./device\";\nimport { VertexBuffer, } from \"./vertex-buffer\";\nimport { ElementBuffer, } from \"./element-buffer\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nexport var AttributeType;\n(function (AttributeType) {\n    AttributeType[\"POINTER\"] = \"pointer\";\n    AttributeType[\"IPOINTER\"] = \"ipointer\";\n})(AttributeType || (AttributeType = {}));\nexport class VertexArray {\n    static create(dev, { attributes, elements }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const attrs = Object.entries(attributes)\n            .map(([locationStr, definition]) => {\n            if (!INT_PATTERN.test(locationStr)) {\n                throw new Error(\"Location not a number. Use Command#locate\");\n            }\n            const location = parseInt(locationStr, 10);\n            return AttributeDescriptor.create(gl, location, definition);\n        });\n        const elementBuffer = elements\n            ? elements instanceof ElementBuffer\n                ? elements\n                : ElementBuffer.create(gl, elements)\n            : undefined;\n        const count = elementBuffer\n            ? elementBuffer.count\n            : attrs.length\n                ? attrs\n                    .map(attr => attr.count)\n                    .reduce((min, curr) => Math.min(min, curr))\n                : 0;\n        const instAttrs = attrs.filter(attr => !!attr.divisor);\n        const instanceCount = instAttrs.length\n            ? instAttrs\n                .map(attr => attr.count * attr.divisor)\n                .reduce((min, curr) => Math.min(min, curr))\n            : 0;\n        return new VertexArray(gl, attrs, elementBuffer, count, instanceCount);\n    }\n    constructor(gl, attributes, elements, count, instanceCount) {\n        this.gl = gl;\n        this.elementBuffer = elements;\n        this.attributes = attributes;\n        this.count = count;\n        this.instanceCount = instanceCount;\n        this.glVertexArray = null;\n        this.init();\n    }\n    get hasElements() {\n        return !!this.elementBuffer;\n    }\n    get elementPrimitive() {\n        return this.elementBuffer && this.elementBuffer.primitive;\n    }\n    get elementType() {\n        return this.elementBuffer && this.elementBuffer.type;\n    }\n    init() {\n        const { gl, attributes, elementBuffer } = this;\n        if (!gl.isContextLost()) {\n            const vao = gl.createVertexArray();\n            gl.bindVertexArray(vao);\n            attributes.forEach(({ location, type, buffer: { glBuffer, type: glBufferType }, size, normalized = false, divisor, }) => {\n                // Enable sending attribute arrays for location\n                gl.enableVertexAttribArray(location);\n                // Send buffer\n                gl.bindBuffer(gl.ARRAY_BUFFER, glBuffer);\n                switch (type) {\n                    case AttributeType.POINTER:\n                        gl.vertexAttribPointer(location, size, glBufferType, normalized, 0, 0);\n                        break;\n                    case AttributeType.IPOINTER:\n                        gl.vertexAttribIPointer(location, size, glBufferType, 0, 0);\n                        break;\n                    default: assert.never(type);\n                }\n                if (divisor) {\n                    gl.vertexAttribDivisor(location, divisor);\n                }\n            });\n            if (elementBuffer) {\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer.glBuffer);\n            }\n            gl.bindVertexArray(null);\n            gl.bindBuffer(gl.ARRAY_BUFFER, null);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n            this.glVertexArray = vao;\n        }\n    }\n    restore() {\n        const { gl, glVertexArray, attributes, elementBuffer } = this;\n        if (elementBuffer) {\n            elementBuffer.restore();\n        }\n        attributes.forEach(attr => attr.buffer.restore());\n        if (!gl.isVertexArray(glVertexArray)) {\n            this.init();\n        }\n    }\n}\n// TODO: this could use some further refactoring. Currently its just former\n// public API made private.\nclass AttributeDescriptor {\n    constructor(location, type, buffer, count, size, normalized, divisor) {\n        this.location = location;\n        this.type = type;\n        this.buffer = buffer;\n        this.count = count;\n        this.size = size;\n        this.normalized = normalized;\n        this.divisor = divisor;\n    }\n    static create(gl, location, props) {\n        if (Array.isArray(props)) {\n            if (array.isArray2(props)) {\n                const s = array.shape2(props);\n                const r = array.ravel2(props, s);\n                return new AttributeDescriptor(location, AttributeType.POINTER, VertexBuffer.fromFloat32Array(gl, r), s[0], s[1], false, 0);\n            }\n            return new AttributeDescriptor(location, AttributeType.POINTER, VertexBuffer.fromFloat32Array(gl, props), props.length, 1, false, 0);\n        }\n        const buffer = props.value instanceof VertexBuffer\n            ? props.value\n            // Typescript is not smart enough here\n            : VertexBuffer.create(gl, props.value);\n        switch (props.type) {\n            case AttributeType.POINTER: return new AttributeDescriptor(location, props.type, buffer, props.count, props.size, props.normalized || false, props.divisor || 0);\n            case AttributeType.IPOINTER: return new AttributeDescriptor(location, props.type, buffer, props.count, props.size, false, props.divisor || 0);\n            default: return assert.never(props);\n        }\n    }\n}\n//# sourceMappingURL=vertex-array.js.map","import * as assert from \"./assert\";\nimport { Device } from \"./device\";\nexport class Framebuffer {\n    static create(dev, { width, height, color, depth, stencil }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const colorBuffers = Array.isArray(color) ? color : [color];\n        colorBuffers.forEach(buffer => {\n            assert.equal(width, buffer.width, \"width\");\n            assert.equal(height, buffer.height, \"height\");\n        });\n        if (depth) {\n            assert.equal(width, depth.width, \"width\");\n            assert.equal(height, depth.height, \"height\");\n        }\n        if (stencil) {\n            assert.equal(width, stencil.width, \"width\");\n            assert.equal(height, stencil.height, \"height\");\n        }\n        return new Framebuffer(gl, width, height, colorBuffers, depth, stencil);\n    }\n    constructor(gl, width, height, colorBuffers, depthBuffer, stencilBuffer) {\n        this.gl = gl;\n        this.width = width;\n        this.height = height;\n        this.colorBuffers = colorBuffers;\n        this.depthBuffer = depthBuffer;\n        this.stencilBuffer = stencilBuffer;\n        this.glColorAttachments = colorBuffers\n            .map((_, i) => gl.COLOR_ATTACHMENT0 + i);\n        this.glFramebuffer = null;\n        this.init();\n    }\n    init() {\n        const { gl, colorBuffers, depthBuffer, stencilBuffer } = this;\n        const fbo = gl.createFramebuffer();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n        colorBuffers.forEach((buffer, i) => {\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.TEXTURE_2D, buffer.glTexture, 0);\n        });\n        if (depthBuffer) {\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depthBuffer, 0);\n        }\n        if (stencilBuffer) {\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.STENCIL_ATTACHMENT, gl.TEXTURE_2D, stencilBuffer, 0);\n        }\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        if (status !== gl.FRAMEBUFFER_COMPLETE) {\n            gl.deleteFramebuffer(fbo);\n            throw new Error(\"Framebuffer not complete\");\n        }\n        this.glFramebuffer = fbo;\n    }\n    restore() {\n        const { gl, glFramebuffer, colorBuffers, depthBuffer, stencilBuffer, } = this;\n        colorBuffers.forEach(buffer => buffer.restore());\n        if (depthBuffer) {\n            depthBuffer.restore();\n        }\n        if (stencilBuffer) {\n            stencilBuffer.restore();\n        }\n        if (!gl.isFramebuffer(glFramebuffer)) {\n            this.init();\n        }\n    }\n}\n//# sourceMappingURL=framebuffer.js.map","import * as assert from \"./assert\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nimport { VertexArray } from \"./vertex-array\";\nimport { Framebuffer } from \"./framebuffer\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nconst UNKNOWN_ATTRIB_LOCATION = -1;\nexport var DepthFunc;\n(function (DepthFunc) {\n    DepthFunc[DepthFunc[\"ALWAYS\"] = 519] = \"ALWAYS\";\n    DepthFunc[DepthFunc[\"NEVER\"] = 512] = \"NEVER\";\n    DepthFunc[DepthFunc[\"EQUAL\"] = 514] = \"EQUAL\";\n    DepthFunc[DepthFunc[\"NOTEQUAL\"] = 517] = \"NOTEQUAL\";\n    DepthFunc[DepthFunc[\"LESS\"] = 513] = \"LESS\";\n    DepthFunc[DepthFunc[\"LEQUAL\"] = 515] = \"LEQUAL\";\n    DepthFunc[DepthFunc[\"GREATER\"] = 516] = \"GREATER\";\n    DepthFunc[DepthFunc[\"GEQUAL\"] = 518] = \"GEQUAL\";\n})(DepthFunc || (DepthFunc = {}));\nexport var StencilFunc;\n(function (StencilFunc) {\n    StencilFunc[StencilFunc[\"ALWAYS\"] = 519] = \"ALWAYS\";\n    StencilFunc[StencilFunc[\"NEVER\"] = 512] = \"NEVER\";\n    StencilFunc[StencilFunc[\"EQUAL\"] = 514] = \"EQUAL\";\n    StencilFunc[StencilFunc[\"NOTEQUAL\"] = 517] = \"NOTEQUAL\";\n    StencilFunc[StencilFunc[\"LESS\"] = 513] = \"LESS\";\n    StencilFunc[StencilFunc[\"LEQUAL\"] = 515] = \"LEQUAL\";\n    StencilFunc[StencilFunc[\"GREATER\"] = 516] = \"GREATER\";\n    StencilFunc[StencilFunc[\"GEQUAL\"] = 518] = \"GEQUAL\";\n})(StencilFunc || (StencilFunc = {}));\nexport var StencilOp;\n(function (StencilOp) {\n    StencilOp[StencilOp[\"KEEP\"] = 7680] = \"KEEP\";\n    StencilOp[StencilOp[\"ZERO\"] = 0] = \"ZERO\";\n    StencilOp[StencilOp[\"REPLACE\"] = 7681] = \"REPLACE\";\n    StencilOp[StencilOp[\"INCR\"] = 7682] = \"INCR\";\n    StencilOp[StencilOp[\"INCR_WRAP\"] = 34055] = \"INCR_WRAP\";\n    StencilOp[StencilOp[\"DECR\"] = 7683] = \"DECR\";\n    StencilOp[StencilOp[\"DECR_WRAP\"] = 34056] = \"DECR_WRAP\";\n    StencilOp[StencilOp[\"INVERT\"] = 5386] = \"INVERT\";\n})(StencilOp || (StencilOp = {}));\nexport var BlendFunc;\n(function (BlendFunc) {\n    BlendFunc[BlendFunc[\"ZERO\"] = 0] = \"ZERO\";\n    BlendFunc[BlendFunc[\"ONE\"] = 1] = \"ONE\";\n    BlendFunc[BlendFunc[\"SRC_COLOR\"] = 768] = \"SRC_COLOR\";\n    BlendFunc[BlendFunc[\"SRC_ALPHA\"] = 770] = \"SRC_ALPHA\";\n    BlendFunc[BlendFunc[\"ONE_MINUS_SRC_COLOR\"] = 769] = \"ONE_MINUS_SRC_COLOR\";\n    BlendFunc[BlendFunc[\"ONE_MINUS_SRC_ALPHA\"] = 771] = \"ONE_MINUS_SRC_ALPHA\";\n    BlendFunc[BlendFunc[\"DST_COLOR\"] = 774] = \"DST_COLOR\";\n    BlendFunc[BlendFunc[\"DST_ALPHA\"] = 772] = \"DST_ALPHA\";\n    BlendFunc[BlendFunc[\"ONE_MINUS_DST_COLOR\"] = 775] = \"ONE_MINUS_DST_COLOR\";\n    BlendFunc[BlendFunc[\"ONE_MINUS_DST_ALPHA\"] = 773] = \"ONE_MINUS_DST_ALPHA\";\n    BlendFunc[BlendFunc[\"CONSTANT_COLOR\"] = 32769] = \"CONSTANT_COLOR\";\n    BlendFunc[BlendFunc[\"CONSTANT_ALPHA\"] = 32771] = \"CONSTANT_ALPHA\";\n    BlendFunc[BlendFunc[\"ONE_MINUS_CONSTANT_COLOR\"] = 32770] = \"ONE_MINUS_CONSTANT_COLOR\";\n    BlendFunc[BlendFunc[\"ONE_MINUS_CONSTANT_ALPHA\"] = 32772] = \"ONE_MINUS_CONSTANT_ALPHA\";\n})(BlendFunc || (BlendFunc = {}));\nexport var BlendEquation;\n(function (BlendEquation) {\n    BlendEquation[BlendEquation[\"FUNC_ADD\"] = 32774] = \"FUNC_ADD\";\n    BlendEquation[BlendEquation[\"FUNC_SUBTRACT\"] = 32778] = \"FUNC_SUBTRACT\";\n    BlendEquation[BlendEquation[\"FUNC_REVERSE_SUBTRACT\"] = 32779] = \"FUNC_REVERSE_SUBTRACT\";\n    BlendEquation[BlendEquation[\"MIN\"] = 32775] = \"MIN\";\n    BlendEquation[BlendEquation[\"MAX\"] = 32776] = \"MAX\";\n})(BlendEquation || (BlendEquation = {}));\nexport class Command {\n    constructor(gl, glProgram, uniformDescrs, count, offset, primitive, vertexArrayAcc, framebufferAcc, depthDescr, stencilDescr, blendDescr) {\n        this.gl = gl;\n        this.glProgram = glProgram;\n        this.primitive = typeof primitive === \"number\" ? primitive : undefined;\n        this.uniformDescrs = uniformDescrs;\n        this.count = count;\n        this.offset = offset;\n        this.vertexArrayAcc = vertexArrayAcc;\n        this.framebufferAcc = framebufferAcc;\n        this.depthDescr = depthDescr;\n        this.stencilDescr = stencilDescr;\n        this.blendDescr = blendDescr;\n        this.currVao = null;\n        this.currFbo = null;\n    }\n    static create(dev, { vert, frag, uniforms = {}, data, framebuffer, count = 0, offset = 0, primitive, depth, stencil, blend, }) {\n        assert.nonNull(vert, \"vert\");\n        assert.nonNull(frag, \"frag\");\n        assert.nonNull(data, \"data\");\n        if (depth) {\n            assert.nonNull(depth.func, \"depth.func\");\n        }\n        if (blend) {\n            assert.nonNull(blend.func, \"blend.func\");\n            assert.nonNull(blend.func.src, \"blend.func.src\");\n            assert.nonNull(blend.func.dst, \"blend.func.dst\");\n            if (typeof blend.func.src === \"object\") {\n                assert.nonNull(blend.func.src.rgb, \"blend.func.src.rgb\");\n                assert.nonNull(blend.func.src.alpha, \"blend.func.src.alpha\");\n            }\n            if (typeof blend.func.dst === \"object\") {\n                assert.nonNull(blend.func.dst.rgb, \"blend.func.dst.rgb\");\n                assert.nonNull(blend.func.dst.alpha, \"blend.func.dst.alpha\");\n            }\n        }\n        if (stencil) {\n            assert.nonNull(stencil.func, \"stencil.func\");\n            // TODO: complete stencil validation... validation framework?\n        }\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const vs = glutil.createShader(gl, gl.VERTEX_SHADER, vert);\n        const fs = glutil.createShader(gl, gl.FRAGMENT_SHADER, frag);\n        const prog = glutil.createProgram(gl, vs, fs);\n        gl.deleteShader(vs);\n        gl.deleteShader(fs);\n        const uniformDescrs = Object.entries(uniforms)\n            .map(([ident, uniform]) => {\n            const loc = gl.getUniformLocation(prog, ident);\n            if (!loc) {\n                throw new Error(`No location for uniform: ${ident}`);\n            }\n            return new UniformDescriptor(ident, loc, uniform);\n        });\n        const vertexArrayAcc = data\n            ? typeof data === \"function\" || data instanceof VertexArray\n                ? data\n                : VertexArray.create(dev, locate(gl, prog, data))\n            : undefined;\n        const framebufferAcc = framebuffer\n            ? typeof framebuffer === \"function\" || framebuffer instanceof Framebuffer\n                ? framebuffer\n                : Framebuffer.create(gl, framebuffer)\n            : undefined;\n        const depthDescr = parseDepth(depth);\n        const stencilDescr = parseStencil(stencil);\n        const blendDescr = parseBlend(blend);\n        return new Command(gl, prog, uniformDescrs, count, offset, primitive, vertexArrayAcc, framebufferAcc, depthDescr, stencilDescr, blendDescr);\n    }\n    execute(props) {\n        const { gl, glProgram } = this;\n        /*\n        When batching (passing in an array of props), the price for\n        gl.useProgram, enabling depth/stencil tests and blending is paid only\n        once for all draw calls.\n        */\n        gl.useProgram(glProgram);\n        this.beginDepth();\n        this.beginStencil();\n        this.beginBlend();\n        if (Array.isArray(props)) {\n            props.forEach((p, i) => this.executeInner(p, i));\n        }\n        else {\n            this.executeInner(props, 0);\n        }\n        // FBOs and VAOs are bound without unbinding in the inner loop\n        this.unbindFbo();\n        this.unbindVao();\n        this.endBlend();\n        this.endStencil();\n        this.endDepth();\n        gl.useProgram(null);\n    }\n    locate(vertexArrayProps) {\n        return locate(this.gl, this.glProgram, vertexArrayProps);\n    }\n    executeInner(props, index) {\n        const { gl, primitive, count, offset, vertexArrayAcc, framebufferAcc, } = this;\n        /*\n        Enabling multiple FBOs and VAOs per draw batch is a nice feature. We\n        cache currently bound FBO/VAO to prevent needless rebinding.\n        */\n        let bufferWidth = gl.drawingBufferWidth;\n        let bufferHeight = gl.drawingBufferHeight;\n        const fbo = framebufferAcc && access(props, index, framebufferAcc);\n        if (fbo) {\n            this.bindFbo(fbo);\n            bufferWidth = fbo.width;\n            bufferHeight = fbo.height;\n        }\n        gl.viewport(0, 0, bufferWidth, bufferHeight);\n        this.updateUniforms(props, index);\n        const vao = vertexArrayAcc && access(props, index, vertexArrayAcc);\n        if (vao) {\n            this.bindVao(vao);\n            const prim = typeof primitive === \"undefined\"\n                ? typeof vao.elementPrimitive === \"undefined\"\n                    ? gl.TRIANGLES\n                    : vao.elementPrimitive\n                : primitive;\n            const cnt = count ? Math.min(count, vao.count) : vao.count;\n            if (vao.hasElements) {\n                const ty = vao.elementType;\n                this.drawElements(prim, cnt, ty, offset, vao.instanceCount);\n            }\n            else {\n                this.drawArrays(prim, cnt, offset, vao.instanceCount);\n            }\n        }\n        else {\n            this.drawArrays(typeof primitive === \"undefined\" ? gl.TRIANGLES : primitive, count, offset, 0);\n        }\n    }\n    bindVao(vao) {\n        if (vao !== this.currVao) {\n            this.currVao = vao;\n            this.gl.bindVertexArray(vao.glVertexArray);\n        }\n    }\n    unbindVao() {\n        this.gl.bindVertexArray(null);\n        this.currVao = null;\n    }\n    bindFbo(fbo) {\n        const gl = this.gl;\n        if (fbo !== this.currFbo) {\n            this.currFbo = fbo;\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n            gl.drawBuffers(fbo.glColorAttachments);\n        }\n    }\n    unbindFbo() {\n        const gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        this.currFbo = null;\n    }\n    beginDepth() {\n        const { gl, depthDescr } = this;\n        if (depthDescr) {\n            gl.enable(gl.DEPTH_TEST);\n            gl.depthFunc(depthDescr.func);\n            gl.depthMask(depthDescr.mask);\n            gl.depthRange(depthDescr.rangeStart, depthDescr.rangeEnd);\n        }\n    }\n    endDepth() {\n        const { gl, depthDescr } = this;\n        if (depthDescr) {\n            gl.disable(gl.DEPTH_TEST);\n        }\n    }\n    beginStencil() {\n        const { gl, stencilDescr } = this;\n        if (stencilDescr) {\n            const { fFunc, bFunc, fFuncRef, bfuncRef, fFuncMask, bFuncMask, fMask, bMask, fOpFail, bOpFail, fOpZFail, bOpZFail, fOpZPass, bOpZPass, } = stencilDescr;\n            gl.enable(gl.STENCIL_TEST);\n            gl.stencilFuncSeparate(gl.FRONT, fFunc, fFuncRef, fFuncMask);\n            gl.stencilFuncSeparate(gl.BACK, bFunc, bfuncRef, bFuncMask);\n            gl.stencilMaskSeparate(gl.FRONT, fMask);\n            gl.stencilMaskSeparate(gl.BACK, bMask);\n            gl.stencilOpSeparate(gl.FRONT, fOpFail, fOpZFail, fOpZPass);\n            gl.stencilOpSeparate(gl.BACK, bOpFail, bOpZFail, bOpZPass);\n        }\n    }\n    endStencil() {\n        const { gl, stencilDescr } = this;\n        if (stencilDescr) {\n            gl.disable(gl.STENCIL_TEST);\n        }\n    }\n    beginBlend() {\n        const { gl, blendDescr } = this;\n        if (blendDescr) {\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(blendDescr.srcRGB, blendDescr.dstRGB, blendDescr.srcAlpha, blendDescr.dstAlpha);\n            gl.blendEquationSeparate(blendDescr.equationRGB, blendDescr.equationAlpha);\n            if (blendDescr.color) {\n                const [r, g, b, a] = blendDescr.color;\n                gl.blendColor(r, g, b, a);\n            }\n        }\n    }\n    endBlend() {\n        const { gl, blendDescr } = this;\n        if (blendDescr) {\n            gl.disable(gl.BLEND);\n        }\n    }\n    drawArrays(primitive, count, offset, instCount) {\n        if (instCount) {\n            this.gl.drawArraysInstanced(primitive, offset, count, instCount);\n        }\n        else {\n            this.gl.drawArrays(primitive, offset, count);\n        }\n    }\n    drawElements(primitive, count, type, offset, instCount) {\n        const gl = this.gl;\n        if (instCount) {\n            gl.drawElementsInstanced(primitive, count, type, offset, instCount);\n        }\n        else {\n            gl.drawElements(primitive, count, type, offset);\n        }\n    }\n    updateUniforms(props, index) {\n        const gl = this.gl;\n        let textureUnitOffset = 0;\n        this.uniformDescrs.forEach(({ identifier: ident, location: loc, definition: def, }) => {\n            switch (def.type) {\n                case \"1f\":\n                    gl.uniform1f(loc, access(props, index, def.value));\n                    break;\n                case \"1fv\":\n                    gl.uniform1fv(loc, access(props, index, def.value));\n                    break;\n                case \"1i\":\n                    gl.uniform1i(loc, access(props, index, def.value));\n                    break;\n                case \"1iv\":\n                    gl.uniform1iv(loc, access(props, index, def.value));\n                    break;\n                case \"1ui\":\n                    gl.uniform1ui(loc, access(props, index, def.value));\n                    break;\n                case \"1uiv\":\n                    gl.uniform1uiv(loc, access(props, index, def.value));\n                    break;\n                case \"2f\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2f(loc, x, y);\n                    break;\n                }\n                case \"2fv\":\n                    gl.uniform2fv(loc, access(props, index, def.value));\n                    break;\n                case \"2i\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2i(loc, x, y);\n                    break;\n                }\n                case \"2iv\":\n                    gl.uniform2iv(loc, access(props, index, def.value));\n                    break;\n                case \"2ui\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2ui(loc, x, y);\n                    break;\n                }\n                case \"2uiv\":\n                    gl.uniform2uiv(loc, access(props, index, def.value));\n                    break;\n                case \"3f\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3f(loc, x, y, z);\n                    break;\n                }\n                case \"3fv\":\n                    gl.uniform3fv(loc, access(props, index, def.value));\n                    break;\n                case \"3i\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3i(loc, x, y, z);\n                    break;\n                }\n                case \"3iv\":\n                    gl.uniform3iv(loc, access(props, index, def.value));\n                    break;\n                case \"3ui\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3ui(loc, x, y, z);\n                    break;\n                }\n                case \"3uiv\":\n                    gl.uniform3uiv(loc, access(props, index, def.value));\n                    break;\n                case \"4f\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4f(loc, x, y, z, w);\n                    break;\n                }\n                case \"4fv\":\n                    gl.uniform4fv(loc, access(props, index, def.value));\n                    break;\n                case \"4i\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4i(loc, x, y, z, w);\n                    break;\n                }\n                case \"4iv\":\n                    gl.uniform4iv(loc, access(props, index, def.value));\n                    break;\n                case \"4ui\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4ui(loc, x, y, z, w);\n                    break;\n                }\n                case \"4uiv\":\n                    gl.uniform4uiv(loc, access(props, index, def.value));\n                    break;\n                case \"matrix2fv\":\n                    gl.uniformMatrix2fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix3fv\":\n                    gl.uniformMatrix3fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix4fv\":\n                    gl.uniformMatrix4fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"texture\":\n                    // TODO: is this the best way? (is it fast? can we cache?)\n                    const texture = access(props, index, def.value);\n                    const currentTexture = textureUnitOffset++;\n                    gl.activeTexture(gl.TEXTURE0 + currentTexture);\n                    gl.bindTexture(gl.TEXTURE_2D, texture.glTexture);\n                    gl.uniform1i(loc, currentTexture);\n                    break;\n                default:\n                    assert.never(def, `Unknown uniform type: (${ident})`);\n                    break;\n            }\n        });\n    }\n}\nfunction locate(gl, glProgram, { attributes, elements }) {\n    const locatedAttributes = Object.entries(attributes)\n        .reduce((accum, [identifier, definition]) => {\n        if (INT_PATTERN.test(identifier)) {\n            accum[identifier] = definition;\n        }\n        else {\n            const location = gl.getAttribLocation(glProgram, identifier);\n            if (location === UNKNOWN_ATTRIB_LOCATION) {\n                throw new Error(`No location for attrib: ${identifier}`);\n            }\n            accum[location] = definition;\n        }\n        return accum;\n    }, {});\n    return { attributes: locatedAttributes, elements };\n}\nfunction access(props, index, value) {\n    return typeof value === \"function\" ? value(props, index) : value;\n}\nclass DepthDescriptor {\n    constructor(func, mask, rangeStart, rangeEnd) {\n        this.func = func;\n        this.mask = mask;\n        this.rangeStart = rangeStart;\n        this.rangeEnd = rangeEnd;\n    }\n}\nclass StencilDescriptor {\n    constructor(fFunc, bFunc, fFuncRef, bfuncRef, fFuncMask, bFuncMask, fMask, bMask, fOpFail, bOpFail, fOpZFail, bOpZFail, fOpZPass, bOpZPass) {\n        this.fFunc = fFunc;\n        this.bFunc = bFunc;\n        this.fFuncRef = fFuncRef;\n        this.bfuncRef = bfuncRef;\n        this.fFuncMask = fFuncMask;\n        this.bFuncMask = bFuncMask;\n        this.fMask = fMask;\n        this.bMask = bMask;\n        this.fOpFail = fOpFail;\n        this.bOpFail = bOpFail;\n        this.fOpZFail = fOpZFail;\n        this.bOpZFail = bOpZFail;\n        this.fOpZPass = fOpZPass;\n        this.bOpZPass = bOpZPass;\n    }\n}\nclass BlendDescriptor {\n    constructor(srcRGB, srcAlpha, dstRGB, dstAlpha, equationRGB, equationAlpha, color) {\n        this.srcRGB = srcRGB;\n        this.srcAlpha = srcAlpha;\n        this.dstRGB = dstRGB;\n        this.dstAlpha = dstAlpha;\n        this.equationRGB = equationRGB;\n        this.equationAlpha = equationAlpha;\n        this.color = color;\n    }\n}\nclass UniformDescriptor {\n    constructor(identifier, location, definition) {\n        this.identifier = identifier;\n        this.location = location;\n        this.definition = definition;\n    }\n}\nfunction parseDepth(depth) {\n    if (!depth) {\n        return undefined;\n    }\n    return new DepthDescriptor(depth.func || DepthFunc.LESS, typeof depth.mask === \"boolean\" ? depth.mask : true, depth.range ? depth.range[0] : 0, depth.range ? depth.range[1] : 1);\n}\nfunction parseStencil(stencil) {\n    if (!stencil) {\n        return undefined;\n    }\n    return new StencilDescriptor(typeof stencil.func.func === \"object\"\n        ? stencil.func.func.front\n        : stencil.func.func, typeof stencil.func.func === \"object\"\n        ? stencil.func.func.back\n        : stencil.func.func, typeof stencil.func.ref !== \"undefined\"\n        ? typeof stencil.func.ref === \"object\"\n            ? stencil.func.ref.front\n            : stencil.func.ref\n        : 1, typeof stencil.func.ref !== \"undefined\"\n        ? typeof stencil.func.ref === \"object\"\n            ? stencil.func.ref.back\n            : stencil.func.ref\n        : 1, typeof stencil.func.mask !== \"undefined\"\n        ? typeof stencil.func.mask === \"object\"\n            ? stencil.func.mask.front\n            : stencil.func.mask\n        : 0xFF, typeof stencil.func.mask !== \"undefined\"\n        ? typeof stencil.func.mask === \"object\"\n            ? stencil.func.mask.back\n            : stencil.func.mask\n        : 0xFF, typeof stencil.mask !== \"undefined\"\n        ? typeof stencil.mask === \"object\"\n            ? stencil.mask.front\n            : stencil.mask\n        : 0xFF, typeof stencil.mask !== \"undefined\"\n        ? typeof stencil.mask === \"object\"\n            ? stencil.mask.back\n            : stencil.mask\n        : 0xFF, stencil.op\n        ? typeof stencil.op.fail === \"object\"\n            ? stencil.op.fail.front\n            : stencil.op.fail\n        : StencilOp.KEEP, stencil.op\n        ? typeof stencil.op.fail === \"object\"\n            ? stencil.op.fail.back\n            : stencil.op.fail\n        : StencilOp.KEEP, stencil.op\n        ? typeof stencil.op.zfail === \"object\"\n            ? stencil.op.zfail.front\n            : stencil.op.zfail\n        : StencilOp.KEEP, stencil.op\n        ? typeof stencil.op.zfail === \"object\"\n            ? stencil.op.zfail.back\n            : stencil.op.zfail\n        : StencilOp.KEEP, stencil.op\n        ? typeof stencil.op.zpass === \"object\"\n            ? stencil.op.zpass.front\n            : stencil.op.zpass\n        : StencilOp.KEEP, stencil.op\n        ? typeof stencil.op.zpass === \"object\"\n            ? stencil.op.zpass.back\n            : stencil.op.zpass\n        : StencilOp.KEEP);\n}\nfunction parseBlend(blend) {\n    if (!blend) {\n        return undefined;\n    }\n    return new BlendDescriptor(typeof blend.func.src === \"object\"\n        ? blend.func.src.rgb\n        : blend.func.src, typeof blend.func.src === \"object\"\n        ? blend.func.src.alpha\n        : blend.func.src, typeof blend.func.dst === \"object\"\n        ? blend.func.dst.rgb\n        : blend.func.dst, typeof blend.func.dst === \"object\"\n        ? blend.func.dst.alpha\n        : blend.func.dst, blend.equation\n        ? typeof blend.equation === \"object\"\n            ? blend.equation.rgb\n            : blend.equation\n        : BlendEquation.FUNC_ADD, blend.equation\n        ? typeof blend.equation === \"object\"\n            ? blend.equation.alpha\n            : blend.equation\n        : BlendEquation.FUNC_ADD, blend.color);\n}\n//# sourceMappingURL=command.js.map","import { Device } from \"./device\";\nexport var TextureWrap;\n(function (TextureWrap) {\n    TextureWrap[TextureWrap[\"CLAMP_TO_EDGE\"] = 33071] = \"CLAMP_TO_EDGE\";\n    TextureWrap[TextureWrap[\"REPEAT\"] = 10497] = \"REPEAT\";\n    TextureWrap[TextureWrap[\"MIRRORED_REPEAT\"] = 33648] = \"MIRRORED_REPEAT\";\n})(TextureWrap || (TextureWrap = {}));\nexport var TextureFilter;\n(function (TextureFilter) {\n    TextureFilter[TextureFilter[\"NEAREST\"] = 9728] = \"NEAREST\";\n    TextureFilter[TextureFilter[\"LINEAR\"] = 9729] = \"LINEAR\";\n    TextureFilter[TextureFilter[\"NEAREST_MIPMAP_NEAREST\"] = 9984] = \"NEAREST_MIPMAP_NEAREST\";\n    TextureFilter[TextureFilter[\"LINEAR_MIPMAP_NEAREST\"] = 9985] = \"LINEAR_MIPMAP_NEAREST\";\n    TextureFilter[TextureFilter[\"NEAREST_MIPMAP_LINEAR\"] = 9986] = \"NEAREST_MIPMAP_LINEAR\";\n    TextureFilter[TextureFilter[\"LINEAR_MIPMAP_LINEAR\"] = 9987] = \"LINEAR_MIPMAP_LINEAR\";\n})(TextureFilter || (TextureFilter = {}));\nexport var TextureInternalFormat;\n(function (TextureInternalFormat) {\n    // R\n    TextureInternalFormat[TextureInternalFormat[\"R8\"] = 33321] = \"R8\";\n    TextureInternalFormat[TextureInternalFormat[\"R8_SNORM\"] = 36756] = \"R8_SNORM\";\n    TextureInternalFormat[TextureInternalFormat[\"R8UI\"] = 33330] = \"R8UI\";\n    TextureInternalFormat[TextureInternalFormat[\"R8I\"] = 33329] = \"R8I\";\n    TextureInternalFormat[TextureInternalFormat[\"R16UI\"] = 33332] = \"R16UI\";\n    TextureInternalFormat[TextureInternalFormat[\"R16I\"] = 33331] = \"R16I\";\n    TextureInternalFormat[TextureInternalFormat[\"R32UI\"] = 33334] = \"R32UI\";\n    TextureInternalFormat[TextureInternalFormat[\"R32I\"] = 33333] = \"R32I\";\n    TextureInternalFormat[TextureInternalFormat[\"R16F\"] = 33325] = \"R16F\";\n    TextureInternalFormat[TextureInternalFormat[\"R32F\"] = 33326] = \"R32F\";\n    // RG\n    TextureInternalFormat[TextureInternalFormat[\"RG8\"] = 33323] = \"RG8\";\n    TextureInternalFormat[TextureInternalFormat[\"RG8_SNORM\"] = 36757] = \"RG8_SNORM\";\n    TextureInternalFormat[TextureInternalFormat[\"RG8UI\"] = 33336] = \"RG8UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RG8I\"] = 33335] = \"RG8I\";\n    TextureInternalFormat[TextureInternalFormat[\"RG16UI\"] = 33338] = \"RG16UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RG16I\"] = 33337] = \"RG16I\";\n    TextureInternalFormat[TextureInternalFormat[\"RG32UI\"] = 33340] = \"RG32UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RG32I\"] = 33339] = \"RG32I\";\n    TextureInternalFormat[TextureInternalFormat[\"RG16F\"] = 33327] = \"RG16F\";\n    TextureInternalFormat[TextureInternalFormat[\"RG32F\"] = 33328] = \"RG32F\";\n    // RGB\n    TextureInternalFormat[TextureInternalFormat[\"RGB8\"] = 32849] = \"RGB8\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB8_SNORM\"] = 36758] = \"RGB8_SNORM\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB8UI\"] = 36221] = \"RGB8UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB8I\"] = 36239] = \"RGB8I\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB16UI\"] = 36215] = \"RGB16UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB16I\"] = 36233] = \"RGB16I\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB32UI\"] = 36209] = \"RGB32UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB32I\"] = 36227] = \"RGB32I\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB16F\"] = 34843] = \"RGB16F\";\n    TextureInternalFormat[TextureInternalFormat[\"RGB32F\"] = 34837] = \"RGB32F\";\n    // RGBA\n    TextureInternalFormat[TextureInternalFormat[\"RGBA8\"] = 32856] = \"RGBA8\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA8_SNORM\"] = 36759] = \"RGBA8_SNORM\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA8UI\"] = 36220] = \"RGBA8UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA8I\"] = 36238] = \"RGBA8I\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA16UI\"] = 36214] = \"RGBA16UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA16I\"] = 36232] = \"RGBA16I\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA32UI\"] = 36208] = \"RGBA32UI\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA32I\"] = 36226] = \"RGBA32I\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA16F\"] = 34842] = \"RGBA16F\";\n    TextureInternalFormat[TextureInternalFormat[\"RGBA32F\"] = 34836] = \"RGBA32F\";\n    // TODO: support exotic formats\n    // ~DEPTH\n    // DEPTH_COMPONENT16\n    // DEPTH_COMPONENT24\n    // DEPTH_COMPONENT32F\n    // ~DEPTH STENCIL\n    // DEPTH24_STENCIL8\n    // DEPTH32F_STENCIL8\n    // ~LUMINANCE ALPHA\n    // LUMINANCE_ALPHA\n    // LUMINANCE\n    // ALPHA\n})(TextureInternalFormat || (TextureInternalFormat = {}));\nexport var TextureFormat;\n(function (TextureFormat) {\n    TextureFormat[TextureFormat[\"RED\"] = 6403] = \"RED\";\n    TextureFormat[TextureFormat[\"RG\"] = 33319] = \"RG\";\n    TextureFormat[TextureFormat[\"RGB\"] = 6407] = \"RGB\";\n    TextureFormat[TextureFormat[\"RGBA\"] = 6408] = \"RGBA\";\n    TextureFormat[TextureFormat[\"RED_INTEGER\"] = 36244] = \"RED_INTEGER\";\n    TextureFormat[TextureFormat[\"RG_INTEGER\"] = 33320] = \"RG_INTEGER\";\n    TextureFormat[TextureFormat[\"RGB_INTEGER\"] = 36248] = \"RGB_INTEGER\";\n    TextureFormat[TextureFormat[\"RGBA_INTEGER\"] = 36249] = \"RGBA_INTEGER\";\n    // TODO: support exotic formats\n    // DEPTH_COMPONENT\n    // DEPTH_STENCIL\n    // LUMINANCE_ALPHA\n    // LUMINANCE\n    // ALPHA\n})(TextureFormat || (TextureFormat = {}));\nexport var TextureType;\n(function (TextureType) {\n    TextureType[TextureType[\"BYTE\"] = 5120] = \"BYTE\";\n    TextureType[TextureType[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\n    TextureType[TextureType[\"SHORT\"] = 5122] = \"SHORT\";\n    TextureType[TextureType[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n    TextureType[TextureType[\"INT\"] = 5124] = \"INT\";\n    TextureType[TextureType[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\n    TextureType[TextureType[\"FLOAT\"] = 5126] = \"FLOAT\";\n    // TODO: support exotic formats\n    // HALF_FLOAT\n    // UNSIGNED_SHORT_4_4_4_4\n    // UNSIGNED_SHORT_5_5_5_1\n    // UNSIGNED_SHORT_5_6_5\n    // UNSIGNED_INT_24_8\n    // UNSIGNED_INT_5_9_9_9_REV\n    // UNSIGNED_INT_2_10_10_10_REV\n    // UNSIGNED_INT_10F_11F_11F_REV\n    // FLOAT_32_UNSIGNED_INT_24_8_REV\n})(TextureType || (TextureType = {}));\nexport class Texture {\n    static fromImage(dev, image, options) {\n        return Texture.fromRGBA8(dev, image.data, image.width, image.height, options);\n    }\n    static fromRGBA8(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Uint8Array\n            ? data\n            // Note: we also have to convert Uint8ClampedArray to Uint8Array\n            // because of webgl bug\n            // https://github.com/KhronosGroup/WebGL/issues/1533\n            : new Uint8Array(data), width, height, TextureInternalFormat.RGBA8, TextureFormat.RGBA, TextureType.UNSIGNED_BYTE, options);\n    }\n    static fromRG16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, TextureInternalFormat.RG16F, TextureFormat.RG, TextureType.FLOAT, options);\n    }\n    static fromRGB16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, TextureInternalFormat.RGB16F, TextureFormat.RGB, TextureType.FLOAT, options);\n    }\n    static fromRGBA16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, TextureInternalFormat.RGBA16F, TextureFormat.RGBA, TextureType.FLOAT, options);\n    }\n    static fromRGB32F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, TextureInternalFormat.RGB32F, TextureFormat.RGB, TextureType.FLOAT, options);\n    }\n    static fromRGBA32F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, TextureInternalFormat.RGBA32F, TextureFormat.RGBA, TextureType.FLOAT, options);\n    }\n    static fromArrayBufferView(dev, data, width, height, internalFormat, format, type, { min = TextureFilter.NEAREST, mag = TextureFilter.NEAREST, wrapS = TextureWrap.CLAMP_TO_EDGE, wrapT = TextureWrap.CLAMP_TO_EDGE, mipmap = false, } = {}) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new Texture(gl, data, width, height, internalFormat, format, type, wrapS, wrapT, min, mag, mipmap);\n    }\n    constructor(gl, data, width, height, internalFormat, format, type, wrapS, wrapT, minFilter, magFilter, mipmap) {\n        this.gl = gl;\n        this.data = data;\n        this.width = width;\n        this.height = height;\n        this.internalFormat = internalFormat;\n        this.format = format;\n        this.type = type;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.mipmap = mipmap;\n        this.glTexture = null;\n        this.init();\n    }\n    init() {\n        const { gl, data, width, height, internalFormat, format, type, wrapS, wrapT, minFilter, magFilter, mipmap, } = this;\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texStorage2D(gl.TEXTURE_2D, 1, internalFormat, width, height);\n        if (data) {\n            gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, width, height, format, type, data);\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\n        if (mipmap) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        this.glTexture = texture;\n    }\n    restore() {\n        const { gl, glTexture } = this;\n        if (!gl.isTexture(glTexture)) {\n            this.init();\n        }\n    }\n}\n//# sourceMappingURL=texture.js.map"],"names":["Extension","VertexBufferType","ElementBufferType","Primitive","Device","[object Object]","gl","canvas","explicitPixelRatio","explicitViewport","this","element","document","body","options","HTMLCanvasElement","fromCanvas","createElement","appendChild","antialias","alpha","depth","stencil","preserveDrawingBuffer","context","getContext","Error","fromContext","pixelRatio","viewport","extensions","forEach","ext","getExtension","dev","update","bufferWidth","drawingBufferWidth","bufferHeight","drawingBufferHeight","canvasWidth","width","canvasHeight","height","canvasCSSWidth","clientWidth","canvasCSSHeight","clientHeight","window","devicePixelRatio","dpr","r","g","b","a","fbo","bindFramebuffer","FRAMEBUFFER","glFramebuffer","clearColor","clear","COLOR_BUFFER_BIT","clearDepth","DEPTH_BUFFER_BIT","clearStencil","STENCIL_BUFFER_BIT","never","p","msg","fmt","createProgram","vertex","fragment","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","prettySource","split","map","l","i","join","isArray2","array","length","Array","isArray","shape2","outer","ravel2","unraveled","shape","inner","raveled","arr","elem","j","VertexBuffer","data","glBuffer","init","props","BYTE","fromInt8Array","SHORT","fromInt16Array","INT","fromInt32Array","UNSIGNED_BYTE","fromUint8Array","UNSIGNED_SHORT","fromUint16Array","UNSIGNED_INT","fromUint32Array","FLOAT","fromFloat32Array","assert.never","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Float32Array","count","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","isBuffer","ElementBuffer","fromArray","primitive","array.isArray2","s","array.shape2","array.ravel2","prim","TRIANGLES","LINES","POINTS","ELEMENT_ARRAY_BUFFER","INT_PATTERN","AttributeType","VertexArray","attributes","elements","attrs","Object","entries","locationStr","definition","test","location","parseInt","AttributeDescriptor","create","elementBuffer","undefined","attr","reduce","min","curr","Math","instAttrs","filter","divisor","instanceCount","glVertexArray","hasElements","elementPrimitive","elementType","isContextLost","vao","createVertexArray","bindVertexArray","glBufferType","size","normalized","enableVertexAttribArray","POINTER","vertexAttribPointer","IPOINTER","vertexAttribIPointer","vertexAttribDivisor","restore","isVertexArray","value","Framebuffer","color","colorBuffers","depthBuffer","stencilBuffer","glColorAttachments","_","COLOR_ATTACHMENT0","createFramebuffer","framebufferTexture2D","TEXTURE_2D","glTexture","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","deleteFramebuffer","isFramebuffer","UNKNOWN_ATTRIB_LOCATION","DepthFunc","StencilFunc","StencilOp","BlendFunc","BlendEquation","TextureWrap","TextureFilter","TextureInternalFormat","TextureFormat","TextureType","Command","glProgram","uniformDescrs","offset","vertexArrayAcc","framebufferAcc","depthDescr","stencilDescr","blendDescr","currVao","currFbo","vert","frag","uniforms","framebuffer","blend","vs","glutil.createShader","VERTEX_SHADER","fs","FRAGMENT_SHADER","prog","glutil.createProgram","ident","uniform","loc","getUniformLocation","UniformDescriptor","locate","parseDepth","parseStencil","parseBlend","useProgram","beginDepth","beginStencil","beginBlend","executeInner","unbindFbo","unbindVao","endBlend","endStencil","endDepth","vertexArrayProps","index","access","bindFbo","updateUniforms","bindVao","cnt","ty","drawElements","drawArrays","drawBuffers","enable","DEPTH_TEST","depthFunc","func","depthMask","mask","depthRange","rangeStart","rangeEnd","disable","fFunc","bFunc","fFuncRef","bfuncRef","fFuncMask","bFuncMask","fMask","bMask","fOpFail","bOpFail","fOpZFail","bOpZFail","fOpZPass","bOpZPass","STENCIL_TEST","stencilFuncSeparate","FRONT","BACK","stencilMaskSeparate","stencilOpSeparate","BLEND","blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","blendEquationSeparate","equationRGB","equationAlpha","blendColor","instCount","drawArraysInstanced","drawElementsInstanced","textureUnitOffset","identifier","def","uniform1f","uniform1fv","uniform1i","uniform1iv","uniform1ui","uniform1uiv","x","y","uniform2f","uniform2fv","uniform2i","uniform2iv","uniform2ui","uniform2uiv","z","uniform3f","uniform3fv","uniform3i","uniform3iv","uniform3ui","uniform3uiv","w","uniform4f","uniform4fv","uniform4i","uniform4iv","uniform4ui","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","texture","currentTexture","activeTexture","TEXTURE0","bindTexture","accum","getAttribLocation","DepthDescriptor","StencilDescriptor","BlendDescriptor","LESS","range","front","back","ref","op","fail","KEEP","zfail","zpass","src","rgb","dst","equation","FUNC_ADD","Texture","image","fromRGBA8","fromArrayBufferView","RGBA8","RGBA","RG16F","RG","RGB16F","RGB","RGBA16F","RGB32F","RGBA32F","internalFormat","format","NEAREST","mag","wrapS","CLAMP_TO_EDGE","wrapT","mipmap","minFilter","magFilter","createTexture","texStorage2D","texSubImage2D","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","generateMipmap","isTexture"],"mappings":"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"}