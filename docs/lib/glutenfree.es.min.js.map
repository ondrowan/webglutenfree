{"version":3,"file":"glutenfree.es.min.js","sources":["../build/assert.js","../build/glutil.js","../build/array.js","../build/command.js","../build/texture.js","../build/device.js","../build/vertex-buffer.js","../build/element-buffer.js","../build/vertex-array.js","../build/framebuffer.js"],"sourcesContent":["/**\n * This file is an exercise in proprocessor voodoo.\n *\n * \"process.env.NODE_ENV\", gets suplied by the string replacer during a\n * custom build or our production build. If \"production\", constant evaluation\n * will eliminate the if blocks, making the functions no-ops, in turn eligible\n * for elimination from their callsites.\n *\n * While cool, this disables us to return values from the asserts, which would\n * make for a slightly nice programming model: const checkedVal = truthy(val)\n */\n// This does not get replaced and serves as a default velue. If all its uses\n// are eliminated, the value itself is pruned as well.\nconst process = {\n    env: {\n        NODE_ENV: \"development\",\n    },\n};\nexport function requireNonNull(p, name) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof p === \"undefined\" || typeof p === \"object\" && !p) {\n            throw new Error(fmt(`Expected parameter ${name}, but got ${p}`));\n        }\n    }\n}\nexport function requireNonEmpty(p, name) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!p || !p.length) {\n            throw new Error(fmt(`Expected parameter ${name} to be nonempty`));\n        }\n    }\n}\nexport function requireEqual(p, val, name) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (p !== val) {\n            throw new Error(fmt(`\\\nExpected parameter ${name} to be equal to ${val}, but got ${p}`));\n        }\n    }\n}\nexport function nonNull(p, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof p === \"undefined\" || typeof p === \"object\" && !p) {\n            throw new Error(fmt(msg));\n        }\n    }\n}\nexport function nonEmpty(p, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!p || !p.length) {\n            throw new Error(fmt(msg || \"Array empty\"));\n        }\n    }\n}\nexport function equal(p, val, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (p !== val) {\n            throw new Error(fmt(msg || `Not equal: ${p} ${val}`));\n        }\n    }\n}\nexport function never(p, msg) {\n    // \"never\" can not be eliminated, as its \"return value\" is actually captured\n    // at the callsites. It should never be invoked, though.\n    throw new Error(fmt(msg || `Unexpected object: ${p}`));\n}\nfunction fmt(msg) {\n    if (msg) {\n        return `Assertion Failed: ${msg}`;\n    }\n    return `Assertion Failed`;\n}\n//# sourceMappingURL=assert.js.map","import * as assert from \"./assert\";\n/*\n███████╗██╗  ██╗ █████╗ ██████╗ ███████╗██████╗\n██╔════╝██║  ██║██╔══██╗██╔══██╗██╔════╝██╔══██╗\n███████╗███████║███████║██║  ██║█████╗  ██████╔╝\n╚════██║██╔══██║██╔══██║██║  ██║██╔══╝  ██╔══██╗\n███████║██║  ██║██║  ██║██████╔╝███████╗██║  ██║\n╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝ ╚══════╝╚═╝  ╚═╝\n*/\nexport function createProgram(gl, vertex, fragment) {\n    const program = gl.createProgram();\n    if (!program) {\n        throw new Error(\"Could not create Program\");\n    }\n    gl.attachShader(program, vertex);\n    gl.attachShader(program, fragment);\n    gl.linkProgram(program);\n    if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        return program;\n    }\n    const msg = gl.getProgramInfoLog(program);\n    gl.deleteProgram(program);\n    throw new Error(`Could not link shader program: ${msg}`);\n}\nexport function createShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    if (!shader) {\n        throw new Error(\"Could not create Shader\");\n    }\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        return shader;\n    }\n    const msg = gl.getShaderInfoLog(shader);\n    gl.deleteShader(shader);\n    const prettySource = source\n        .split(\"\\n\")\n        .map((l, i) => `${i + 1}: ${l}`)\n        .join(\"\\n\");\n    throw new Error(`Could not compile shader:\\n${msg}\\n${prettySource}`);\n}\n/*\n██████╗ ██╗   ██╗███████╗███████╗███████╗██████╗\n██╔══██╗██║   ██║██╔════╝██╔════╝██╔════╝██╔══██╗\n██████╔╝██║   ██║█████╗  █████╗  █████╗  ██████╔╝\n██╔══██╗██║   ██║██╔══╝  ██╔══╝  ██╔══╝  ██╔══██╗\n██████╔╝╚██████╔╝██║     ██║     ███████╗██║  ██║\n╚═════╝  ╚═════╝ ╚═╝     ╚═╝     ╚══════╝╚═╝  ╚═╝\n*/\nexport function createArrayBuffer(gl, values) {\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n        throw new Error(\"Could not create buffer\");\n    }\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, Array.isArray(values)\n        ? new Float32Array(values)\n        : values, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    return buffer;\n}\nexport function createElementArrayBuffer(gl, elements) {\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n        throw new Error(\"Could not create buffer\");\n    }\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, Array.isArray(elements)\n        ? new Uint32Array(elements)\n        : elements, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    return buffer;\n}\nexport function createVertexArray(gl, buffers, elementBuffer) {\n    const vao = gl.createVertexArray();\n    if (!vao) {\n        throw new Error(\"Could not create Vertex Array Object\");\n    }\n    gl.bindVertexArray(vao);\n    buffers.forEach(({ type, buffer, bufferType, size, location, normalized = false, divisor, }) => {\n        // Enable sending attribute arrays for location\n        gl.enableVertexAttribArray(location);\n        // Send buffer\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        switch (type) {\n            case 0 /* POINTER */:\n                gl.vertexAttribPointer(location, size, bufferType, normalized, 0, 0);\n                break;\n            case 1 /* IPOINTER */:\n                gl.vertexAttribIPointer(location, size, bufferType, 0, 0);\n                break;\n            default: assert.never(type);\n        }\n        if (divisor) {\n            gl.vertexAttribDivisor(location, divisor);\n        }\n    });\n    if (elementBuffer) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    }\n    gl.bindVertexArray(null);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    return vao;\n}\n/*\n████████╗███████╗██╗  ██╗████████╗██╗   ██╗██████╗ ███████╗\n╚══██╔══╝██╔════╝╚██╗██╔╝╚══██╔══╝██║   ██║██╔══██╗██╔════╝\n   ██║   █████╗   ╚███╔╝    ██║   ██║   ██║██████╔╝█████╗\n   ██║   ██╔══╝   ██╔██╗    ██║   ██║   ██║██╔══██╗██╔══╝\n   ██║   ███████╗██╔╝ ██╗   ██║   ╚██████╔╝██║  ██║███████╗\n   ╚═╝   ╚══════╝╚═╝  ╚═╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚══════╝\n*/\nexport function createTexture(gl, data, width, height, internalFormat, format, type, wrapS, wrapT, min, mag, mipmap) {\n    const texture = gl.createTexture();\n    if (!texture) {\n        throw new Error(\"Could not create texture\");\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, internalFormat, width, height);\n    if (data) {\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, width, height, format, type, data);\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, min);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mag);\n    if (mipmap) {\n        gl.generateMipmap(gl.TEXTURE_2D);\n    }\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return texture;\n}\n//# sourceMappingURL=glutil.js.map","/**\n * Chacks whether array is at least 2d, mostly useful because of return type\n * predicate.\n */\nexport function is2DArray(array) {\n    return !!array.length || Array.isArray(array[0]);\n}\n/**\n * Flatten 2d array and compute its former shape.\n * eg.\n * ravel([\n *      [1, 2, 3],\n *      [4, 5, 6],\n * ])\n * produces {\n *      data: [1, 2, 3, 4, 5, 6],\n *      shape: [2, 3],\n * }\n */\nexport function ravel(unraveled) {\n    const outerShape = unraveled.length;\n    const innerShape = outerShape ? unraveled[0].length : 0;\n    const raveled = new Array(innerShape * outerShape);\n    unraveled.forEach((inner, i) => {\n        inner.forEach((elem, j) => {\n            raveled[innerShape * i + j] = elem;\n        });\n    });\n    return { data: raveled, shape: [outerShape, innerShape] };\n}\n//# sourceMappingURL=array.js.map","import * as assert from \"./assert\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nimport { VertexArray } from \"./vertex-array\";\nimport { Framebuffer } from \"./framebuffer\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nconst UNKNOWN_ATTRIB_LOCATION = -1;\nexport class Command {\n    constructor(gl, glProgram, glPrimitive, uniformDescriptors, vertexArrayDescriptor, framebufferDescriptor, depthDescriptor, blendDescriptor) {\n        this.gl = gl;\n        this.glProgram = glProgram;\n        this.glPrimitive = glPrimitive;\n        this.uniformDescriptors = uniformDescriptors;\n        this.vertexArrayDescriptor = vertexArrayDescriptor;\n        this.framebufferDescriptor = framebufferDescriptor;\n        this.depthDescriptor = depthDescriptor;\n        this.blendDescriptor = blendDescriptor;\n    }\n    static create(dev, { vert, frag, uniforms = {}, data, framebuffer, primitive = \"triangles\" /* TRIANGLES */, depth, blend, }) {\n        assert.requireNonNull(vert, \"vert\");\n        assert.requireNonNull(frag, \"frag\");\n        assert.requireNonNull(data, \"data\");\n        if (depth) {\n            assert.requireNonNull(depth.func, \"depth.func\");\n        }\n        if (blend) {\n            assert.requireNonNull(blend.func, \"blend.func\");\n            assert.requireNonNull(blend.func.src, \"blend.func.src\");\n            assert.requireNonNull(blend.func.dst, \"blend.func.dst\");\n            if (typeof blend.func.src === \"object\") {\n                assert.requireNonNull(blend.func.src.rgb, \"blend.func.src.rgb\");\n                assert.requireNonNull(blend.func.src.alpha, \"blend.func.src.alpha\");\n            }\n            if (typeof blend.func.dst === \"object\") {\n                assert.requireNonNull(blend.func.dst.rgb, \"blend.func.dst.rgb\");\n                assert.requireNonNull(blend.func.dst.alpha, \"blend.func.dst.alpha\");\n            }\n        }\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const vertShader = glutil.createShader(gl, gl.VERTEX_SHADER, vert);\n        const fragShader = glutil.createShader(gl, gl.FRAGMENT_SHADER, frag);\n        const program = glutil.createProgram(gl, vertShader, fragShader);\n        gl.deleteShader(vertShader);\n        gl.deleteShader(fragShader);\n        const uniformDescriptors = Object.entries(uniforms)\n            .map(([identifier, uniform]) => {\n            const location = gl.getUniformLocation(program, identifier);\n            if (!location) {\n                throw new Error(`No location for uniform: ${identifier}`);\n            }\n            return new UniformDescriptor(identifier, location, uniform);\n        });\n        const vertexArrayDescriptor = typeof data === \"function\"\n            || data instanceof VertexArray\n            ? data\n            : VertexArray.create(dev, locate(gl, program, data));\n        const framebufferDescriptor = framebuffer\n            ? typeof framebuffer === \"function\"\n                || framebuffer instanceof Framebuffer\n                ? framebuffer\n                : Framebuffer.create(gl, framebuffer)\n            : undefined;\n        const depthDescriptor = depth\n            ? new DepthDescriptor(mapGlDepthFunc(gl, depth.func || \"less\" /* LESS */), typeof depth.mask === \"boolean\" ? depth.mask : true, depth.range ? depth.range[0] : 0, depth.range ? depth.range[1] : 1)\n            : undefined;\n        const blendDescriptor = blend\n            ? new BlendDescriptor(mapGlBlendFunc(gl, typeof blend.func.src === \"object\"\n                ? blend.func.src.rgb\n                : blend.func.src), mapGlBlendFunc(gl, typeof blend.func.src === \"object\"\n                ? blend.func.src.alpha\n                : blend.func.src), mapGlBlendFunc(gl, typeof blend.func.dst === \"object\"\n                ? blend.func.dst.rgb\n                : blend.func.dst), mapGlBlendFunc(gl, typeof blend.func.dst === \"object\"\n                ? blend.func.dst.alpha\n                : blend.func.dst), mapGlBlendEquation(gl, blend.equation\n                ? typeof blend.equation === \"object\"\n                    ? blend.equation.rgb\n                    : blend.equation\n                : \"add\" /* ADD */), mapGlBlendEquation(gl, blend.equation\n                ? typeof blend.equation === \"object\"\n                    ? blend.equation.alpha\n                    : blend.equation\n                : \"add\" /* ADD */), blend.color)\n            : undefined;\n        return new Command(gl, program, mapGlPrimitive(gl, primitive), uniformDescriptors, vertexArrayDescriptor, framebufferDescriptor, depthDescriptor, blendDescriptor);\n    }\n    execute(props) {\n        const { gl, glProgram } = this;\n        gl.useProgram(glProgram);\n        this.beginDepth();\n        this.beginBlend();\n        if (Array.isArray(props)) {\n            props.forEach((p, i) => this.executeInner(p, i));\n        }\n        else {\n            this.executeInner(props, 0);\n        }\n        this.endBlend();\n        this.endDepth();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindVertexArray(null);\n    }\n    locate(vertexArrayProps) {\n        return locate(this.gl, this.glProgram, vertexArrayProps);\n    }\n    executeInner(props, index) {\n        const { gl, vertexArrayDescriptor, framebufferDescriptor } = this;\n        let bufferWidth = gl.drawingBufferWidth;\n        let bufferHeight = gl.drawingBufferHeight;\n        const fbo = framebufferDescriptor\n            ? access(props, index, framebufferDescriptor)\n            : undefined;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n            gl.drawBuffers(fbo.glColorAttachments);\n            bufferWidth = fbo.width;\n            bufferHeight = fbo.height;\n        }\n        gl.viewport(0, 0, bufferWidth, bufferHeight);\n        this.updateUniforms(props, index);\n        const vao = access(props, index, vertexArrayDescriptor);\n        gl.bindVertexArray(vao.glVertexArrayObject);\n        if (vao.hasElements) {\n            this.drawElements(vao.count, vao.instanceCount);\n        }\n        else {\n            this.drawArrays(vao.count, vao.instanceCount);\n        }\n    }\n    beginDepth() {\n        const { gl, depthDescriptor } = this;\n        if (depthDescriptor) {\n            gl.enable(gl.DEPTH_TEST);\n            gl.depthFunc(depthDescriptor.func);\n            gl.depthMask(depthDescriptor.mask);\n            gl.depthRange(depthDescriptor.rangeStart, depthDescriptor.rangeEnd);\n        }\n    }\n    endDepth() {\n        const { gl, depthDescriptor } = this;\n        if (depthDescriptor) {\n            gl.disable(gl.DEPTH_TEST);\n        }\n    }\n    beginBlend() {\n        const { gl, blendDescriptor } = this;\n        if (blendDescriptor) {\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(blendDescriptor.srcRGB, blendDescriptor.dstRGB, blendDescriptor.srcAlpha, blendDescriptor.dstAlpha);\n            gl.blendEquationSeparate(blendDescriptor.equationRGB, blendDescriptor.equationAlpha);\n            if (blendDescriptor.color) {\n                const [r, g, b, a] = blendDescriptor.color;\n                gl.blendColor(r, g, b, a);\n            }\n        }\n    }\n    endBlend() {\n        const { gl, blendDescriptor } = this;\n        if (blendDescriptor) {\n            gl.disable(gl.BLEND);\n        }\n    }\n    drawArrays(count, instCount) {\n        const { gl, glPrimitive } = this;\n        if (instCount) {\n            gl.drawArraysInstanced(glPrimitive, 0, count, instCount);\n        }\n        else {\n            gl.drawArrays(glPrimitive, 0, count);\n        }\n    }\n    drawElements(count, instCount) {\n        const { gl, glPrimitive } = this;\n        if (instCount) {\n            gl.drawElementsInstanced(glPrimitive, count, gl.UNSIGNED_INT, // We only support u32 indices\n            0, instCount);\n        }\n        else {\n            gl.drawElements(glPrimitive, count, gl.UNSIGNED_INT, // We only support u32 indices\n            0);\n        }\n    }\n    updateUniforms(props, index) {\n        const gl = this.gl;\n        let textureUnitOffset = 0;\n        this.uniformDescriptors.forEach(({ identifier: ident, location: loc, definition: def, }) => {\n            switch (def.type) {\n                case \"1f\":\n                    gl.uniform1f(loc, access(props, index, def.value));\n                    break;\n                case \"1fv\":\n                    gl.uniform1fv(loc, access(props, index, def.value));\n                    break;\n                case \"1i\":\n                    gl.uniform1i(loc, access(props, index, def.value));\n                    break;\n                case \"1iv\":\n                    gl.uniform1iv(loc, access(props, index, def.value));\n                    break;\n                case \"1ui\":\n                    gl.uniform1ui(loc, access(props, index, def.value));\n                    break;\n                case \"1uiv\":\n                    gl.uniform1uiv(loc, access(props, index, def.value));\n                    break;\n                case \"2f\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2f(loc, x, y);\n                    break;\n                }\n                case \"2fv\":\n                    gl.uniform2fv(loc, access(props, index, def.value));\n                    break;\n                case \"2i\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2i(loc, x, y);\n                    break;\n                }\n                case \"2iv\":\n                    gl.uniform2iv(loc, access(props, index, def.value));\n                    break;\n                case \"2ui\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2ui(loc, x, y);\n                    break;\n                }\n                case \"2uiv\":\n                    gl.uniform2uiv(loc, access(props, index, def.value));\n                    break;\n                case \"3f\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3f(loc, x, y, z);\n                    break;\n                }\n                case \"3fv\":\n                    gl.uniform3fv(loc, access(props, index, def.value));\n                    break;\n                case \"3i\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3i(loc, x, y, z);\n                    break;\n                }\n                case \"3iv\":\n                    gl.uniform3iv(loc, access(props, index, def.value));\n                    break;\n                case \"3ui\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3ui(loc, x, y, z);\n                    break;\n                }\n                case \"3uiv\":\n                    gl.uniform3uiv(loc, access(props, index, def.value));\n                    break;\n                case \"4f\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4f(loc, x, y, z, w);\n                    break;\n                }\n                case \"4fv\":\n                    gl.uniform4fv(loc, access(props, index, def.value));\n                    break;\n                case \"4i\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4i(loc, x, y, z, w);\n                    break;\n                }\n                case \"4iv\":\n                    gl.uniform4iv(loc, access(props, index, def.value));\n                    break;\n                case \"4ui\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4ui(loc, x, y, z, w);\n                    break;\n                }\n                case \"4uiv\":\n                    gl.uniform4uiv(loc, access(props, index, def.value));\n                    break;\n                case \"matrix2fv\":\n                    gl.uniformMatrix2fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix3fv\":\n                    gl.uniformMatrix3fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix4fv\":\n                    gl.uniformMatrix4fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"texture\":\n                    // TODO: is this the best way? (is it fast? can we cache?)\n                    const texture = access(props, index, def.value);\n                    const currentTexture = textureUnitOffset++;\n                    gl.activeTexture(gl.TEXTURE0 + currentTexture);\n                    gl.bindTexture(gl.TEXTURE_2D, texture.glTexture);\n                    gl.uniform1i(loc, currentTexture);\n                    break;\n                default:\n                    assert.never(def, `Unknown uniform type: (${ident})`);\n                    break;\n            }\n        });\n    }\n}\nfunction locate(gl, glProgram, { attributes, elements }) {\n    const locatedAttributes = Object.entries(attributes)\n        .reduce((accum, [identifier, definition]) => {\n        if (INT_PATTERN.test(identifier)) {\n            accum[identifier] = definition;\n        }\n        else {\n            const location = gl.getAttribLocation(glProgram, identifier);\n            if (location === UNKNOWN_ATTRIB_LOCATION) {\n                throw new Error(`No location for attrib: ${identifier}`);\n            }\n            accum[location] = definition;\n        }\n        return accum;\n    }, {});\n    return { attributes: locatedAttributes, elements };\n}\nfunction access(props, index, value) {\n    return typeof value === \"function\" ? value(props, index) : value;\n}\nclass DepthDescriptor {\n    constructor(func, mask, rangeStart, rangeEnd) {\n        this.func = func;\n        this.mask = mask;\n        this.rangeStart = rangeStart;\n        this.rangeEnd = rangeEnd;\n    }\n}\nclass BlendDescriptor {\n    constructor(srcRGB, srcAlpha, dstRGB, dstAlpha, equationRGB, equationAlpha, color) {\n        this.srcRGB = srcRGB;\n        this.srcAlpha = srcAlpha;\n        this.dstRGB = dstRGB;\n        this.dstAlpha = dstAlpha;\n        this.equationRGB = equationRGB;\n        this.equationAlpha = equationAlpha;\n        this.color = color;\n    }\n}\nclass UniformDescriptor {\n    constructor(identifier, location, definition) {\n        this.identifier = identifier;\n        this.location = location;\n        this.definition = definition;\n    }\n}\nfunction mapGlPrimitive(gl, primitive) {\n    switch (primitive) {\n        case \"triangles\" /* TRIANGLES */: return gl.TRIANGLES;\n        case \"triangle-strip\" /* TRIANGLE_STRIP */: return gl.TRIANGLE_STRIP;\n        case \"triangle-fan\" /* TRIANGLE_FAN */: return gl.TRIANGLE_FAN;\n        case \"points\" /* POINTS */: return gl.POINTS;\n        case \"lines\" /* LINES */: return gl.LINES;\n        case \"line-strip\" /* LINE_STRIP */: return gl.LINE_STRIP;\n        case \"line-loop\" /* LINE_LOOP */: return gl.LINE_LOOP;\n        default: return assert.never(primitive);\n    }\n}\nfunction mapGlDepthFunc(gl, func) {\n    switch (func) {\n        case \"always\" /* ALWAYS */: return gl.ALWAYS;\n        case \"never\" /* NEVER */: return gl.NEVER;\n        case \"equal\" /* EQUAL */: return gl.EQUAL;\n        case \"notequal\" /* NOTEQUAL */: return gl.NOTEQUAL;\n        case \"less\" /* LESS */: return gl.LESS;\n        case \"lequal\" /* LEQUAL */: return gl.LEQUAL;\n        case \"greater\" /* GREATER */: return gl.GREATER;\n        case \"gequal\" /* GEQUAL */: return gl.GEQUAL;\n        default: return assert.never(func);\n    }\n}\nfunction mapGlBlendFunc(gl, func) {\n    switch (func) {\n        case \"zero\" /* ZERO */: return gl.ZERO;\n        case \"one\" /* ONE */: return gl.ONE;\n        case \"src-color\" /* SRC_COLOR */: return gl.SRC_COLOR;\n        case \"src-alpha\" /* SRC_ALPHA */: return gl.SRC_ALPHA;\n        case \"one-minus-src-color\" /* ONE_MINUS_SRC_COLOR */: return gl.ONE_MINUS_SRC_COLOR;\n        case \"one-minus-src-alpha\" /* ONE_MINUS_SRC_ALPHA */: return gl.ONE_MINUS_SRC_ALPHA;\n        case \"dst-color\" /* DST_COLOR */: return gl.DST_COLOR;\n        case \"dst-alpha\" /* DST_ALPHA */: return gl.DST_ALPHA;\n        case \"one-minus-dst-color\" /* ONE_MINUS_DST_COLOR */: return gl.ONE_MINUS_DST_COLOR;\n        case \"one-minus-dst-alpha\" /* ONE_MINUS_DST_ALPHA */: return gl.ONE_MINUS_DST_ALPHA;\n        case \"constant-color\" /* CONSTANT_COLOR */: return gl.CONSTANT_COLOR;\n        case \"constant-alpha\" /* CONSTANT_ALPHA */: return gl.CONSTANT_ALPHA;\n        case \"one-minus-constant-color\" /* ONE_MINUS_CONSTANT_COLOR */: return gl.ONE_MINUS_CONSTANT_COLOR;\n        case \"one-minus-constant-alpha\" /* ONE_MINUS_CONSTANT_ALPHA */: return gl.ONE_MINUS_CONSTANT_ALPHA;\n        default: return assert.never(func);\n    }\n}\nfunction mapGlBlendEquation(gl, equation) {\n    switch (equation) {\n        case \"add\" /* ADD */: return gl.FUNC_ADD;\n        case \"subtract\" /* SUBTRACT */: return gl.FUNC_SUBTRACT;\n        case \"reverse-subtract\" /* REVERSE_SUBTRACT */: return gl.FUNC_REVERSE_SUBTRACT;\n        case \"min\" /* MIN */: return gl.MIN;\n        case \"max\" /* MAX */: return gl.MAX;\n        default: return assert.never(equation);\n    }\n}\n//# sourceMappingURL=command.js.map","import * as assert from \"./assert\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nexport class Texture {\n    constructor(glTexture, width, height) {\n        this.glTexture = glTexture;\n        this.width = width;\n        this.height = height;\n    }\n    static fromImage(dev, image, options) {\n        return Texture.fromRGBA8(dev, image.data, image.width, image.height, options);\n    }\n    static fromRGBA8(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Uint8Array\n            ? data\n            // Note: we also have to convert Uint8ClampedArray to Uint8Array\n            // because of webgl bug\n            // https://github.com/KhronosGroup/WebGL/issues/1533\n            : new Uint8Array(data), width, height, \"RGBA8\" /* RGBA8 */, \"RGBA\" /* RGBA */, \"UNSIGNED_BYTE\" /* UNSIGNED_BYTE */, options);\n    }\n    static fromRG16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RG16F\" /* RG16F */, \"RG\" /* RG */, \"FLOAT\" /* FLOAT */, options);\n    }\n    static fromRGB16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGB16F\" /* RGB16F */, \"RGB\" /* RGB */, \"FLOAT\" /* FLOAT */, options);\n    }\n    static fromRGBA16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGBA16F\" /* RGBA16F */, \"RGBA\" /* RGBA */, \"FLOAT\" /* FLOAT */, options);\n    }\n    static fromRGB32F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGB32F\" /* RGB32F */, \"RGB\" /* RGB */, \"FLOAT\" /* FLOAT */, options);\n    }\n    static fromRGBA32F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGBA32F\" /* RGBA32F */, \"RGBA\" /* RGBA */, \"FLOAT\" /* FLOAT */, options);\n    }\n    static fromArrayBufferView(dev, data, width, height, internalFormat, format, type, { min = \"nearest\" /* NEAREST */, mag = \"nearest\" /* NEAREST */, wrapS = \"clamp-to-edge\" /* CLAMP_TO_EDGE */, wrapT = \"clamp-to-edge\" /* CLAMP_TO_EDGE */, mipmap = false, } = {}) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new Texture(glutil.createTexture(gl, data, width, height, mapGlTextureInternalFormat(gl, internalFormat), mapGlTextureFormat(gl, format), mapGlTextureType(gl, type), mapGlTextureWrap(gl, wrapS), mapGlTextureWrap(gl, wrapT), mapGlTextureFilter(gl, min), mapGlTextureFilter(gl, mag), mipmap), width, height);\n    }\n}\nfunction mapGlTextureWrap(gl, wrap) {\n    switch (wrap) {\n        case \"clamp-to-edge\" /* CLAMP_TO_EDGE */: return gl.CLAMP_TO_EDGE;\n        case \"repeat\" /* REPEAT */: return gl.REPEAT;\n        case \"mirrored-repeat\" /* MIRRORED_REPEAT */: return gl.MIRRORED_REPEAT;\n        default: return assert.never(wrap);\n    }\n}\nfunction mapGlTextureFilter(gl, filter) {\n    switch (filter) {\n        case \"nearest\" /* NEAREST */: return gl.NEAREST;\n        case \"linear\" /* LINEAR */: return gl.LINEAR;\n        case \"nearest-mipmap-nearest\" /* NEAREST_MIPMAP_NEAREST */:\n            return gl.NEAREST_MIPMAP_NEAREST;\n        case \"linear-mipmap-nearest\" /* LINEAR_MIPMAP_NEAREST */:\n            return gl.LINEAR_MIPMAP_NEAREST;\n        case \"nearest-mipmap-linear\" /* NEAREST_MIPMAP_LINEAR */:\n            return gl.NEAREST_MIPMAP_LINEAR;\n        case \"linear-mipmap-linear\" /* LINEAR_MIPMAP_LINEAR */:\n            return gl.LINEAR_MIPMAP_LINEAR;\n        default: return assert.never(filter);\n    }\n}\nfunction mapGlTextureInternalFormat(gl, internalFormat) {\n    switch (internalFormat) {\n        // R\n        case \"R8\" /* R8 */: return gl.R8;\n        case \"R8_SNORM\" /* R8_SNORM */: return gl.R8_SNORM;\n        case \"R8UI\" /* R8UI */: return gl.R8UI;\n        case \"R8I\" /* R8I */: return gl.R8I;\n        case \"R16UI\" /* R16UI */: return gl.R16UI;\n        case \"R16I\" /* R16I */: return gl.R16I;\n        case \"R32UI\" /* R32UI */: return gl.R32UI;\n        case \"R32I\" /* R32I */: return gl.R32I;\n        case \"R16F\" /* R16F */: return gl.R16I;\n        case \"R32F\" /* R32F */: return gl.R32F;\n        // RG\n        case \"RG8\" /* RG8 */: return gl.RG8;\n        case \"RG8_SNORM\" /* RG8_SNORM */: return gl.RG8_SNORM;\n        case \"RG8UI\" /* RG8UI */: return gl.RG8UI;\n        case \"RG8I\" /* RG8I */: return gl.RG8I;\n        case \"RG16UI\" /* RG16UI */: return gl.RG16UI;\n        case \"RG16I\" /* RG16I */: return gl.RG16I;\n        case \"RG32UI\" /* RG32UI */: return gl.RG32UI;\n        case \"RG32I\" /* RG32I */: return gl.RG32I;\n        case \"RG16F\" /* RG16F */: return gl.RG16F;\n        case \"RG32F\" /* RG32F */: return gl.RG32F;\n        // RGB\n        case \"RGB8\" /* RGB8 */: return gl.RGB8;\n        case \"RGB8_SNORM\" /* RGB8_SNORM */: return gl.RGB8_SNORM;\n        case \"RGB8UI\" /* RGB8UI */: return gl.RGB8UI;\n        case \"RGB8I\" /* RGB8I */: return gl.RGB8I;\n        case \"RGB16UI\" /* RGB16UI */: return gl.RGB16UI;\n        case \"RGB16I\" /* RGB16I */: return gl.RGB16I;\n        case \"RGB32UI\" /* RGB32UI */: return gl.RGB32UI;\n        case \"RGB32I\" /* RGB32I */: return gl.RGB32I;\n        case \"RGB16F\" /* RGB16F */: return gl.RGB16F;\n        case \"RGB32F\" /* RGB32F */: return gl.RGB32F;\n        // RGBA\n        case \"RGBA8\" /* RGBA8 */: return gl.RGBA8;\n        case \"RGBA8_SNORM\" /* RGBA8_SNORM */: return gl.RGBA8_SNORM;\n        case \"RGBA8UI\" /* RGBA8UI */: return gl.RGBA8UI;\n        case \"RGBA8I\" /* RGBA8I */: return gl.RGBA8I;\n        case \"RGBA16UI\" /* RGBA16UI */: return gl.RGBA16UI;\n        case \"RGBA16I\" /* RGBA16I */: return gl.RGBA16I;\n        case \"RGBA32UI\" /* RGBA32UI */: return gl.RGBA32UI;\n        case \"RGBA32I\" /* RGBA32I */: return gl.RGBA32I;\n        case \"RGBA16F\" /* RGBA16F */: return gl.RGBA16F;\n        case \"RGBA32F\" /* RGBA32F */: return gl.RGBA32F;\n        default: return assert.never(internalFormat);\n    }\n}\nfunction mapGlTextureFormat(gl, format) {\n    switch (format) {\n        case \"RED\" /* RED */: return gl.RED;\n        case \"RG\" /* RG */: return gl.RG;\n        case \"RGB\" /* RGB */: return gl.RGB;\n        case \"RGBA\" /* RGBA */: return gl.RGBA;\n        case \"RED_INTEGER\" /* RED_INTEGER */: return gl.RED_INTEGER;\n        case \"RG_INTEGER\" /* RG_INTEGER */: return gl.RG_INTEGER;\n        case \"RGB_INTEGER\" /* RGB_INTEGER */: return gl.RGB_INTEGER;\n        case \"RGBA_INTEGER\" /* RGBA_INTEGER */: return gl.RGBA_INTEGER;\n        default: return assert.never(format);\n    }\n}\nfunction mapGlTextureType(gl, type) {\n    switch (type) {\n        case \"UNSIGNED_BYTE\" /* UNSIGNED_BYTE */: return gl.UNSIGNED_BYTE;\n        case \"UNSIGNED_SHORT\" /* UNSIGNED_SHORT */: return gl.UNSIGNED_SHORT;\n        case \"UNSIGNED_INT\" /* UNSIGNED_INT */: return gl.UNSIGNED_INT;\n        case \"BYTE\" /* BYTE */: return gl.BYTE;\n        case \"SHORT\" /* SHORT */: return gl.SHORT;\n        case \"INT\" /* INT */: return gl.INT;\n        case \"FLOAT\" /* FLOAT */: return gl.FLOAT;\n    }\n}\n//# sourceMappingURL=texture.js.map","export class Device {\n    constructor(gl, canvas, explicitPixelRatio, explicitViewport) {\n        this.gl = gl;\n        this.canvas = canvas;\n        this.explicitPixelRatio = explicitPixelRatio;\n        this.explicitViewport = explicitViewport;\n    }\n    static mount(element = document.body, options) {\n        if (element instanceof HTMLCanvasElement) {\n            return Device.fromCanvas(element, options);\n        }\n        const canvas = document.createElement(\"canvas\");\n        element.appendChild(canvas);\n        return Device.fromCanvas(canvas, options);\n    }\n    static fromCanvas(canvas, options) {\n        const gl = canvas.getContext(\"webgl2\");\n        if (!gl) {\n            throw new Error(\"Could not get webgl2 context\");\n        }\n        return Device.fromContext(gl, options);\n    }\n    static fromContext(gl, { pixelRatio, viewport, extensions, } = {}) {\n        if (extensions) {\n            extensions.forEach(ext => {\n                if (!gl.getExtension(ext)) {\n                    throw new Error(`Could not get extension ${ext}`);\n                }\n            });\n        }\n        const dev = new Device(gl, gl.canvas, pixelRatio, viewport);\n        dev.update();\n        return dev;\n    }\n    get bufferWidth() {\n        return this.gl.drawingBufferWidth;\n    }\n    get bufferHeight() {\n        return this.gl.drawingBufferHeight;\n    }\n    get canvasWidth() {\n        return this.canvas.width;\n    }\n    get canvasHeight() {\n        return this.canvas.height;\n    }\n    get canvasCSSWidth() {\n        return this.canvas.clientWidth;\n    }\n    get canvasCSSHeight() {\n        return this.canvas.clientHeight;\n    }\n    get pixelRatio() {\n        return this.explicitPixelRatio || window.devicePixelRatio;\n    }\n    update() {\n        const dpr = this.pixelRatio;\n        const canvas = this.canvas;\n        const width = this.explicitViewport\n            && this.explicitViewport[0]\n            || canvas.clientWidth * dpr;\n        const height = this.explicitViewport\n            && this.explicitViewport[1]\n            || canvas.clientHeight * dpr;\n        if (width !== canvas.width) {\n            canvas.width = width;\n        }\n        if (height !== canvas.height) {\n            canvas.height = height;\n        }\n    }\n    clearColorBuffer(r, g, b, a, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearDepthBuffer(depth, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearDepth(depth);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearStencilBuffer(stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearStencil(stencil);\n        gl.clear(gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearColorAndDepthBuffers(r, g, b, a, depth, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearDepthAndStencilBuffers(depth, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearDepth(depth);\n        gl.clearStencil(stencil);\n        gl.clear(gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearColorAndStencilBuffers(r, g, b, a, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearStencil(stencil);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clear(r, g, b, a, depth, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clearStencil(stencil);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n}\n//# sourceMappingURL=device.js.map","import * as assert from \"./assert\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nexport class VertexBuffer {\n    constructor(gl, type, glType, data) {\n        this.gl = gl;\n        this.type = type;\n        this.glType = glType;\n        this.glBuffer = glutil.createArrayBuffer(gl, data);\n    }\n    static create(dev, props) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        switch (props.type) {\n            case \"i8\": return VertexBuffer.fromInt8Array(gl, props.data);\n            case \"i16\": return VertexBuffer.fromInt16Array(gl, props.data);\n            case \"i32\": return VertexBuffer.fromInt32Array(gl, props.data);\n            case \"u8\": return VertexBuffer.fromUint8Array(gl, props.data);\n            case \"u16\": return VertexBuffer.fromUint16Array(gl, props.data);\n            case \"u32\": return VertexBuffer.fromUint32Array(gl, props.data);\n            case \"f32\": return VertexBuffer.fromFloat32Array(gl, props.data);\n            default: return assert.never(props);\n        }\n    }\n    static fromInt8Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"i8\", gl.BYTE, data instanceof Int8Array ? data : new Int8Array(data));\n    }\n    static fromInt16Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"i16\", gl.SHORT, data instanceof Int16Array ? data : new Int16Array(data));\n    }\n    static fromInt32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"i32\", gl.INT, data instanceof Int32Array ? data : new Int32Array(data));\n    }\n    static fromUint8Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"u8\", gl.UNSIGNED_BYTE, \n        // Note: we also have to convert Uint8ClampedArray to Uint8Array\n        // because of webgl bug\n        // https://github.com/KhronosGroup/WebGL/issues/1533\n        data instanceof Uint8Array ? data : new Uint8Array(data));\n    }\n    static fromUint16Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"u16\", gl.UNSIGNED_SHORT, data instanceof Uint16Array ? data : new Uint16Array(data));\n    }\n    static fromUint32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"u32\", gl.UNSIGNED_INT, data instanceof Uint32Array ? data : new Uint32Array(data));\n    }\n    static fromFloat32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"f32\", gl.FLOAT, data instanceof Float32Array ? data : new Float32Array(data));\n    }\n}\n//# sourceMappingURL=vertex-buffer.js.map","import * as array from \"./array\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nexport class ElementBuffer {\n    constructor(glBuffer, count) {\n        this.glBuffer = glBuffer;\n        this.count = count;\n    }\n    static create(dev, props) {\n        return Array.isArray(props)\n            ? ElementBuffer.fromArray(dev, props)\n            : ElementBuffer.fromUint32Array(dev, props.data);\n    }\n    static fromArray(dev, data) {\n        return ElementBuffer.fromUint32Array(dev, array.is2DArray(data)\n            ? array.ravel(data).data\n            : data);\n    }\n    static fromUint32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const arr = Array.isArray(data) ? new Uint32Array(data) : data;\n        const buffer = glutil.createElementArrayBuffer(gl, arr);\n        return new ElementBuffer(buffer, arr.length);\n    }\n}\n//# sourceMappingURL=element-buffer.js.map","import * as assert from \"./assert\";\nimport * as array from \"./array\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nimport { VertexBuffer, } from \"./vertex-buffer\";\nimport { ElementBuffer, } from \"./element-buffer\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nexport class VertexArray {\n    constructor(glVertexArrayObject, hasElements, count, // Either count of vertex data or of elements\n        instanceCount) {\n        this.glVertexArrayObject = glVertexArrayObject;\n        this.hasElements = hasElements;\n        this.count = count;\n        this.instanceCount = instanceCount;\n    }\n    static create(dev, { attributes, elements }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        // Setup attributes\n        const attribDescriptors = [];\n        const attribLocations = [];\n        Object.entries(attributes).forEach(([locationStr, definition]) => {\n            if (!INT_PATTERN.test(locationStr)) {\n                throw new Error(\"Location not a number. Use Command#locate\");\n            }\n            const location = parseInt(locationStr, 10);\n            attribLocations.push(location);\n            attribDescriptors.push(AttributeDescriptor.create(gl, definition));\n        });\n        // Setup elements\n        let elems;\n        if (elements) {\n            elems = elements instanceof ElementBuffer\n                ? elements\n                : ElementBuffer.create(gl, elements);\n        }\n        // Create vertex array\n        const vao = glutil.createVertexArray(gl, attribDescriptors.map((attrib, i) => ({\n            type: attrib.type === \"ipointer\"\n                ? 1 /* IPOINTER */\n                : 0 /* POINTER */,\n            buffer: attrib.buffer.glBuffer,\n            bufferType: attrib.buffer.glType,\n            size: attrib.size,\n            location: attribLocations[i],\n            normalized: attrib.normalized,\n            divisor: attrib.divisor,\n        })), elems ? elems.glBuffer : undefined);\n        // Compute max safe instance count\n        const instancedBuffers = attribDescriptors\n            .filter(buffer => !!buffer.divisor);\n        const instanceCount = instancedBuffers.length\n            ? instancedBuffers\n                .map(b => b.count * b.divisor)\n                .reduce((min, curr) => Math.min(min, curr))\n            : 0;\n        // Create VAO\n        return new VertexArray(vao, !!elems, elems ? elems.count : attribDescriptors[0].count, instanceCount);\n    }\n}\n// TODO: this could use some further refactoring. Currently its just former\n// public API made private.\nclass AttributeDescriptor {\n    static create(gl, props) {\n        if (Array.isArray(props)) {\n            if (array.is2DArray(props)) {\n                const r = array.ravel(props);\n                return new AttributeDescriptor(\"pointer\", VertexBuffer.fromFloat32Array(gl, r.data), r.shape[0], r.shape[1], false, 0);\n            }\n            return new AttributeDescriptor(\"pointer\", VertexBuffer.fromFloat32Array(gl, props), props.length, 1, false, 0);\n        }\n        switch (props.type) {\n            case \"pointer\": return new AttributeDescriptor(props.type, props.value instanceof VertexBuffer\n                ? props.value\n                // Note: typescript is not smart enough to infer what we know\n                : VertexBuffer.create(gl, props.value), props.count, props.size, props.normalized || false, props.divisor || 0);\n            case \"ipointer\": return new AttributeDescriptor(props.type, props.value instanceof VertexBuffer\n                ? props.value\n                // Note: typescript is not smart enough to infer what we know\n                : VertexBuffer.create(gl, props.value), props.count, props.size, false, props.divisor || 0);\n            default: return assert.never(props);\n        }\n    }\n    constructor(type, buffer, count, size, normalized, divisor) {\n        this.type = type;\n        this.buffer = buffer;\n        this.count = count;\n        this.size = size;\n        this.normalized = normalized;\n        this.divisor = divisor;\n    }\n}\n//# sourceMappingURL=vertex-array.js.map","import * as assert from \"./assert\";\nimport { Device } from \"./device\";\nexport class Framebuffer {\n    constructor(glFramebuffer, glColorAttachments, width, height) {\n        this.glFramebuffer = glFramebuffer;\n        this.glColorAttachments = glColorAttachments;\n        this.width = width;\n        this.height = height;\n    }\n    static create(dev, { width, height, color, depth, stencil }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const fbo = gl.createFramebuffer();\n        if (!fbo) {\n            throw new Error(\"Could not create framebuffer\");\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n        const colorBuffers = Array.isArray(color) ? color : [color];\n        colorBuffers.forEach((buffer, i) => {\n            assert.equal(width, buffer.width);\n            assert.equal(height, buffer.height);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.TEXTURE_2D, buffer.glTexture, 0);\n        });\n        if (depth) {\n            assert.equal(width, depth.width);\n            assert.equal(height, depth.height);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depth, 0);\n        }\n        if (stencil) {\n            assert.equal(width, stencil.width);\n            assert.equal(height, stencil.height);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.STENCIL_ATTACHMENT, gl.TEXTURE_2D, stencil, 0);\n        }\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        if (status !== gl.FRAMEBUFFER_COMPLETE) {\n            gl.deleteFramebuffer(fbo);\n            throw new Error(\"Framebuffer not complete\");\n        }\n        return new Framebuffer(fbo, colorBuffers.map((_, i) => gl.COLOR_ATTACHMENT0 + i), width, height);\n    }\n}\n//# sourceMappingURL=framebuffer.js.map"],"names":["never","p","msg","Error","fmt","createProgram","gl","vertex","fragment","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","prettySource","split","map","l","i","join","createArrayBuffer","values","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Array","isArray","Float32Array","STATIC_DRAW","createElementArrayBuffer","elements","ELEMENT_ARRAY_BUFFER","Uint32Array","createVertexArray","buffers","elementBuffer","vao","bindVertexArray","forEach","bufferType","size","location","normalized","divisor","enableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","assert.never","vertexAttribDivisor","createTexture","data","width","height","internalFormat","format","wrapS","wrapT","min","mag","mipmap","texture","bindTexture","TEXTURE_2D","texStorage2D","texSubImage2D","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","generateMipmap","is2DArray","array","length","ravel","unraveled","outerShape","innerShape","raveled","inner","elem","j","shape","locate","glProgram","attributes","Object","entries","reduce","accum","identifier","definition","INT_PATTERN","test","getAttribLocation","UNKNOWN_ATTRIB_LOCATION","access","props","index","value","mapGlPrimitive","primitive","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","POINTS","LINES","LINE_STRIP","LINE_LOOP","mapGlDepthFunc","func","ALWAYS","NEVER","EQUAL","NOTEQUAL","LESS","LEQUAL","GREATER","GEQUAL","mapGlBlendFunc","ZERO","ONE","SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","DST_COLOR","DST_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_COLOR","ONE_MINUS_CONSTANT_ALPHA","mapGlBlendEquation","equation","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","mapGlTextureWrap","wrap","CLAMP_TO_EDGE","REPEAT","MIRRORED_REPEAT","mapGlTextureFilter","filter","NEAREST","LINEAR","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","mapGlTextureInternalFormat","R8","R8_SNORM","R8UI","R8I","R16UI","R16I","R32UI","R32I","R32F","RG8","RG8_SNORM","RG8UI","RG8I","RG16UI","RG16I","RG32UI","RG32I","RG16F","RG32F","RGB8","RGB8_SNORM","RGB8UI","RGB8I","RGB16UI","RGB16I","RGB32UI","RGB32I","RGB16F","RGB32F","RGBA8","RGBA8_SNORM","RGBA8UI","RGBA8I","RGBA16UI","RGBA16I","RGBA32UI","RGBA32I","RGBA16F","RGBA32F","mapGlTextureFormat","RED","RG","RGB","RGBA","RED_INTEGER","RG_INTEGER","RGB_INTEGER","RGBA_INTEGER","mapGlTextureType","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","BYTE","SHORT","INT","FLOAT","Device","[object Object]","canvas","explicitPixelRatio","explicitViewport","this","element","document","body","options","HTMLCanvasElement","fromCanvas","createElement","appendChild","getContext","fromContext","pixelRatio","viewport","extensions","ext","getExtension","dev","update","bufferWidth","drawingBufferWidth","bufferHeight","drawingBufferHeight","canvasWidth","canvasHeight","canvasCSSWidth","clientWidth","canvasCSSHeight","clientHeight","window","devicePixelRatio","dpr","r","g","b","a","fbo","bindFramebuffer","FRAMEBUFFER","glFramebuffer","clearColor","clear","COLOR_BUFFER_BIT","depth","clearDepth","DEPTH_BUFFER_BIT","stencil","clearStencil","STENCIL_BUFFER_BIT","VertexBuffer","glType","glBuffer","glutil.createArrayBuffer","fromInt8Array","fromInt16Array","fromInt32Array","fromUint8Array","fromUint16Array","fromUint32Array","fromFloat32Array","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","ElementBuffer","count","fromArray","array.is2DArray","array.ravel","arr","glutil.createElementArrayBuffer","VertexArray","glVertexArrayObject","hasElements","instanceCount","attribDescriptors","attribLocations","locationStr","parseInt","push","AttributeDescriptor","create","elems","glutil.createVertexArray","attrib","undefined","instancedBuffers","curr","Math","Framebuffer","glColorAttachments","color","createFramebuffer","colorBuffers","framebufferTexture2D","COLOR_ATTACHMENT0","glTexture","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","deleteFramebuffer","_","Command","glPrimitive","uniformDescriptors","vertexArrayDescriptor","framebufferDescriptor","depthDescriptor","blendDescriptor","vert","frag","uniforms","framebuffer","blend","vertShader","glutil.createShader","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","glutil.createProgram","uniform","getUniformLocation","UniformDescriptor","DepthDescriptor","mask","range","BlendDescriptor","src","rgb","alpha","dst","useProgram","beginDepth","beginBlend","executeInner","endBlend","endDepth","vertexArrayProps","drawBuffers","updateUniforms","drawElements","drawArrays","enable","DEPTH_TEST","depthFunc","depthMask","depthRange","rangeStart","rangeEnd","disable","BLEND","blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","blendEquationSeparate","equationRGB","equationAlpha","blendColor","instCount","drawArraysInstanced","drawElementsInstanced","textureUnitOffset","ident","loc","def","uniform1f","uniform1fv","uniform1i","uniform1iv","uniform1ui","uniform1uiv","x","y","uniform2f","uniform2fv","uniform2i","uniform2iv","uniform2ui","uniform2uiv","z","uniform3f","uniform3fv","uniform3i","uniform3iv","uniform3ui","uniform3uiv","w","uniform4f","uniform4fv","uniform4i","uniform4iv","uniform4ui","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","currentTexture","activeTexture","TEXTURE0","Texture","image","fromRGBA8","fromArrayBufferView","glutil.createTexture"],"mappings":"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"}