{"version":3,"file":"glutenfree.es.min.js","sources":["../build/assert.js","../build/glutil.js","../build/array.js","../build/vertex-buffer.js","../build/command.js","../build/texture.js","../build/device.js","../build/element-buffer.js","../build/vertex-array.js","../build/framebuffer.js"],"sourcesContent":["/**\n * This file is an exercise in proprocessor voodoo.\n *\n * \"process.env.NODE_ENV\", gets suplied by the string replacer during a\n * custom build or our production build. If \"production\", constant evaluation\n * will eliminate the if blocks, making the functions no-ops, in turn eligible\n * for elimination from their callsites.\n *\n * While cool, this disables us to return values from the asserts, which would\n * make for a slightly nice programming model: const checkedVal = truthy(val)\n */\n// This does not get replaced and serves as a default velue. If all its uses\n// are eliminated, the value itself is pruned as well.\nconst process = {\n    env: {\n        NODE_ENV: \"development\",\n    },\n};\nexport function requireNonNull(p, name) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof p === \"undefined\" || typeof p === \"object\" && !p) {\n            throw new Error(fmt(`Expected parameter ${name}, but got ${p}`));\n        }\n    }\n}\nexport function requireNonEmpty(p, name) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!p || !p.length) {\n            throw new Error(fmt(`Expected parameter ${name} to be nonempty`));\n        }\n    }\n}\nexport function requireEqual(p, val, name) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (p !== val) {\n            throw new Error(fmt(`\\\nExpected parameter ${name} to be equal to ${val}, but got ${p}`));\n        }\n    }\n}\nexport function nonNull(p, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof p === \"undefined\" || typeof p === \"object\" && !p) {\n            throw new Error(fmt(msg));\n        }\n    }\n}\nexport function nonEmpty(p, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!p || !p.length) {\n            throw new Error(fmt(msg || \"Array empty\"));\n        }\n    }\n}\nexport function equal(p, val, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (p !== val) {\n            throw new Error(fmt(msg || `Not equal: ${p} ${val}`));\n        }\n    }\n}\nexport function never(p, msg) {\n    // \"never\" can not be eliminated, as its \"return value\" is actually captured\n    // at the callsites. It should never be invoked, though.\n    throw new Error(fmt(msg || `Unexpected object: ${p}`));\n}\nfunction fmt(msg) {\n    if (msg) {\n        return `Assertion Failed: ${msg}`;\n    }\n    return `Assertion Failed`;\n}\n//# sourceMappingURL=assert.js.map","import * as assert from \"./assert\";\n/*\n███████╗██╗  ██╗ █████╗ ██████╗ ███████╗██████╗\n██╔════╝██║  ██║██╔══██╗██╔══██╗██╔════╝██╔══██╗\n███████╗███████║███████║██║  ██║█████╗  ██████╔╝\n╚════██║██╔══██║██╔══██║██║  ██║██╔══╝  ██╔══██╗\n███████║██║  ██║██║  ██║██████╔╝███████╗██║  ██║\n╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝ ╚══════╝╚═╝  ╚═╝\n*/\nexport function createProgram(gl, vertex, fragment) {\n    const program = gl.createProgram();\n    if (!program) {\n        throw new Error(\"Could not create Program\");\n    }\n    gl.attachShader(program, vertex);\n    gl.attachShader(program, fragment);\n    gl.linkProgram(program);\n    if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        return program;\n    }\n    const msg = gl.getProgramInfoLog(program);\n    gl.deleteProgram(program);\n    throw new Error(`Could not link shader program: ${msg}`);\n}\nexport function createShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    if (!shader) {\n        throw new Error(\"Could not create Shader\");\n    }\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        return shader;\n    }\n    const msg = gl.getShaderInfoLog(shader);\n    gl.deleteShader(shader);\n    const prettySource = source\n        .split(\"\\n\")\n        .map((l, i) => `${i + 1}: ${l}`)\n        .join(\"\\n\");\n    throw new Error(`Could not compile shader:\\n${msg}\\n${prettySource}`);\n}\nexport function createVertexArray(gl, buffers, elementBuffer) {\n    const vao = gl.createVertexArray();\n    if (!vao) {\n        throw new Error(\"Could not create Vertex Array Object\");\n    }\n    gl.bindVertexArray(vao);\n    buffers.forEach(({ type, buffer, bufferType, size, location, normalized = false, divisor, }) => {\n        // Enable sending attribute arrays for location\n        gl.enableVertexAttribArray(location);\n        // Send buffer\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        switch (type) {\n            case 0 /* POINTER */:\n                gl.vertexAttribPointer(location, size, bufferType, normalized, 0, 0);\n                break;\n            case 1 /* IPOINTER */:\n                gl.vertexAttribIPointer(location, size, bufferType, 0, 0);\n                break;\n            default: assert.never(type);\n        }\n        if (divisor) {\n            gl.vertexAttribDivisor(location, divisor);\n        }\n    });\n    if (elementBuffer) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    }\n    gl.bindVertexArray(null);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    return vao;\n}\n//# sourceMappingURL=glutil.js.map","/**\n * Chacks whether array is at least 2d, mostly useful because of return type\n * predicate.\n */\nexport function is2DArray(array) {\n    return !!array.length || Array.isArray(array[0]);\n}\n/**\n * Flatten 2d array and compute its former shape.\n * eg.\n * ravel([\n *      [1, 2, 3],\n *      [4, 5, 6],\n * ])\n * produces {\n *      data: [1, 2, 3, 4, 5, 6],\n *      shape: [2, 3],\n * }\n */\nexport function ravel(unraveled) {\n    const outerShape = unraveled.length;\n    const innerShape = outerShape ? unraveled[0].length : 0;\n    const raveled = new Array(innerShape * outerShape);\n    unraveled.forEach((inner, i) => {\n        inner.forEach((elem, j) => {\n            raveled[innerShape * i + j] = elem;\n        });\n    });\n    return { data: raveled, shape: [outerShape, innerShape] };\n}\n//# sourceMappingURL=array.js.map","import * as assert from \"./assert\";\nimport { Device } from \"./device\";\nexport class VertexBuffer {\n    constructor(gl, type, data) {\n        this.gl = gl;\n        this.type = type;\n        this.data = data;\n        this.glType = mapGlVertexBufferType(gl, type);\n        this.glBuffer = null;\n        this.init();\n    }\n    static create(dev, props) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        switch (props.type) {\n            case \"byte\" /* BYTE */:\n                return VertexBuffer.fromInt8Array(gl, props.data);\n            case \"short\" /* SHORT */:\n                return VertexBuffer.fromInt16Array(gl, props.data);\n            case \"int\" /* INT */:\n                return VertexBuffer.fromInt32Array(gl, props.data);\n            case \"unsigned byte\" /* UNSIGNED_BYTE */:\n                return VertexBuffer.fromUint8Array(gl, props.data);\n            case \"unsigned short\" /* UNSIGNED_SHORT */:\n                return VertexBuffer.fromUint16Array(gl, props.data);\n            case \"unsigned int\" /* UNSIGNED_INT */:\n                return VertexBuffer.fromUint32Array(gl, props.data);\n            case \"float\" /* FLOAT */:\n                return VertexBuffer.fromFloat32Array(gl, props.data);\n            default: return assert.never(props);\n        }\n    }\n    static fromInt8Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"byte\" /* BYTE */, data instanceof Int8Array ? data : new Int8Array(data));\n    }\n    static fromInt16Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"short\" /* SHORT */, data instanceof Int16Array ? data : new Int16Array(data));\n    }\n    static fromInt32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"int\" /* INT */, data instanceof Int32Array ? data : new Int32Array(data));\n    }\n    static fromUint8Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"unsigned byte\" /* UNSIGNED_BYTE */, \n        // Note: we also have to convert Uint8ClampedArray to Uint8Array\n        // because of webgl bug\n        // https://github.com/KhronosGroup/WebGL/issues/1533\n        data instanceof Uint8Array ? data : new Uint8Array(data));\n    }\n    static fromUint16Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"unsigned short\" /* UNSIGNED_SHORT */, data instanceof Uint16Array ? data : new Uint16Array(data));\n    }\n    static fromUint32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"unsigned int\" /* UNSIGNED_INT */, data instanceof Uint32Array ? data : new Uint32Array(data));\n    }\n    static fromFloat32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"float\" /* FLOAT */, data instanceof Float32Array ? data : new Float32Array(data));\n    }\n    init() {\n        const { gl, data } = this;\n        if (!gl.isContextLost()) {\n            const buffer = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n            gl.bindBuffer(gl.ARRAY_BUFFER, null);\n            this.glBuffer = buffer;\n        }\n    }\n    restore() {\n        if (!this.glBuffer) {\n            this.init();\n        }\n    }\n}\nfunction mapGlVertexBufferType(gl, type) {\n    switch (type) {\n        case \"byte\" /* BYTE */: return gl.BYTE;\n        case \"short\" /* SHORT */: return gl.SHORT;\n        case \"int\" /* INT */: return gl.INT;\n        case \"unsigned byte\" /* UNSIGNED_BYTE */: return gl.UNSIGNED_BYTE;\n        case \"unsigned short\" /* UNSIGNED_SHORT */: return gl.UNSIGNED_SHORT;\n        case \"unsigned int\" /* UNSIGNED_INT */: return gl.UNSIGNED_INT;\n        case \"float\" /* FLOAT */: return gl.FLOAT;\n        default: return assert.never(type, `Unexpexted buffer type: ${type}`);\n    }\n}\n//# sourceMappingURL=vertex-buffer.js.map","import * as assert from \"./assert\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nimport { VertexArray } from \"./vertex-array\";\nimport { Framebuffer } from \"./framebuffer\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nconst UNKNOWN_ATTRIB_LOCATION = -1;\nexport class Command {\n    constructor(gl, glProgram, glPrimitive, uniformDescrs, vertexArrayDescr, framebufferDescr, depthDescr, stencilDescr, blendDescr) {\n        this.gl = gl;\n        this.glProgram = glProgram;\n        this.glPrimitive = glPrimitive;\n        this.uniformDescrs = uniformDescrs;\n        this.vertexArrayDescr = vertexArrayDescr;\n        this.framebufferDescr = framebufferDescr;\n        this.depthDescr = depthDescr;\n        this.stencilDescr = stencilDescr;\n        this.blendDescr = blendDescr;\n    }\n    static create(dev, { vert, frag, uniforms = {}, data, framebuffer, primitive = \"triangles\" /* TRIANGLES */, depth, stencil, blend, }) {\n        assert.requireNonNull(vert, \"vert\");\n        assert.requireNonNull(frag, \"frag\");\n        assert.requireNonNull(data, \"data\");\n        if (depth) {\n            assert.requireNonNull(depth.func, \"depth.func\");\n        }\n        if (blend) {\n            assert.requireNonNull(blend.func, \"blend.func\");\n            assert.requireNonNull(blend.func.src, \"blend.func.src\");\n            assert.requireNonNull(blend.func.dst, \"blend.func.dst\");\n            if (typeof blend.func.src === \"object\") {\n                assert.requireNonNull(blend.func.src.rgb, \"blend.func.src.rgb\");\n                assert.requireNonNull(blend.func.src.alpha, \"blend.func.src.alpha\");\n            }\n            if (typeof blend.func.dst === \"object\") {\n                assert.requireNonNull(blend.func.dst.rgb, \"blend.func.dst.rgb\");\n                assert.requireNonNull(blend.func.dst.alpha, \"blend.func.dst.alpha\");\n            }\n        }\n        if (stencil) {\n            assert.requireNonNull(stencil.func, \"stencil.func\");\n            // TODO: complete stencil validation... validation framework?\n        }\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const vs = glutil.createShader(gl, gl.VERTEX_SHADER, vert);\n        const fs = glutil.createShader(gl, gl.FRAGMENT_SHADER, frag);\n        const prog = glutil.createProgram(gl, vs, fs);\n        gl.deleteShader(vs);\n        gl.deleteShader(fs);\n        const uniformDescrs = Object.entries(uniforms)\n            .map(([ident, uniform]) => {\n            const loc = gl.getUniformLocation(prog, ident);\n            if (!loc) {\n                throw new Error(`No location for uniform: ${ident}`);\n            }\n            return new UniformDescriptor(ident, loc, uniform);\n        });\n        const vertexArrayDescr = typeof data === \"function\"\n            || data instanceof VertexArray\n            ? data\n            : VertexArray.create(dev, locate(gl, prog, data));\n        const framebufferDescr = framebuffer\n            ? typeof framebuffer === \"function\"\n                || framebuffer instanceof Framebuffer\n                ? framebuffer\n                : Framebuffer.create(gl, framebuffer)\n            : undefined;\n        const depthDescr = parseDepth(gl, depth);\n        const stencilDescr = parseStencil(gl, stencil);\n        const blendDescr = parseBlend(gl, blend);\n        return new Command(gl, prog, mapGlPrimitive(gl, primitive), uniformDescrs, vertexArrayDescr, framebufferDescr, depthDescr, stencilDescr, blendDescr);\n    }\n    execute(props) {\n        const { gl, glProgram } = this;\n        gl.useProgram(glProgram);\n        this.beginDepth();\n        this.beginStencil();\n        this.beginBlend();\n        if (Array.isArray(props)) {\n            props.forEach((p, i) => this.executeInner(p, i));\n        }\n        else {\n            this.executeInner(props, 0);\n        }\n        // FBOs and VAOs are bound without unbinding in the inner loop\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindVertexArray(null);\n        this.endBlend();\n        this.endStencil();\n        this.endDepth();\n        gl.useProgram(null);\n    }\n    locate(vertexArrayProps) {\n        return locate(this.gl, this.glProgram, vertexArrayProps);\n    }\n    executeInner(props, index) {\n        const { gl, vertexArrayDescr, framebufferDescr } = this;\n        let bufferWidth = gl.drawingBufferWidth;\n        let bufferHeight = gl.drawingBufferHeight;\n        const fbo = framebufferDescr\n            ? access(props, index, framebufferDescr)\n            : undefined;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n            gl.drawBuffers(fbo.glColorAttachments);\n            bufferWidth = fbo.width;\n            bufferHeight = fbo.height;\n        }\n        gl.viewport(0, 0, bufferWidth, bufferHeight);\n        this.updateUniforms(props, index);\n        const vao = access(props, index, vertexArrayDescr);\n        gl.bindVertexArray(vao.glVertexArrayObject);\n        if (vao.hasElements) {\n            this.drawElements(vao.count, vao.instanceCount);\n        }\n        else {\n            this.drawArrays(vao.count, vao.instanceCount);\n        }\n    }\n    beginDepth() {\n        const { gl, depthDescr } = this;\n        if (depthDescr) {\n            gl.enable(gl.DEPTH_TEST);\n            gl.depthFunc(depthDescr.func);\n            gl.depthMask(depthDescr.mask);\n            gl.depthRange(depthDescr.rangeStart, depthDescr.rangeEnd);\n        }\n    }\n    endDepth() {\n        const { gl, depthDescr } = this;\n        if (depthDescr) {\n            gl.disable(gl.DEPTH_TEST);\n        }\n    }\n    beginStencil() {\n        const { gl, stencilDescr } = this;\n        if (stencilDescr) {\n            const { fFunc, bFunc, fFuncRef, bfuncRef, fFuncMask, bFuncMask, fMask, bMask, fOpFail, bOpFail, fOpZFail, bOpZFail, fOpZPass, bOpZPass, } = stencilDescr;\n            gl.enable(gl.STENCIL_TEST);\n            gl.stencilFuncSeparate(gl.FRONT, fFunc, fFuncRef, fFuncMask);\n            gl.stencilFuncSeparate(gl.BACK, bFunc, bfuncRef, bFuncMask);\n            gl.stencilMaskSeparate(gl.FRONT, fMask);\n            gl.stencilMaskSeparate(gl.BACK, bMask);\n            gl.stencilOpSeparate(gl.FRONT, fOpFail, fOpZFail, fOpZPass);\n            gl.stencilOpSeparate(gl.BACK, bOpFail, bOpZFail, bOpZPass);\n        }\n    }\n    endStencil() {\n        const { gl, stencilDescr } = this;\n        if (stencilDescr) {\n            gl.disable(gl.STENCIL_TEST);\n        }\n    }\n    beginBlend() {\n        const { gl, blendDescr } = this;\n        if (blendDescr) {\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(blendDescr.srcRGB, blendDescr.dstRGB, blendDescr.srcAlpha, blendDescr.dstAlpha);\n            gl.blendEquationSeparate(blendDescr.equationRGB, blendDescr.equationAlpha);\n            if (blendDescr.color) {\n                const [r, g, b, a] = blendDescr.color;\n                gl.blendColor(r, g, b, a);\n            }\n        }\n    }\n    endBlend() {\n        const { gl, blendDescr } = this;\n        if (blendDescr) {\n            gl.disable(gl.BLEND);\n        }\n    }\n    drawArrays(count, instCount) {\n        const { gl, glPrimitive } = this;\n        if (instCount) {\n            gl.drawArraysInstanced(glPrimitive, 0, count, instCount);\n        }\n        else {\n            gl.drawArrays(glPrimitive, 0, count);\n        }\n    }\n    drawElements(count, instCount) {\n        const { gl, glPrimitive } = this;\n        if (instCount) {\n            gl.drawElementsInstanced(glPrimitive, count, gl.UNSIGNED_INT, // We only support u32 indices\n            0, instCount);\n        }\n        else {\n            gl.drawElements(glPrimitive, count, gl.UNSIGNED_INT, // We only support u32 indices\n            0);\n        }\n    }\n    updateUniforms(props, index) {\n        const gl = this.gl;\n        let textureUnitOffset = 0;\n        this.uniformDescrs.forEach(({ identifier: ident, location: loc, definition: def, }) => {\n            switch (def.type) {\n                case \"1f\":\n                    gl.uniform1f(loc, access(props, index, def.value));\n                    break;\n                case \"1fv\":\n                    gl.uniform1fv(loc, access(props, index, def.value));\n                    break;\n                case \"1i\":\n                    gl.uniform1i(loc, access(props, index, def.value));\n                    break;\n                case \"1iv\":\n                    gl.uniform1iv(loc, access(props, index, def.value));\n                    break;\n                case \"1ui\":\n                    gl.uniform1ui(loc, access(props, index, def.value));\n                    break;\n                case \"1uiv\":\n                    gl.uniform1uiv(loc, access(props, index, def.value));\n                    break;\n                case \"2f\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2f(loc, x, y);\n                    break;\n                }\n                case \"2fv\":\n                    gl.uniform2fv(loc, access(props, index, def.value));\n                    break;\n                case \"2i\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2i(loc, x, y);\n                    break;\n                }\n                case \"2iv\":\n                    gl.uniform2iv(loc, access(props, index, def.value));\n                    break;\n                case \"2ui\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2ui(loc, x, y);\n                    break;\n                }\n                case \"2uiv\":\n                    gl.uniform2uiv(loc, access(props, index, def.value));\n                    break;\n                case \"3f\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3f(loc, x, y, z);\n                    break;\n                }\n                case \"3fv\":\n                    gl.uniform3fv(loc, access(props, index, def.value));\n                    break;\n                case \"3i\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3i(loc, x, y, z);\n                    break;\n                }\n                case \"3iv\":\n                    gl.uniform3iv(loc, access(props, index, def.value));\n                    break;\n                case \"3ui\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3ui(loc, x, y, z);\n                    break;\n                }\n                case \"3uiv\":\n                    gl.uniform3uiv(loc, access(props, index, def.value));\n                    break;\n                case \"4f\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4f(loc, x, y, z, w);\n                    break;\n                }\n                case \"4fv\":\n                    gl.uniform4fv(loc, access(props, index, def.value));\n                    break;\n                case \"4i\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4i(loc, x, y, z, w);\n                    break;\n                }\n                case \"4iv\":\n                    gl.uniform4iv(loc, access(props, index, def.value));\n                    break;\n                case \"4ui\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4ui(loc, x, y, z, w);\n                    break;\n                }\n                case \"4uiv\":\n                    gl.uniform4uiv(loc, access(props, index, def.value));\n                    break;\n                case \"matrix2fv\":\n                    gl.uniformMatrix2fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix3fv\":\n                    gl.uniformMatrix3fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix4fv\":\n                    gl.uniformMatrix4fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"texture\":\n                    // TODO: is this the best way? (is it fast? can we cache?)\n                    const texture = access(props, index, def.value);\n                    const currentTexture = textureUnitOffset++;\n                    gl.activeTexture(gl.TEXTURE0 + currentTexture);\n                    gl.bindTexture(gl.TEXTURE_2D, texture.glTexture);\n                    gl.uniform1i(loc, currentTexture);\n                    break;\n                default:\n                    assert.never(def, `Unknown uniform type: (${ident})`);\n                    break;\n            }\n        });\n    }\n}\nfunction locate(gl, glProgram, { attributes, elements }) {\n    const locatedAttributes = Object.entries(attributes)\n        .reduce((accum, [identifier, definition]) => {\n        if (INT_PATTERN.test(identifier)) {\n            accum[identifier] = definition;\n        }\n        else {\n            const location = gl.getAttribLocation(glProgram, identifier);\n            if (location === UNKNOWN_ATTRIB_LOCATION) {\n                throw new Error(`No location for attrib: ${identifier}`);\n            }\n            accum[location] = definition;\n        }\n        return accum;\n    }, {});\n    return { attributes: locatedAttributes, elements };\n}\nfunction access(props, index, value) {\n    return typeof value === \"function\" ? value(props, index) : value;\n}\nclass DepthDescriptor {\n    constructor(func, mask, rangeStart, rangeEnd) {\n        this.func = func;\n        this.mask = mask;\n        this.rangeStart = rangeStart;\n        this.rangeEnd = rangeEnd;\n    }\n}\nclass StencilDescriptor {\n    constructor(fFunc, bFunc, fFuncRef, bfuncRef, fFuncMask, bFuncMask, fMask, bMask, fOpFail, bOpFail, fOpZFail, bOpZFail, fOpZPass, bOpZPass) {\n        this.fFunc = fFunc;\n        this.bFunc = bFunc;\n        this.fFuncRef = fFuncRef;\n        this.bfuncRef = bfuncRef;\n        this.fFuncMask = fFuncMask;\n        this.bFuncMask = bFuncMask;\n        this.fMask = fMask;\n        this.bMask = bMask;\n        this.fOpFail = fOpFail;\n        this.bOpFail = bOpFail;\n        this.fOpZFail = fOpZFail;\n        this.bOpZFail = bOpZFail;\n        this.fOpZPass = fOpZPass;\n        this.bOpZPass = bOpZPass;\n    }\n}\nclass BlendDescriptor {\n    constructor(srcRGB, srcAlpha, dstRGB, dstAlpha, equationRGB, equationAlpha, color) {\n        this.srcRGB = srcRGB;\n        this.srcAlpha = srcAlpha;\n        this.dstRGB = dstRGB;\n        this.dstAlpha = dstAlpha;\n        this.equationRGB = equationRGB;\n        this.equationAlpha = equationAlpha;\n        this.color = color;\n    }\n}\nclass UniformDescriptor {\n    constructor(identifier, location, definition) {\n        this.identifier = identifier;\n        this.location = location;\n        this.definition = definition;\n    }\n}\nfunction mapGlPrimitive(gl, primitive) {\n    switch (primitive) {\n        case \"triangles\" /* TRIANGLES */: return gl.TRIANGLES;\n        case \"triangle-strip\" /* TRIANGLE_STRIP */: return gl.TRIANGLE_STRIP;\n        case \"triangle-fan\" /* TRIANGLE_FAN */: return gl.TRIANGLE_FAN;\n        case \"points\" /* POINTS */: return gl.POINTS;\n        case \"lines\" /* LINES */: return gl.LINES;\n        case \"line-strip\" /* LINE_STRIP */: return gl.LINE_STRIP;\n        case \"line-loop\" /* LINE_LOOP */: return gl.LINE_LOOP;\n        default: return assert.never(primitive, `Unknown primitive: ${primitive}`);\n    }\n}\nfunction mapGlDepthOrStencilFunc(gl, func) {\n    switch (func) {\n        case \"always\" /* ALWAYS */: return gl.ALWAYS;\n        case \"never\" /* NEVER */: return gl.NEVER;\n        case \"equal\" /* EQUAL */: return gl.EQUAL;\n        case \"notequal\" /* NOTEQUAL */: return gl.NOTEQUAL;\n        case \"less\" /* LESS */: return gl.LESS;\n        case \"lequal\" /* LEQUAL */: return gl.LEQUAL;\n        case \"greater\" /* GREATER */: return gl.GREATER;\n        case \"gequal\" /* GEQUAL */: return gl.GEQUAL;\n        default: return assert.never(func, `Unknown depth or stencil function: ${func}`);\n    }\n}\nfunction mapGlStencilOp(gl, op) {\n    switch (op) {\n        case \"keep\" /* KEEP */: return gl.KEEP;\n        case \"zero\" /* ZERO */: return gl.ZERO;\n        case \"replace\" /* REPLACE */: return gl.REPLACE;\n        case \"incr\" /* INCR */: return gl.INCR;\n        case \"incr-wrap\" /* INCR_WRAP */: return gl.INCR_WRAP;\n        case \"decr\" /* DECR */: return gl.DECR;\n        case \"decr-wrap\" /* DECR_WRAP */: return gl.DECR_WRAP;\n        case \"invert\" /* INVERT */: return gl.INVERT;\n        default: return assert.never(op, `Unknown stencil op: ${op}`);\n    }\n}\nfunction mapGlBlendFunc(gl, func) {\n    switch (func) {\n        case \"zero\" /* ZERO */: return gl.ZERO;\n        case \"one\" /* ONE */: return gl.ONE;\n        case \"src-color\" /* SRC_COLOR */: return gl.SRC_COLOR;\n        case \"src-alpha\" /* SRC_ALPHA */: return gl.SRC_ALPHA;\n        case \"one-minus-src-color\" /* ONE_MINUS_SRC_COLOR */: return gl.ONE_MINUS_SRC_COLOR;\n        case \"one-minus-src-alpha\" /* ONE_MINUS_SRC_ALPHA */: return gl.ONE_MINUS_SRC_ALPHA;\n        case \"dst-color\" /* DST_COLOR */: return gl.DST_COLOR;\n        case \"dst-alpha\" /* DST_ALPHA */: return gl.DST_ALPHA;\n        case \"one-minus-dst-color\" /* ONE_MINUS_DST_COLOR */: return gl.ONE_MINUS_DST_COLOR;\n        case \"one-minus-dst-alpha\" /* ONE_MINUS_DST_ALPHA */: return gl.ONE_MINUS_DST_ALPHA;\n        case \"constant-color\" /* CONSTANT_COLOR */: return gl.CONSTANT_COLOR;\n        case \"constant-alpha\" /* CONSTANT_ALPHA */: return gl.CONSTANT_ALPHA;\n        case \"one-minus-constant-color\" /* ONE_MINUS_CONSTANT_COLOR */: return gl.ONE_MINUS_CONSTANT_COLOR;\n        case \"one-minus-constant-alpha\" /* ONE_MINUS_CONSTANT_ALPHA */: return gl.ONE_MINUS_CONSTANT_ALPHA;\n        default: return assert.never(func, `Unknown blend func: ${func}`);\n    }\n}\nfunction mapGlBlendEquation(gl, equation) {\n    switch (equation) {\n        case \"add\" /* ADD */: return gl.FUNC_ADD;\n        case \"subtract\" /* SUBTRACT */: return gl.FUNC_SUBTRACT;\n        case \"reverse-subtract\" /* REVERSE_SUBTRACT */: return gl.FUNC_REVERSE_SUBTRACT;\n        case \"min\" /* MIN */: return gl.MIN;\n        case \"max\" /* MAX */: return gl.MAX;\n        default: return assert.never(equation, `Unknown blend equation, ${equation}`);\n    }\n}\nfunction parseDepth(gl, depth) {\n    if (!depth) {\n        return undefined;\n    }\n    return new DepthDescriptor(mapGlDepthOrStencilFunc(gl, depth.func || \"less\" /* LESS */), typeof depth.mask === \"boolean\" ? depth.mask : true, depth.range ? depth.range[0] : 0, depth.range ? depth.range[1] : 1);\n}\nfunction parseStencil(gl, stencil) {\n    if (!stencil) {\n        return undefined;\n    }\n    return new StencilDescriptor(mapGlDepthOrStencilFunc(gl, typeof stencil.func.func === \"object\"\n        ? stencil.func.func.front\n        : stencil.func.func), mapGlDepthOrStencilFunc(gl, typeof stencil.func.func === \"object\"\n        ? stencil.func.func.back\n        : stencil.func.func), typeof stencil.func.ref !== \"undefined\"\n        ? typeof stencil.func.ref === \"object\"\n            ? stencil.func.ref.front\n            : stencil.func.ref\n        : 1, typeof stencil.func.ref !== \"undefined\"\n        ? typeof stencil.func.ref === \"object\"\n            ? stencil.func.ref.back\n            : stencil.func.ref\n        : 1, typeof stencil.func.mask !== \"undefined\"\n        ? typeof stencil.func.mask === \"object\"\n            ? stencil.func.mask.front\n            : stencil.func.mask\n        : 0xFF, typeof stencil.func.mask !== \"undefined\"\n        ? typeof stencil.func.mask === \"object\"\n            ? stencil.func.mask.back\n            : stencil.func.mask\n        : 0xFF, typeof stencil.mask !== \"undefined\"\n        ? typeof stencil.mask === \"object\"\n            ? stencil.mask.front\n            : stencil.mask\n        : 0xFF, typeof stencil.mask !== \"undefined\"\n        ? typeof stencil.mask === \"object\"\n            ? stencil.mask.back\n            : stencil.mask\n        : 0xFF, mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.fail === \"object\"\n            ? stencil.op.fail.front\n            : stencil.op.fail\n        : \"keep\" /* KEEP */), mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.fail === \"object\"\n            ? stencil.op.fail.back\n            : stencil.op.fail\n        : \"keep\" /* KEEP */), mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.zfail === \"object\"\n            ? stencil.op.zfail.front\n            : stencil.op.zfail\n        : \"keep\" /* KEEP */), mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.zfail === \"object\"\n            ? stencil.op.zfail.back\n            : stencil.op.zfail\n        : \"keep\" /* KEEP */), mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.zpass === \"object\"\n            ? stencil.op.zpass.front\n            : stencil.op.zpass\n        : \"keep\" /* KEEP */), mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.zpass === \"object\"\n            ? stencil.op.zpass.back\n            : stencil.op.zpass\n        : \"keep\" /* KEEP */));\n}\nfunction parseBlend(gl, blend) {\n    if (!blend) {\n        return undefined;\n    }\n    return new BlendDescriptor(mapGlBlendFunc(gl, typeof blend.func.src === \"object\"\n        ? blend.func.src.rgb\n        : blend.func.src), mapGlBlendFunc(gl, typeof blend.func.src === \"object\"\n        ? blend.func.src.alpha\n        : blend.func.src), mapGlBlendFunc(gl, typeof blend.func.dst === \"object\"\n        ? blend.func.dst.rgb\n        : blend.func.dst), mapGlBlendFunc(gl, typeof blend.func.dst === \"object\"\n        ? blend.func.dst.alpha\n        : blend.func.dst), mapGlBlendEquation(gl, blend.equation\n        ? typeof blend.equation === \"object\"\n            ? blend.equation.rgb\n            : blend.equation\n        : \"add\" /* ADD */), mapGlBlendEquation(gl, blend.equation\n        ? typeof blend.equation === \"object\"\n            ? blend.equation.alpha\n            : blend.equation\n        : \"add\" /* ADD */), blend.color);\n}\n//# sourceMappingURL=command.js.map","import * as assert from \"./assert\";\nimport { Device } from \"./device\";\nexport class Texture {\n    static fromImage(dev, image, options) {\n        return Texture.fromRGBA8(dev, image.data, image.width, image.height, options);\n    }\n    static fromRGBA8(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Uint8Array\n            ? data\n            // Note: we also have to convert Uint8ClampedArray to Uint8Array\n            // because of webgl bug\n            // https://github.com/KhronosGroup/WebGL/issues/1533\n            : new Uint8Array(data), width, height, \"RGBA8\" /* RGBA8 */, \"RGBA\" /* RGBA */, \"unsigned byte\" /* UNSIGNED_BYTE */, options);\n    }\n    static fromRG16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RG16F\" /* RG16F */, \"RG\" /* RG */, \"float\" /* FLOAT */, options);\n    }\n    static fromRGB16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGB16F\" /* RGB16F */, \"RGB\" /* RGB */, \"float\" /* FLOAT */, options);\n    }\n    static fromRGBA16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGBA16F\" /* RGBA16F */, \"RGBA\" /* RGBA */, \"float\" /* FLOAT */, options);\n    }\n    static fromRGB32F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGB32F\" /* RGB32F */, \"RGB\" /* RGB */, \"float\" /* FLOAT */, options);\n    }\n    static fromRGBA32F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGBA32F\" /* RGBA32F */, \"RGBA\" /* RGBA */, \"float\" /* FLOAT */, options);\n    }\n    static fromArrayBufferView(dev, data, width, height, internalFormat, format, type, { min = \"nearest\" /* NEAREST */, mag = \"nearest\" /* NEAREST */, wrapS = \"clamp-to-edge\" /* CLAMP_TO_EDGE */, wrapT = \"clamp-to-edge\" /* CLAMP_TO_EDGE */, mipmap = false, } = {}) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new Texture(gl, data, width, height, internalFormat, format, type, wrapS, wrapT, min, mag, mipmap);\n    }\n    constructor(gl, data, width, height, internalFormat, format, type, wrapS, wrapT, minFilter, magFilter, mipmap) {\n        this.gl = gl;\n        this.data = data;\n        this.width = width;\n        this.height = height;\n        this.internalFormat = internalFormat;\n        this.format = format;\n        this.type = type;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.mipmap = mipmap;\n        this.glInternalFormat = mapGlTextureInternalFormat(gl, internalFormat);\n        this.glFormat = mapGlTextureFormat(gl, format);\n        this.glType = mapGlTextureType(gl, type);\n        this.glWrapS = mapGlTextureWrap(gl, wrapS);\n        this.glWrapT = mapGlTextureWrap(gl, wrapT);\n        this.glMinFilter = mapGlTextureFilter(gl, minFilter);\n        this.glMagFilter = mapGlTextureFilter(gl, magFilter);\n        this.glTexture = null;\n        this.init();\n    }\n    init() {\n        const { gl, data, width, height, glInternalFormat, glFormat, glType, glWrapS, glWrapT, glMinFilter, glMagFilter, mipmap, } = this;\n        if (!gl.isContextLost()) {\n            const texture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texStorage2D(gl.TEXTURE_2D, 1, glInternalFormat, width, height);\n            if (data) {\n                gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, width, height, glFormat, glType, data);\n            }\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, glWrapS);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, glWrapT);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, glMinFilter);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, glMagFilter);\n            if (mipmap) {\n                gl.generateMipmap(gl.TEXTURE_2D);\n            }\n            gl.bindTexture(gl.TEXTURE_2D, null);\n            this.glTexture = texture;\n        }\n    }\n    restore() {\n        if (!this.glTexture) {\n            this.init();\n        }\n    }\n}\nfunction mapGlTextureWrap(gl, wrap) {\n    switch (wrap) {\n        case \"clamp-to-edge\" /* CLAMP_TO_EDGE */: return gl.CLAMP_TO_EDGE;\n        case \"repeat\" /* REPEAT */: return gl.REPEAT;\n        case \"mirrored-repeat\" /* MIRRORED_REPEAT */: return gl.MIRRORED_REPEAT;\n        default: return assert.never(wrap, `Unknown texture wrap: ${wrap}`);\n    }\n}\nfunction mapGlTextureFilter(gl, filter) {\n    switch (filter) {\n        case \"nearest\" /* NEAREST */: return gl.NEAREST;\n        case \"linear\" /* LINEAR */: return gl.LINEAR;\n        case \"nearest-mipmap-nearest\" /* NEAREST_MIPMAP_NEAREST */:\n            return gl.NEAREST_MIPMAP_NEAREST;\n        case \"linear-mipmap-nearest\" /* LINEAR_MIPMAP_NEAREST */:\n            return gl.LINEAR_MIPMAP_NEAREST;\n        case \"nearest-mipmap-linear\" /* NEAREST_MIPMAP_LINEAR */:\n            return gl.NEAREST_MIPMAP_LINEAR;\n        case \"linear-mipmap-linear\" /* LINEAR_MIPMAP_LINEAR */:\n            return gl.LINEAR_MIPMAP_LINEAR;\n        default: return assert.never(filter, `Unknown texture filter: ${filter}`);\n    }\n}\nfunction mapGlTextureInternalFormat(gl, internalFormat) {\n    switch (internalFormat) {\n        // R\n        case \"R8\" /* R8 */: return gl.R8;\n        case \"R8_SNORM\" /* R8_SNORM */: return gl.R8_SNORM;\n        case \"R8UI\" /* R8UI */: return gl.R8UI;\n        case \"R8I\" /* R8I */: return gl.R8I;\n        case \"R16UI\" /* R16UI */: return gl.R16UI;\n        case \"R16I\" /* R16I */: return gl.R16I;\n        case \"R32UI\" /* R32UI */: return gl.R32UI;\n        case \"R32I\" /* R32I */: return gl.R32I;\n        case \"R16F\" /* R16F */: return gl.R16I;\n        case \"R32F\" /* R32F */: return gl.R32F;\n        // RG\n        case \"RG8\" /* RG8 */: return gl.RG8;\n        case \"RG8_SNORM\" /* RG8_SNORM */: return gl.RG8_SNORM;\n        case \"RG8UI\" /* RG8UI */: return gl.RG8UI;\n        case \"RG8I\" /* RG8I */: return gl.RG8I;\n        case \"RG16UI\" /* RG16UI */: return gl.RG16UI;\n        case \"RG16I\" /* RG16I */: return gl.RG16I;\n        case \"RG32UI\" /* RG32UI */: return gl.RG32UI;\n        case \"RG32I\" /* RG32I */: return gl.RG32I;\n        case \"RG16F\" /* RG16F */: return gl.RG16F;\n        case \"RG32F\" /* RG32F */: return gl.RG32F;\n        // RGB\n        case \"RGB8\" /* RGB8 */: return gl.RGB8;\n        case \"RGB8_SNORM\" /* RGB8_SNORM */: return gl.RGB8_SNORM;\n        case \"RGB8UI\" /* RGB8UI */: return gl.RGB8UI;\n        case \"RGB8I\" /* RGB8I */: return gl.RGB8I;\n        case \"RGB16UI\" /* RGB16UI */: return gl.RGB16UI;\n        case \"RGB16I\" /* RGB16I */: return gl.RGB16I;\n        case \"RGB32UI\" /* RGB32UI */: return gl.RGB32UI;\n        case \"RGB32I\" /* RGB32I */: return gl.RGB32I;\n        case \"RGB16F\" /* RGB16F */: return gl.RGB16F;\n        case \"RGB32F\" /* RGB32F */: return gl.RGB32F;\n        // RGBA\n        case \"RGBA8\" /* RGBA8 */: return gl.RGBA8;\n        case \"RGBA8_SNORM\" /* RGBA8_SNORM */: return gl.RGBA8_SNORM;\n        case \"RGBA8UI\" /* RGBA8UI */: return gl.RGBA8UI;\n        case \"RGBA8I\" /* RGBA8I */: return gl.RGBA8I;\n        case \"RGBA16UI\" /* RGBA16UI */: return gl.RGBA16UI;\n        case \"RGBA16I\" /* RGBA16I */: return gl.RGBA16I;\n        case \"RGBA32UI\" /* RGBA32UI */: return gl.RGBA32UI;\n        case \"RGBA32I\" /* RGBA32I */: return gl.RGBA32I;\n        case \"RGBA16F\" /* RGBA16F */: return gl.RGBA16F;\n        case \"RGBA32F\" /* RGBA32F */: return gl.RGBA32F;\n        default: return assert.never(internalFormat, `Unknown texture internal format: ${internalFormat}`);\n    }\n}\nfunction mapGlTextureFormat(gl, format) {\n    switch (format) {\n        case \"RED\" /* RED */: return gl.RED;\n        case \"RG\" /* RG */: return gl.RG;\n        case \"RGB\" /* RGB */: return gl.RGB;\n        case \"RGBA\" /* RGBA */: return gl.RGBA;\n        case \"RED_INTEGER\" /* RED_INTEGER */: return gl.RED_INTEGER;\n        case \"RG_INTEGER\" /* RG_INTEGER */: return gl.RG_INTEGER;\n        case \"RGB_INTEGER\" /* RGB_INTEGER */: return gl.RGB_INTEGER;\n        case \"RGBA_INTEGER\" /* RGBA_INTEGER */: return gl.RGBA_INTEGER;\n        default: return assert.never(format, `Unknown texture format: ${format}`);\n    }\n}\nexport function mapGlTextureType(gl, type) {\n    switch (type) {\n        case \"byte\" /* BYTE */: return gl.BYTE;\n        case \"short\" /* SHORT */: return gl.SHORT;\n        case \"int\" /* INT */: return gl.INT;\n        case \"unsigned byte\" /* UNSIGNED_BYTE */: return gl.UNSIGNED_BYTE;\n        case \"unsigned short\" /* UNSIGNED_SHORT */: return gl.UNSIGNED_SHORT;\n        case \"unsigned int\" /* UNSIGNED_INT */: return gl.UNSIGNED_INT;\n        case \"float\" /* FLOAT */: return gl.FLOAT;\n        default: return assert.never(type, `Unknown texture type: ${type}`);\n    }\n}\n//# sourceMappingURL=texture.js.map","export class Device {\n    constructor(gl, canvas, explicitPixelRatio, explicitViewport) {\n        this.gl = gl;\n        this.canvas = canvas;\n        this.explicitPixelRatio = explicitPixelRatio;\n        this.explicitViewport = explicitViewport;\n    }\n    static mount(element = document.body, options) {\n        if (element instanceof HTMLCanvasElement) {\n            return Device.fromCanvas(element, options);\n        }\n        const canvas = document.createElement(\"canvas\");\n        element.appendChild(canvas);\n        return Device.fromCanvas(canvas, options);\n    }\n    static fromCanvas(canvas, options = {}) {\n        const { antialias = true, alpha = true, depth = true, stencil = true, preserveDrawingBuffer = false, } = options.context || {};\n        const gl = canvas.getContext(\"webgl2\", {\n            antialias,\n            alpha,\n            depth,\n            stencil,\n            preserveDrawingBuffer,\n        });\n        if (!gl) {\n            throw new Error(\"Could not get webgl2 context\");\n        }\n        return Device.fromContext(gl, options);\n    }\n    static fromContext(gl, { pixelRatio, viewport, extensions, } = {}) {\n        if (extensions) {\n            extensions.forEach(ext => {\n                if (!gl.getExtension(ext)) {\n                    throw new Error(`Could not get extension ${ext}`);\n                }\n            });\n        }\n        const dev = new Device(gl, gl.canvas, pixelRatio, viewport);\n        dev.update();\n        return dev;\n    }\n    get bufferWidth() {\n        return this.gl.drawingBufferWidth;\n    }\n    get bufferHeight() {\n        return this.gl.drawingBufferHeight;\n    }\n    get canvasWidth() {\n        return this.canvas.width;\n    }\n    get canvasHeight() {\n        return this.canvas.height;\n    }\n    get canvasCSSWidth() {\n        return this.canvas.clientWidth;\n    }\n    get canvasCSSHeight() {\n        return this.canvas.clientHeight;\n    }\n    get pixelRatio() {\n        return this.explicitPixelRatio || window.devicePixelRatio;\n    }\n    update() {\n        const dpr = this.pixelRatio;\n        const canvas = this.canvas;\n        const width = this.explicitViewport\n            && this.explicitViewport[0]\n            || canvas.clientWidth * dpr;\n        const height = this.explicitViewport\n            && this.explicitViewport[1]\n            || canvas.clientHeight * dpr;\n        if (width !== canvas.width) {\n            canvas.width = width;\n        }\n        if (height !== canvas.height) {\n            canvas.height = height;\n        }\n    }\n    clearColorBuffer(r, g, b, a, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearDepthBuffer(depth, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearDepth(depth);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearStencilBuffer(stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearStencil(stencil);\n        gl.clear(gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearColorAndDepthBuffers(r, g, b, a, depth, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearDepthAndStencilBuffers(depth, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearDepth(depth);\n        gl.clearStencil(stencil);\n        gl.clear(gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearColorAndStencilBuffers(r, g, b, a, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearStencil(stencil);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clear(r, g, b, a, depth, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clearStencil(stencil);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n}\n//# sourceMappingURL=device.js.map","import * as array from \"./array\";\nimport { Device } from \"./device\";\nexport class ElementBuffer {\n    static create(dev, props) {\n        return Array.isArray(props)\n            ? ElementBuffer.fromArray(dev, props)\n            : ElementBuffer.fromUint32Array(dev, props.data);\n    }\n    static fromArray(dev, data) {\n        return ElementBuffer.fromUint32Array(dev, array.is2DArray(data)\n            ? array.ravel(data).data\n            : data);\n    }\n    static fromUint32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const arr = Array.isArray(data) ? new Uint32Array(data) : data;\n        return new ElementBuffer(gl, arr);\n    }\n    constructor(gl, data) {\n        this.gl = gl;\n        this.data = data;\n        this.glBuffer = null;\n        this.init();\n    }\n    get count() {\n        return this.data.length;\n    }\n    init() {\n        const { gl, data } = this;\n        if (!gl.isContextLost()) {\n            const buffer = gl.createBuffer();\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n            this.glBuffer = buffer;\n        }\n    }\n    restore() {\n        if (!this.glBuffer) {\n            this.init();\n        }\n    }\n}\n//# sourceMappingURL=element-buffer.js.map","import * as assert from \"./assert\";\nimport * as array from \"./array\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nimport { VertexBuffer, } from \"./vertex-buffer\";\nimport { ElementBuffer, } from \"./element-buffer\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nexport class VertexArray {\n    constructor(glVertexArrayObject, hasElements, count, // Either count of vertex data or of elements\n        instanceCount) {\n        this.glVertexArrayObject = glVertexArrayObject;\n        this.hasElements = hasElements;\n        this.count = count;\n        this.instanceCount = instanceCount;\n    }\n    static create(dev, { attributes, elements }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        // Setup attributes\n        const attribDescriptors = [];\n        const attribLocations = [];\n        Object.entries(attributes).forEach(([locationStr, definition]) => {\n            if (!INT_PATTERN.test(locationStr)) {\n                throw new Error(\"Location not a number. Use Command#locate\");\n            }\n            const location = parseInt(locationStr, 10);\n            attribLocations.push(location);\n            attribDescriptors.push(AttributeDescriptor.create(gl, definition));\n        });\n        // Setup elements\n        let elems;\n        if (elements) {\n            elems = elements instanceof ElementBuffer\n                ? elements\n                : ElementBuffer.create(gl, elements);\n        }\n        // Create vertex array\n        const vao = glutil.createVertexArray(gl, attribDescriptors.map((attrib, i) => ({\n            type: attrib.type === \"ipointer\"\n                ? 1 /* IPOINTER */\n                : 0 /* POINTER */,\n            buffer: attrib.buffer.glBuffer,\n            bufferType: attrib.buffer.glType,\n            size: attrib.size,\n            location: attribLocations[i],\n            normalized: attrib.normalized,\n            divisor: attrib.divisor,\n        })), elems ? elems.glBuffer : undefined);\n        // Compute max safe instance count\n        const instancedBuffers = attribDescriptors\n            .filter(buffer => !!buffer.divisor);\n        const instanceCount = instancedBuffers.length\n            ? instancedBuffers\n                .map(b => b.count * b.divisor)\n                .reduce((min, curr) => Math.min(min, curr))\n            : 0;\n        // Create VAO\n        return new VertexArray(vao, !!elems, elems ? elems.count : attribDescriptors[0].count, instanceCount);\n    }\n}\n// TODO: this could use some further refactoring. Currently its just former\n// public API made private.\nclass AttributeDescriptor {\n    static create(gl, props) {\n        if (Array.isArray(props)) {\n            if (array.is2DArray(props)) {\n                const r = array.ravel(props);\n                return new AttributeDescriptor(\"pointer\", VertexBuffer.fromFloat32Array(gl, r.data), r.shape[0], r.shape[1], false, 0);\n            }\n            return new AttributeDescriptor(\"pointer\", VertexBuffer.fromFloat32Array(gl, props), props.length, 1, false, 0);\n        }\n        switch (props.type) {\n            case \"pointer\": return new AttributeDescriptor(props.type, props.value instanceof VertexBuffer\n                ? props.value\n                // Note: typescript is not smart enough to infer what we know\n                : VertexBuffer.create(gl, props.value), props.count, props.size, props.normalized || false, props.divisor || 0);\n            case \"ipointer\": return new AttributeDescriptor(props.type, props.value instanceof VertexBuffer\n                ? props.value\n                // Note: typescript is not smart enough to infer what we know\n                : VertexBuffer.create(gl, props.value), props.count, props.size, false, props.divisor || 0);\n            default: return assert.never(props);\n        }\n    }\n    constructor(type, buffer, count, size, normalized, divisor) {\n        this.type = type;\n        this.buffer = buffer;\n        this.count = count;\n        this.size = size;\n        this.normalized = normalized;\n        this.divisor = divisor;\n    }\n}\n//# sourceMappingURL=vertex-array.js.map","import * as assert from \"./assert\";\nimport { Device } from \"./device\";\nexport class Framebuffer {\n    constructor(glFramebuffer, glColorAttachments, width, height) {\n        this.glFramebuffer = glFramebuffer;\n        this.glColorAttachments = glColorAttachments;\n        this.width = width;\n        this.height = height;\n    }\n    static create(dev, { width, height, color, depth, stencil }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const fbo = gl.createFramebuffer();\n        if (!fbo) {\n            throw new Error(\"Could not create framebuffer\");\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n        const colorBuffers = Array.isArray(color) ? color : [color];\n        colorBuffers.forEach((buffer, i) => {\n            assert.equal(width, buffer.width);\n            assert.equal(height, buffer.height);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.TEXTURE_2D, buffer.glTexture, 0);\n        });\n        if (depth) {\n            assert.equal(width, depth.width);\n            assert.equal(height, depth.height);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depth, 0);\n        }\n        if (stencil) {\n            assert.equal(width, stencil.width);\n            assert.equal(height, stencil.height);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.STENCIL_ATTACHMENT, gl.TEXTURE_2D, stencil, 0);\n        }\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        if (status !== gl.FRAMEBUFFER_COMPLETE) {\n            gl.deleteFramebuffer(fbo);\n            throw new Error(\"Framebuffer not complete\");\n        }\n        return new Framebuffer(fbo, colorBuffers.map((_, i) => gl.COLOR_ATTACHMENT0 + i), width, height);\n    }\n}\n//# sourceMappingURL=framebuffer.js.map"],"names":["never","p","msg","Error","fmt","createProgram","gl","vertex","fragment","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","prettySource","split","map","l","i","join","createVertexArray","buffers","elementBuffer","vao","bindVertexArray","forEach","buffer","bufferType","size","location","normalized","divisor","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","vertexAttribIPointer","assert.never","vertexAttribDivisor","ELEMENT_ARRAY_BUFFER","is2DArray","array","length","Array","isArray","ravel","unraveled","outerShape","innerShape","raveled","inner","elem","j","data","shape","mapGlVertexBufferType","BYTE","SHORT","INT","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","locate","glProgram","attributes","elements","Object","entries","reduce","accum","identifier","definition","INT_PATTERN","test","getAttribLocation","UNKNOWN_ATTRIB_LOCATION","access","props","index","value","mapGlPrimitive","primitive","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","POINTS","LINES","LINE_STRIP","LINE_LOOP","mapGlDepthOrStencilFunc","func","ALWAYS","NEVER","EQUAL","NOTEQUAL","LESS","LEQUAL","GREATER","GEQUAL","mapGlStencilOp","op","KEEP","ZERO","REPLACE","INCR","INCR_WRAP","DECR","DECR_WRAP","INVERT","mapGlBlendFunc","ONE","SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","DST_COLOR","DST_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_COLOR","ONE_MINUS_CONSTANT_ALPHA","mapGlBlendEquation","equation","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","parseDepth","depth","DepthDescriptor","mask","range","parseStencil","stencil","StencilDescriptor","front","back","ref","fail","zfail","zpass","parseBlend","blend","BlendDescriptor","src","rgb","alpha","dst","color","mapGlTextureWrap","wrap","CLAMP_TO_EDGE","REPEAT","MIRRORED_REPEAT","mapGlTextureFilter","filter","NEAREST","LINEAR","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","mapGlTextureInternalFormat","internalFormat","R8","R8_SNORM","R8UI","R8I","R16UI","R16I","R32UI","R32I","R32F","RG8","RG8_SNORM","RG8UI","RG8I","RG16UI","RG16I","RG32UI","RG32I","RG16F","RG32F","RGB8","RGB8_SNORM","RGB8UI","RGB8I","RGB16UI","RGB16I","RGB32UI","RGB32I","RGB16F","RGB32F","RGBA8","RGBA8_SNORM","RGBA8UI","RGBA8I","RGBA16UI","RGBA16I","RGBA32UI","RGBA32I","RGBA16F","RGBA32F","mapGlTextureFormat","format","RED","RG","RGB","RGBA","RED_INTEGER","RG_INTEGER","RGB_INTEGER","RGBA_INTEGER","mapGlTextureType","Device","[object Object]","canvas","explicitPixelRatio","explicitViewport","this","element","document","body","options","HTMLCanvasElement","fromCanvas","createElement","appendChild","antialias","preserveDrawingBuffer","context","getContext","fromContext","pixelRatio","viewport","extensions","ext","getExtension","dev","update","bufferWidth","drawingBufferWidth","bufferHeight","drawingBufferHeight","canvasWidth","width","canvasHeight","height","canvasCSSWidth","clientWidth","canvasCSSHeight","clientHeight","window","devicePixelRatio","dpr","r","g","b","a","fbo","bindFramebuffer","FRAMEBUFFER","glFramebuffer","clearColor","clear","COLOR_BUFFER_BIT","clearDepth","DEPTH_BUFFER_BIT","clearStencil","STENCIL_BUFFER_BIT","VertexBuffer","glType","glBuffer","init","fromInt8Array","fromInt16Array","fromInt32Array","fromUint8Array","fromUint16Array","fromUint32Array","fromFloat32Array","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Float32Array","isContextLost","createBuffer","bufferData","STATIC_DRAW","ElementBuffer","fromArray","array.is2DArray","array.ravel","arr","count","VertexArray","glVertexArrayObject","hasElements","instanceCount","attribDescriptors","attribLocations","locationStr","parseInt","push","AttributeDescriptor","create","elems","glutil.createVertexArray","attrib","undefined","instancedBuffers","min","curr","Math","Framebuffer","glColorAttachments","createFramebuffer","colorBuffers","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_2D","glTexture","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","deleteFramebuffer","_","Command","glPrimitive","uniformDescrs","vertexArrayDescr","framebufferDescr","depthDescr","stencilDescr","blendDescr","vert","frag","uniforms","framebuffer","vs","glutil.createShader","VERTEX_SHADER","fs","FRAGMENT_SHADER","prog","glutil.createProgram","ident","uniform","loc","getUniformLocation","UniformDescriptor","useProgram","beginDepth","beginStencil","beginBlend","executeInner","endBlend","endStencil","endDepth","vertexArrayProps","drawBuffers","updateUniforms","drawElements","drawArrays","enable","DEPTH_TEST","depthFunc","depthMask","depthRange","rangeStart","rangeEnd","disable","fFunc","bFunc","fFuncRef","bfuncRef","fFuncMask","bFuncMask","fMask","bMask","fOpFail","bOpFail","fOpZFail","bOpZFail","fOpZPass","bOpZPass","STENCIL_TEST","stencilFuncSeparate","FRONT","BACK","stencilMaskSeparate","stencilOpSeparate","BLEND","blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","blendEquationSeparate","equationRGB","equationAlpha","blendColor","instCount","drawArraysInstanced","drawElementsInstanced","textureUnitOffset","def","uniform1f","uniform1fv","uniform1i","uniform1iv","uniform1ui","uniform1uiv","x","y","uniform2f","uniform2fv","uniform2i","uniform2iv","uniform2ui","uniform2uiv","z","uniform3f","uniform3fv","uniform3i","uniform3iv","uniform3ui","uniform3uiv","w","uniform4f","uniform4fv","uniform4i","uniform4iv","uniform4ui","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","texture","currentTexture","activeTexture","TEXTURE0","bindTexture","Texture","image","fromRGBA8","fromArrayBufferView","mag","wrapS","wrapT","mipmap","minFilter","magFilter","glInternalFormat","glFormat","glWrapS","glWrapT","glMinFilter","glMagFilter","createTexture","texStorage2D","texSubImage2D","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","generateMipmap"],"mappings":"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"}