{"version":3,"file":"glutenfree.es.min.js","sources":["../build/assert.js","../build/glutil.js","../build/array.js","../build/vertex-buffer.js","../build/element-buffer.js","../build/command.js","../build/texture.js","../build/device.js","../build/vertex-array.js","../build/framebuffer.js"],"sourcesContent":["/**\n * This file is an exercise in proprocessor voodoo.\n *\n * \"process.env.NODE_ENV\", gets suplied by the string replacer during a\n * custom build or our production build. If \"production\", constant evaluation\n * will eliminate the if blocks, making the functions no-ops, in turn eligible\n * for elimination from their callsites.\n *\n * While cool, this disables us to return values from the asserts, which would\n * make for a slightly nice programming model: const checkedVal = truthy(val)\n */\n// This does not get replaced and serves as a default velue. If all its uses\n// are eliminated, the value itself is pruned as well.\nconst process = {\n    env: {\n        NODE_ENV: \"development\",\n    },\n};\nexport function paramNonNull(p, name) {\n    nonNull(p, fmt(fmt(`Expected parameter ${name}, but got ${p}`)));\n}\nexport function paramNonEmpty(p, name) {\n    nonEmpty(p, fmt(`Expected parameter ${name} to be nonempty`));\n}\nexport function paramEqual(p, val, name) {\n    equal(p, val, fmt(`Expected parameter ${name} to be equal to ${val}, but got ${p}`));\n}\nexport function paramRange(p, start, end, name) {\n    range(p, start, end, fmt(`\\\nExpected parameter ${name} to be in range [${start}, ${end}], but got ${p}`));\n}\nexport function nonNull(p, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof p === \"undefined\" || typeof p === \"object\" && !p) {\n            throw new Error(msg || fmt(\"Object null\"));\n        }\n    }\n}\nexport function nonEmpty(p, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!p || !p.length) {\n            throw new Error(msg || fmt(\"Array empty\"));\n        }\n    }\n}\nexport function equal(p, val, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (p !== val) {\n            throw new Error(msg || fmt(`Not equal: ${p} ${val}`));\n        }\n    }\n}\nexport function range(p, start, end, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (p < start || p > end) {\n            throw new Error(msg || fmt(`Value ${p} not in [${start}, ${end}]`));\n        }\n    }\n}\nexport function never(p, msg) {\n    // \"never\" can not be eliminated, as its \"return value\" is actually captured\n    // at the callsites. It should never be invoked, though.\n    throw new Error(msg || fmt(`Unexpected object: ${p}`));\n}\nfunction fmt(msg) {\n    if (msg) {\n        return `Assertion Failed: ${msg}`;\n    }\n    return `Assertion Failed`;\n}\n//# sourceMappingURL=assert.js.map","/*\n███████╗██╗  ██╗ █████╗ ██████╗ ███████╗██████╗\n██╔════╝██║  ██║██╔══██╗██╔══██╗██╔════╝██╔══██╗\n███████╗███████║███████║██║  ██║█████╗  ██████╔╝\n╚════██║██╔══██║██╔══██║██║  ██║██╔══╝  ██╔══██╗\n███████║██║  ██║██║  ██║██████╔╝███████╗██║  ██║\n╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝ ╚══════╝╚═╝  ╚═╝\n*/\nexport function createProgram(gl, vertex, fragment) {\n    const program = gl.createProgram();\n    if (!program) {\n        throw new Error(\"Could not create Program\");\n    }\n    gl.attachShader(program, vertex);\n    gl.attachShader(program, fragment);\n    gl.linkProgram(program);\n    if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        return program;\n    }\n    const msg = gl.getProgramInfoLog(program);\n    gl.deleteProgram(program);\n    throw new Error(`Could not link shader program: ${msg}`);\n}\nexport function createShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    if (!shader) {\n        throw new Error(\"Could not create Shader\");\n    }\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        return shader;\n    }\n    const msg = gl.getShaderInfoLog(shader);\n    gl.deleteShader(shader);\n    const prettySource = source\n        .split(\"\\n\")\n        .map((l, i) => `${i + 1}: ${l}`)\n        .join(\"\\n\");\n    throw new Error(`Could not compile shader:\\n${msg}\\n${prettySource}`);\n}\n//# sourceMappingURL=glutil.js.map","/**\n * Chacks whether array is at least 2d, mostly useful because of return type\n * predicate.\n */\nexport function isArray2(array) {\n    return !!array.length && Array.isArray(array[0]);\n}\nexport function shape2(array) {\n    const outer = array.length;\n    const inner = outer ? array[0].length : 0;\n    return [outer, inner];\n}\nexport function ravel2(unraveled, shape) {\n    const [outer, inner] = shape;\n    const raveled = new Array(inner * outer);\n    unraveled.forEach((arr, i) => {\n        arr.forEach((elem, j) => {\n            raveled[inner * i + j] = elem;\n        });\n    });\n    return raveled;\n}\n//# sourceMappingURL=array.js.map","import * as assert from \"./assert\";\nimport { Device } from \"./device\";\nexport class VertexBuffer {\n    constructor(gl, type, data) {\n        this.gl = gl;\n        this.type = type;\n        this.data = data;\n        this.glType = mapGlVertexBufferType(gl, type);\n        this.glBuffer = null;\n        this.init();\n    }\n    static create(dev, props) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        switch (props.type) {\n            case \"byte\" /* BYTE */:\n                return VertexBuffer.fromInt8Array(gl, props.data);\n            case \"short\" /* SHORT */:\n                return VertexBuffer.fromInt16Array(gl, props.data);\n            case \"int\" /* INT */:\n                return VertexBuffer.fromInt32Array(gl, props.data);\n            case \"unsigned byte\" /* UNSIGNED_BYTE */:\n                return VertexBuffer.fromUint8Array(gl, props.data);\n            case \"unsigned short\" /* UNSIGNED_SHORT */:\n                return VertexBuffer.fromUint16Array(gl, props.data);\n            case \"unsigned int\" /* UNSIGNED_INT */:\n                return VertexBuffer.fromUint32Array(gl, props.data);\n            case \"float\" /* FLOAT */:\n                return VertexBuffer.fromFloat32Array(gl, props.data);\n            default: return assert.never(props);\n        }\n    }\n    static fromInt8Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"byte\" /* BYTE */, data instanceof Int8Array ? data : new Int8Array(data));\n    }\n    static fromInt16Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"short\" /* SHORT */, data instanceof Int16Array ? data : new Int16Array(data));\n    }\n    static fromInt32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"int\" /* INT */, data instanceof Int32Array ? data : new Int32Array(data));\n    }\n    static fromUint8Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"unsigned byte\" /* UNSIGNED_BYTE */, \n        // Note: we also have to convert Uint8ClampedArray to Uint8Array\n        // because of webgl bug\n        // https://github.com/KhronosGroup/WebGL/issues/1533\n        data instanceof Uint8Array ? data : new Uint8Array(data));\n    }\n    static fromUint16Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"unsigned short\" /* UNSIGNED_SHORT */, data instanceof Uint16Array ? data : new Uint16Array(data));\n    }\n    static fromUint32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"unsigned int\" /* UNSIGNED_INT */, data instanceof Uint32Array ? data : new Uint32Array(data));\n    }\n    static fromFloat32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"float\" /* FLOAT */, data instanceof Float32Array ? data : new Float32Array(data));\n    }\n    get count() {\n        return this.data.length;\n    }\n    init() {\n        const { gl, data } = this;\n        const buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        this.glBuffer = buffer;\n    }\n    restore() {\n        const { gl, glBuffer } = this;\n        if (!gl.isBuffer(glBuffer)) {\n            this.init();\n        }\n    }\n}\nfunction mapGlVertexBufferType(gl, type) {\n    switch (type) {\n        case \"byte\" /* BYTE */: return gl.BYTE;\n        case \"short\" /* SHORT */: return gl.SHORT;\n        case \"int\" /* INT */: return gl.INT;\n        case \"unsigned byte\" /* UNSIGNED_BYTE */: return gl.UNSIGNED_BYTE;\n        case \"unsigned short\" /* UNSIGNED_SHORT */: return gl.UNSIGNED_SHORT;\n        case \"unsigned int\" /* UNSIGNED_INT */: return gl.UNSIGNED_INT;\n        case \"float\" /* FLOAT */: return gl.FLOAT;\n        default: return assert.never(type, `Unexpexted buffer type: ${type}`);\n    }\n}\n//# sourceMappingURL=vertex-buffer.js.map","import * as assert from \"./assert\";\nimport * as array from \"./array\";\nimport { Device } from \"./device\";\nexport class ElementBuffer {\n    static create(dev, props) {\n        return Array.isArray(props)\n            ? ElementBuffer.fromArray(dev, props)\n            : ElementBuffer.fromUint32Array(dev, props.data, props.primitive);\n    }\n    static fromArray(dev, data) {\n        if (array.isArray2(data)) {\n            const s = array.shape2(data);\n            assert.paramRange(s[1], 2, 3, \"element tuple length\");\n            const r = array.ravel2(data, s);\n            const prim = s[1] === 3 ? \"triangles\" /* TRIANGLES */ : \"lines\" /* LINES */;\n            return ElementBuffer.fromUint32Array(dev, r, prim);\n        }\n        return ElementBuffer.fromUint32Array(dev, data, \"points\" /* POINTS */);\n    }\n    static fromUint32Array(dev, data, primitive) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const arr = Array.isArray(data) ? new Uint32Array(data) : data;\n        return new ElementBuffer(gl, arr, primitive);\n    }\n    constructor(gl, data, primitive) {\n        this.gl = gl;\n        this.data = data;\n        this.primitive = primitive;\n        this.glPrimitive = mapGlPrimitive(gl, primitive);\n        this.glBuffer = null;\n        this.init();\n    }\n    get count() {\n        return this.data.length;\n    }\n    init() {\n        const { gl, data } = this;\n        const buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        this.glBuffer = buffer;\n    }\n    restore() {\n        const { gl, glBuffer } = this;\n        if (!gl.isBuffer(glBuffer)) {\n            this.init();\n        }\n    }\n}\nexport function mapGlPrimitive(gl, primitive) {\n    switch (primitive) {\n        case \"triangles\" /* TRIANGLES */: return gl.TRIANGLES;\n        case \"triangle-strip\" /* TRIANGLE_STRIP */: return gl.TRIANGLE_STRIP;\n        case \"triangle-fan\" /* TRIANGLE_FAN */: return gl.TRIANGLE_FAN;\n        case \"points\" /* POINTS */: return gl.POINTS;\n        case \"lines\" /* LINES */: return gl.LINES;\n        case \"line-strip\" /* LINE_STRIP */: return gl.LINE_STRIP;\n        case \"line-loop\" /* LINE_LOOP */: return gl.LINE_LOOP;\n        default: return assert.never(primitive, `Unknown primitive: ${primitive}`);\n    }\n}\n//# sourceMappingURL=element-buffer.js.map","import * as assert from \"./assert\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nimport { VertexArray } from \"./vertex-array\";\nimport { mapGlPrimitive } from \"./element-buffer\";\nimport { Framebuffer } from \"./framebuffer\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nconst UNKNOWN_ATTRIB_LOCATION = -1;\nexport class Command {\n    constructor(gl, glProgram, uniformDescrs, count, offset, primitive, vertexArrayAcc, framebufferAcc, depthDescr, stencilDescr, blendDescr) {\n        this.gl = gl;\n        this.glProgram = glProgram;\n        this.glPrimitive = primitive && mapGlPrimitive(gl, primitive);\n        this.uniformDescrs = uniformDescrs;\n        this.count = count;\n        this.offset = offset;\n        this.vertexArrayAcc = vertexArrayAcc;\n        this.framebufferAcc = framebufferAcc;\n        this.depthDescr = depthDescr;\n        this.stencilDescr = stencilDescr;\n        this.blendDescr = blendDescr;\n        this.currVao = null;\n        this.currFbo = null;\n    }\n    static create(dev, { vert, frag, uniforms = {}, data, framebuffer, count = 0, offset = 0, primitive, depth, stencil, blend, }) {\n        assert.paramNonNull(vert, \"vert\");\n        assert.paramNonNull(frag, \"frag\");\n        assert.paramNonNull(data, \"data\");\n        if (depth) {\n            assert.paramNonNull(depth.func, \"depth.func\");\n        }\n        if (blend) {\n            assert.paramNonNull(blend.func, \"blend.func\");\n            assert.paramNonNull(blend.func.src, \"blend.func.src\");\n            assert.paramNonNull(blend.func.dst, \"blend.func.dst\");\n            if (typeof blend.func.src === \"object\") {\n                assert.paramNonNull(blend.func.src.rgb, \"blend.func.src.rgb\");\n                assert.paramNonNull(blend.func.src.alpha, \"blend.func.src.alpha\");\n            }\n            if (typeof blend.func.dst === \"object\") {\n                assert.paramNonNull(blend.func.dst.rgb, \"blend.func.dst.rgb\");\n                assert.paramNonNull(blend.func.dst.alpha, \"blend.func.dst.alpha\");\n            }\n        }\n        if (stencil) {\n            assert.paramNonNull(stencil.func, \"stencil.func\");\n            // TODO: complete stencil validation... validation framework?\n        }\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const vs = glutil.createShader(gl, gl.VERTEX_SHADER, vert);\n        const fs = glutil.createShader(gl, gl.FRAGMENT_SHADER, frag);\n        const prog = glutil.createProgram(gl, vs, fs);\n        gl.deleteShader(vs);\n        gl.deleteShader(fs);\n        const uniformDescrs = Object.entries(uniforms)\n            .map(([ident, uniform]) => {\n            const loc = gl.getUniformLocation(prog, ident);\n            if (!loc) {\n                throw new Error(`No location for uniform: ${ident}`);\n            }\n            return new UniformDescriptor(ident, loc, uniform);\n        });\n        const vertexArrayAcc = data\n            ? typeof data === \"function\" || data instanceof VertexArray\n                ? data\n                : VertexArray.create(dev, locate(gl, prog, data))\n            : undefined;\n        const framebufferAcc = framebuffer\n            ? typeof framebuffer === \"function\" || framebuffer instanceof Framebuffer\n                ? framebuffer\n                : Framebuffer.create(gl, framebuffer)\n            : undefined;\n        const depthDescr = parseDepth(gl, depth);\n        const stencilDescr = parseStencil(gl, stencil);\n        const blendDescr = parseBlend(gl, blend);\n        return new Command(gl, prog, uniformDescrs, count, offset, primitive, vertexArrayAcc, framebufferAcc, depthDescr, stencilDescr, blendDescr);\n    }\n    execute(props) {\n        const { gl, glProgram } = this;\n        /*\n        When batching (passing in an array of props), the price for\n        gl.useProgram, enabling depth/stencil tests and blending is paid only\n        once for all draw calls.\n        */\n        gl.useProgram(glProgram);\n        this.beginDepth();\n        this.beginStencil();\n        this.beginBlend();\n        if (Array.isArray(props)) {\n            props.forEach((p, i) => this.executeInner(p, i));\n        }\n        else {\n            this.executeInner(props, 0);\n        }\n        // FBOs and VAOs are bound without unbinding in the inner loop\n        this.unbindFbo();\n        this.unbindVao();\n        this.endBlend();\n        this.endStencil();\n        this.endDepth();\n        gl.useProgram(null);\n    }\n    locate(vertexArrayProps) {\n        return locate(this.gl, this.glProgram, vertexArrayProps);\n    }\n    executeInner(props, index) {\n        const { gl, glPrimitive, count, offset, vertexArrayAcc, framebufferAcc, } = this;\n        /*\n        Enabling multiple FBOs and VAOs per draw batch is a nice feature. We\n        cache currently bound FBO/VAO to prevent needless rebinding.\n        */\n        let bufferWidth = gl.drawingBufferWidth;\n        let bufferHeight = gl.drawingBufferHeight;\n        const fbo = framebufferAcc && access(props, index, framebufferAcc);\n        if (fbo) {\n            this.bindFbo(fbo);\n            bufferWidth = fbo.width;\n            bufferHeight = fbo.height;\n        }\n        gl.viewport(0, 0, bufferWidth, bufferHeight);\n        this.updateUniforms(props, index);\n        const vao = vertexArrayAcc && access(props, index, vertexArrayAcc);\n        if (vao) {\n            this.bindVao(vao);\n            const prim = typeof glPrimitive === \"undefined\"\n                ? typeof vao.glPrimitive === \"undefined\"\n                    ? gl.TRIANGLES\n                    : vao.glPrimitive\n                : glPrimitive;\n            const cnt = count ? Math.min(count, vao.count) : vao.count;\n            if (vao.hasElements) {\n                this.drawElements(prim, cnt, offset, vao.instanceCount);\n            }\n            else {\n                this.drawArrays(prim, cnt, offset, vao.instanceCount);\n            }\n        }\n        else {\n            this.drawArrays(typeof glPrimitive === \"undefined\" ? gl.TRIANGLES : glPrimitive, count, offset, 0);\n        }\n    }\n    bindVao(vao) {\n        if (vao !== this.currVao) {\n            this.currVao = vao;\n            this.gl.bindVertexArray(vao.glVertexArray);\n        }\n    }\n    unbindVao() {\n        this.gl.bindVertexArray(null);\n        this.currVao = null;\n    }\n    bindFbo(fbo) {\n        const gl = this.gl;\n        if (fbo !== this.currFbo) {\n            this.currFbo = fbo;\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n            gl.drawBuffers(fbo.glColorAttachments);\n        }\n    }\n    unbindFbo() {\n        const gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        this.currFbo = null;\n    }\n    beginDepth() {\n        const { gl, depthDescr } = this;\n        if (depthDescr) {\n            gl.enable(gl.DEPTH_TEST);\n            gl.depthFunc(depthDescr.func);\n            gl.depthMask(depthDescr.mask);\n            gl.depthRange(depthDescr.rangeStart, depthDescr.rangeEnd);\n        }\n    }\n    endDepth() {\n        const { gl, depthDescr } = this;\n        if (depthDescr) {\n            gl.disable(gl.DEPTH_TEST);\n        }\n    }\n    beginStencil() {\n        const { gl, stencilDescr } = this;\n        if (stencilDescr) {\n            const { fFunc, bFunc, fFuncRef, bfuncRef, fFuncMask, bFuncMask, fMask, bMask, fOpFail, bOpFail, fOpZFail, bOpZFail, fOpZPass, bOpZPass, } = stencilDescr;\n            gl.enable(gl.STENCIL_TEST);\n            gl.stencilFuncSeparate(gl.FRONT, fFunc, fFuncRef, fFuncMask);\n            gl.stencilFuncSeparate(gl.BACK, bFunc, bfuncRef, bFuncMask);\n            gl.stencilMaskSeparate(gl.FRONT, fMask);\n            gl.stencilMaskSeparate(gl.BACK, bMask);\n            gl.stencilOpSeparate(gl.FRONT, fOpFail, fOpZFail, fOpZPass);\n            gl.stencilOpSeparate(gl.BACK, bOpFail, bOpZFail, bOpZPass);\n        }\n    }\n    endStencil() {\n        const { gl, stencilDescr } = this;\n        if (stencilDescr) {\n            gl.disable(gl.STENCIL_TEST);\n        }\n    }\n    beginBlend() {\n        const { gl, blendDescr } = this;\n        if (blendDescr) {\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(blendDescr.srcRGB, blendDescr.dstRGB, blendDescr.srcAlpha, blendDescr.dstAlpha);\n            gl.blendEquationSeparate(blendDescr.equationRGB, blendDescr.equationAlpha);\n            if (blendDescr.color) {\n                const [r, g, b, a] = blendDescr.color;\n                gl.blendColor(r, g, b, a);\n            }\n        }\n    }\n    endBlend() {\n        const { gl, blendDescr } = this;\n        if (blendDescr) {\n            gl.disable(gl.BLEND);\n        }\n    }\n    drawArrays(primitive, count, offset, instCount) {\n        if (instCount) {\n            this.gl.drawArraysInstanced(primitive, offset, count, instCount);\n        }\n        else {\n            this.gl.drawArrays(primitive, offset, count);\n        }\n    }\n    drawElements(primitive, count, offset, instCount) {\n        const gl = this.gl;\n        if (instCount) {\n            gl.drawElementsInstanced(primitive, count, gl.UNSIGNED_INT, // We only support u32 indices\n            offset, instCount);\n        }\n        else {\n            gl.drawElements(primitive, count, gl.UNSIGNED_INT, // We only support u32 indices\n            offset);\n        }\n    }\n    updateUniforms(props, index) {\n        const gl = this.gl;\n        let textureUnitOffset = 0;\n        this.uniformDescrs.forEach(({ identifier: ident, location: loc, definition: def, }) => {\n            switch (def.type) {\n                case \"1f\":\n                    gl.uniform1f(loc, access(props, index, def.value));\n                    break;\n                case \"1fv\":\n                    gl.uniform1fv(loc, access(props, index, def.value));\n                    break;\n                case \"1i\":\n                    gl.uniform1i(loc, access(props, index, def.value));\n                    break;\n                case \"1iv\":\n                    gl.uniform1iv(loc, access(props, index, def.value));\n                    break;\n                case \"1ui\":\n                    gl.uniform1ui(loc, access(props, index, def.value));\n                    break;\n                case \"1uiv\":\n                    gl.uniform1uiv(loc, access(props, index, def.value));\n                    break;\n                case \"2f\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2f(loc, x, y);\n                    break;\n                }\n                case \"2fv\":\n                    gl.uniform2fv(loc, access(props, index, def.value));\n                    break;\n                case \"2i\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2i(loc, x, y);\n                    break;\n                }\n                case \"2iv\":\n                    gl.uniform2iv(loc, access(props, index, def.value));\n                    break;\n                case \"2ui\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2ui(loc, x, y);\n                    break;\n                }\n                case \"2uiv\":\n                    gl.uniform2uiv(loc, access(props, index, def.value));\n                    break;\n                case \"3f\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3f(loc, x, y, z);\n                    break;\n                }\n                case \"3fv\":\n                    gl.uniform3fv(loc, access(props, index, def.value));\n                    break;\n                case \"3i\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3i(loc, x, y, z);\n                    break;\n                }\n                case \"3iv\":\n                    gl.uniform3iv(loc, access(props, index, def.value));\n                    break;\n                case \"3ui\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3ui(loc, x, y, z);\n                    break;\n                }\n                case \"3uiv\":\n                    gl.uniform3uiv(loc, access(props, index, def.value));\n                    break;\n                case \"4f\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4f(loc, x, y, z, w);\n                    break;\n                }\n                case \"4fv\":\n                    gl.uniform4fv(loc, access(props, index, def.value));\n                    break;\n                case \"4i\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4i(loc, x, y, z, w);\n                    break;\n                }\n                case \"4iv\":\n                    gl.uniform4iv(loc, access(props, index, def.value));\n                    break;\n                case \"4ui\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4ui(loc, x, y, z, w);\n                    break;\n                }\n                case \"4uiv\":\n                    gl.uniform4uiv(loc, access(props, index, def.value));\n                    break;\n                case \"matrix2fv\":\n                    gl.uniformMatrix2fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix3fv\":\n                    gl.uniformMatrix3fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix4fv\":\n                    gl.uniformMatrix4fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"texture\":\n                    // TODO: is this the best way? (is it fast? can we cache?)\n                    const texture = access(props, index, def.value);\n                    const currentTexture = textureUnitOffset++;\n                    gl.activeTexture(gl.TEXTURE0 + currentTexture);\n                    gl.bindTexture(gl.TEXTURE_2D, texture.glTexture);\n                    gl.uniform1i(loc, currentTexture);\n                    break;\n                default:\n                    assert.never(def, `Unknown uniform type: (${ident})`);\n                    break;\n            }\n        });\n    }\n}\nfunction locate(gl, glProgram, { attributes, elements }) {\n    const locatedAttributes = Object.entries(attributes)\n        .reduce((accum, [identifier, definition]) => {\n        if (INT_PATTERN.test(identifier)) {\n            accum[identifier] = definition;\n        }\n        else {\n            const location = gl.getAttribLocation(glProgram, identifier);\n            if (location === UNKNOWN_ATTRIB_LOCATION) {\n                throw new Error(`No location for attrib: ${identifier}`);\n            }\n            accum[location] = definition;\n        }\n        return accum;\n    }, {});\n    return { attributes: locatedAttributes, elements };\n}\nfunction access(props, index, value) {\n    return typeof value === \"function\" ? value(props, index) : value;\n}\nclass DepthDescriptor {\n    constructor(func, mask, rangeStart, rangeEnd) {\n        this.func = func;\n        this.mask = mask;\n        this.rangeStart = rangeStart;\n        this.rangeEnd = rangeEnd;\n    }\n}\nclass StencilDescriptor {\n    constructor(fFunc, bFunc, fFuncRef, bfuncRef, fFuncMask, bFuncMask, fMask, bMask, fOpFail, bOpFail, fOpZFail, bOpZFail, fOpZPass, bOpZPass) {\n        this.fFunc = fFunc;\n        this.bFunc = bFunc;\n        this.fFuncRef = fFuncRef;\n        this.bfuncRef = bfuncRef;\n        this.fFuncMask = fFuncMask;\n        this.bFuncMask = bFuncMask;\n        this.fMask = fMask;\n        this.bMask = bMask;\n        this.fOpFail = fOpFail;\n        this.bOpFail = bOpFail;\n        this.fOpZFail = fOpZFail;\n        this.bOpZFail = bOpZFail;\n        this.fOpZPass = fOpZPass;\n        this.bOpZPass = bOpZPass;\n    }\n}\nclass BlendDescriptor {\n    constructor(srcRGB, srcAlpha, dstRGB, dstAlpha, equationRGB, equationAlpha, color) {\n        this.srcRGB = srcRGB;\n        this.srcAlpha = srcAlpha;\n        this.dstRGB = dstRGB;\n        this.dstAlpha = dstAlpha;\n        this.equationRGB = equationRGB;\n        this.equationAlpha = equationAlpha;\n        this.color = color;\n    }\n}\nclass UniformDescriptor {\n    constructor(identifier, location, definition) {\n        this.identifier = identifier;\n        this.location = location;\n        this.definition = definition;\n    }\n}\nfunction mapGlDepthOrStencilFunc(gl, func) {\n    switch (func) {\n        case \"always\" /* ALWAYS */: return gl.ALWAYS;\n        case \"never\" /* NEVER */: return gl.NEVER;\n        case \"equal\" /* EQUAL */: return gl.EQUAL;\n        case \"notequal\" /* NOTEQUAL */: return gl.NOTEQUAL;\n        case \"less\" /* LESS */: return gl.LESS;\n        case \"lequal\" /* LEQUAL */: return gl.LEQUAL;\n        case \"greater\" /* GREATER */: return gl.GREATER;\n        case \"gequal\" /* GEQUAL */: return gl.GEQUAL;\n        default: return assert.never(func, `Unknown depth or stencil function: ${func}`);\n    }\n}\nfunction mapGlStencilOp(gl, op) {\n    switch (op) {\n        case \"keep\" /* KEEP */: return gl.KEEP;\n        case \"zero\" /* ZERO */: return gl.ZERO;\n        case \"replace\" /* REPLACE */: return gl.REPLACE;\n        case \"incr\" /* INCR */: return gl.INCR;\n        case \"incr-wrap\" /* INCR_WRAP */: return gl.INCR_WRAP;\n        case \"decr\" /* DECR */: return gl.DECR;\n        case \"decr-wrap\" /* DECR_WRAP */: return gl.DECR_WRAP;\n        case \"invert\" /* INVERT */: return gl.INVERT;\n        default: return assert.never(op, `Unknown stencil op: ${op}`);\n    }\n}\nfunction mapGlBlendFunc(gl, func) {\n    switch (func) {\n        case \"zero\" /* ZERO */: return gl.ZERO;\n        case \"one\" /* ONE */: return gl.ONE;\n        case \"src-color\" /* SRC_COLOR */: return gl.SRC_COLOR;\n        case \"src-alpha\" /* SRC_ALPHA */: return gl.SRC_ALPHA;\n        case \"one-minus-src-color\" /* ONE_MINUS_SRC_COLOR */: return gl.ONE_MINUS_SRC_COLOR;\n        case \"one-minus-src-alpha\" /* ONE_MINUS_SRC_ALPHA */: return gl.ONE_MINUS_SRC_ALPHA;\n        case \"dst-color\" /* DST_COLOR */: return gl.DST_COLOR;\n        case \"dst-alpha\" /* DST_ALPHA */: return gl.DST_ALPHA;\n        case \"one-minus-dst-color\" /* ONE_MINUS_DST_COLOR */: return gl.ONE_MINUS_DST_COLOR;\n        case \"one-minus-dst-alpha\" /* ONE_MINUS_DST_ALPHA */: return gl.ONE_MINUS_DST_ALPHA;\n        case \"constant-color\" /* CONSTANT_COLOR */: return gl.CONSTANT_COLOR;\n        case \"constant-alpha\" /* CONSTANT_ALPHA */: return gl.CONSTANT_ALPHA;\n        case \"one-minus-constant-color\" /* ONE_MINUS_CONSTANT_COLOR */:\n            return gl.ONE_MINUS_CONSTANT_COLOR;\n        case \"one-minus-constant-alpha\" /* ONE_MINUS_CONSTANT_ALPHA */:\n            return gl.ONE_MINUS_CONSTANT_ALPHA;\n        default: return assert.never(func, `Unknown blend func: ${func}`);\n    }\n}\nfunction mapGlBlendEquation(gl, equation) {\n    switch (equation) {\n        case \"add\" /* ADD */: return gl.FUNC_ADD;\n        case \"subtract\" /* SUBTRACT */: return gl.FUNC_SUBTRACT;\n        case \"reverse-subtract\" /* REVERSE_SUBTRACT */: return gl.FUNC_REVERSE_SUBTRACT;\n        case \"min\" /* MIN */: return gl.MIN;\n        case \"max\" /* MAX */: return gl.MAX;\n        default: return assert.never(equation, `Unknown blend equation, ${equation}`);\n    }\n}\nfunction parseDepth(gl, depth) {\n    if (!depth) {\n        return undefined;\n    }\n    return new DepthDescriptor(mapGlDepthOrStencilFunc(gl, depth.func || \"less\" /* LESS */), typeof depth.mask === \"boolean\" ? depth.mask : true, depth.range ? depth.range[0] : 0, depth.range ? depth.range[1] : 1);\n}\nfunction parseStencil(gl, stencil) {\n    if (!stencil) {\n        return undefined;\n    }\n    return new StencilDescriptor(mapGlDepthOrStencilFunc(gl, typeof stencil.func.func === \"object\"\n        ? stencil.func.func.front\n        : stencil.func.func), mapGlDepthOrStencilFunc(gl, typeof stencil.func.func === \"object\"\n        ? stencil.func.func.back\n        : stencil.func.func), typeof stencil.func.ref !== \"undefined\"\n        ? typeof stencil.func.ref === \"object\"\n            ? stencil.func.ref.front\n            : stencil.func.ref\n        : 1, typeof stencil.func.ref !== \"undefined\"\n        ? typeof stencil.func.ref === \"object\"\n            ? stencil.func.ref.back\n            : stencil.func.ref\n        : 1, typeof stencil.func.mask !== \"undefined\"\n        ? typeof stencil.func.mask === \"object\"\n            ? stencil.func.mask.front\n            : stencil.func.mask\n        : 0xFF, typeof stencil.func.mask !== \"undefined\"\n        ? typeof stencil.func.mask === \"object\"\n            ? stencil.func.mask.back\n            : stencil.func.mask\n        : 0xFF, typeof stencil.mask !== \"undefined\"\n        ? typeof stencil.mask === \"object\"\n            ? stencil.mask.front\n            : stencil.mask\n        : 0xFF, typeof stencil.mask !== \"undefined\"\n        ? typeof stencil.mask === \"object\"\n            ? stencil.mask.back\n            : stencil.mask\n        : 0xFF, mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.fail === \"object\"\n            ? stencil.op.fail.front\n            : stencil.op.fail\n        : \"keep\" /* KEEP */), mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.fail === \"object\"\n            ? stencil.op.fail.back\n            : stencil.op.fail\n        : \"keep\" /* KEEP */), mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.zfail === \"object\"\n            ? stencil.op.zfail.front\n            : stencil.op.zfail\n        : \"keep\" /* KEEP */), mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.zfail === \"object\"\n            ? stencil.op.zfail.back\n            : stencil.op.zfail\n        : \"keep\" /* KEEP */), mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.zpass === \"object\"\n            ? stencil.op.zpass.front\n            : stencil.op.zpass\n        : \"keep\" /* KEEP */), mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.zpass === \"object\"\n            ? stencil.op.zpass.back\n            : stencil.op.zpass\n        : \"keep\" /* KEEP */));\n}\nfunction parseBlend(gl, blend) {\n    if (!blend) {\n        return undefined;\n    }\n    return new BlendDescriptor(mapGlBlendFunc(gl, typeof blend.func.src === \"object\"\n        ? blend.func.src.rgb\n        : blend.func.src), mapGlBlendFunc(gl, typeof blend.func.src === \"object\"\n        ? blend.func.src.alpha\n        : blend.func.src), mapGlBlendFunc(gl, typeof blend.func.dst === \"object\"\n        ? blend.func.dst.rgb\n        : blend.func.dst), mapGlBlendFunc(gl, typeof blend.func.dst === \"object\"\n        ? blend.func.dst.alpha\n        : blend.func.dst), mapGlBlendEquation(gl, blend.equation\n        ? typeof blend.equation === \"object\"\n            ? blend.equation.rgb\n            : blend.equation\n        : \"add\" /* ADD */), mapGlBlendEquation(gl, blend.equation\n        ? typeof blend.equation === \"object\"\n            ? blend.equation.alpha\n            : blend.equation\n        : \"add\" /* ADD */), blend.color);\n}\n//# sourceMappingURL=command.js.map","import * as assert from \"./assert\";\nimport { Device } from \"./device\";\nexport class Texture {\n    static fromImage(dev, image, options) {\n        return Texture.fromRGBA8(dev, image.data, image.width, image.height, options);\n    }\n    static fromRGBA8(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Uint8Array\n            ? data\n            // Note: we also have to convert Uint8ClampedArray to Uint8Array\n            // because of webgl bug\n            // https://github.com/KhronosGroup/WebGL/issues/1533\n            : new Uint8Array(data), width, height, \"RGBA8\" /* RGBA8 */, \"RGBA\" /* RGBA */, \"unsigned byte\" /* UNSIGNED_BYTE */, options);\n    }\n    static fromRG16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RG16F\" /* RG16F */, \"RG\" /* RG */, \"float\" /* FLOAT */, options);\n    }\n    static fromRGB16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGB16F\" /* RGB16F */, \"RGB\" /* RGB */, \"float\" /* FLOAT */, options);\n    }\n    static fromRGBA16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGBA16F\" /* RGBA16F */, \"RGBA\" /* RGBA */, \"float\" /* FLOAT */, options);\n    }\n    static fromRGB32F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGB32F\" /* RGB32F */, \"RGB\" /* RGB */, \"float\" /* FLOAT */, options);\n    }\n    static fromRGBA32F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGBA32F\" /* RGBA32F */, \"RGBA\" /* RGBA */, \"float\" /* FLOAT */, options);\n    }\n    static fromArrayBufferView(dev, data, width, height, internalFormat, format, type, { min = \"nearest\" /* NEAREST */, mag = \"nearest\" /* NEAREST */, wrapS = \"clamp-to-edge\" /* CLAMP_TO_EDGE */, wrapT = \"clamp-to-edge\" /* CLAMP_TO_EDGE */, mipmap = false, } = {}) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new Texture(gl, data, width, height, internalFormat, format, type, wrapS, wrapT, min, mag, mipmap);\n    }\n    constructor(gl, data, width, height, internalFormat, format, type, wrapS, wrapT, minFilter, magFilter, mipmap) {\n        this.gl = gl;\n        this.data = data;\n        this.width = width;\n        this.height = height;\n        this.internalFormat = internalFormat;\n        this.format = format;\n        this.type = type;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.mipmap = mipmap;\n        this.glInternalFormat = mapGlTextureInternalFormat(gl, internalFormat);\n        this.glFormat = mapGlTextureFormat(gl, format);\n        this.glType = mapGlTextureType(gl, type);\n        this.glWrapS = mapGlTextureWrap(gl, wrapS);\n        this.glWrapT = mapGlTextureWrap(gl, wrapT);\n        this.glMinFilter = mapGlTextureFilter(gl, minFilter);\n        this.glMagFilter = mapGlTextureFilter(gl, magFilter);\n        this.glTexture = null;\n        this.init();\n    }\n    init() {\n        const { gl, data, width, height, glInternalFormat, glFormat, glType, glWrapS, glWrapT, glMinFilter, glMagFilter, mipmap, } = this;\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texStorage2D(gl.TEXTURE_2D, 1, glInternalFormat, width, height);\n        if (data) {\n            gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, width, height, glFormat, glType, data);\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, glWrapS);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, glWrapT);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, glMinFilter);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, glMagFilter);\n        if (mipmap) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        this.glTexture = texture;\n    }\n    restore() {\n        const { gl, glTexture } = this;\n        if (!gl.isTexture(glTexture)) {\n            this.init();\n        }\n    }\n}\nfunction mapGlTextureWrap(gl, wrap) {\n    switch (wrap) {\n        case \"clamp-to-edge\" /* CLAMP_TO_EDGE */: return gl.CLAMP_TO_EDGE;\n        case \"repeat\" /* REPEAT */: return gl.REPEAT;\n        case \"mirrored-repeat\" /* MIRRORED_REPEAT */: return gl.MIRRORED_REPEAT;\n        default: return assert.never(wrap, `Unknown texture wrap: ${wrap}`);\n    }\n}\nfunction mapGlTextureFilter(gl, filter) {\n    switch (filter) {\n        case \"nearest\" /* NEAREST */: return gl.NEAREST;\n        case \"linear\" /* LINEAR */: return gl.LINEAR;\n        case \"nearest-mipmap-nearest\" /* NEAREST_MIPMAP_NEAREST */:\n            return gl.NEAREST_MIPMAP_NEAREST;\n        case \"linear-mipmap-nearest\" /* LINEAR_MIPMAP_NEAREST */:\n            return gl.LINEAR_MIPMAP_NEAREST;\n        case \"nearest-mipmap-linear\" /* NEAREST_MIPMAP_LINEAR */:\n            return gl.NEAREST_MIPMAP_LINEAR;\n        case \"linear-mipmap-linear\" /* LINEAR_MIPMAP_LINEAR */:\n            return gl.LINEAR_MIPMAP_LINEAR;\n        default: return assert.never(filter, `Unknown texture filter: ${filter}`);\n    }\n}\nfunction mapGlTextureInternalFormat(gl, internalFormat) {\n    switch (internalFormat) {\n        // R\n        case \"R8\" /* R8 */: return gl.R8;\n        case \"R8_SNORM\" /* R8_SNORM */: return gl.R8_SNORM;\n        case \"R8UI\" /* R8UI */: return gl.R8UI;\n        case \"R8I\" /* R8I */: return gl.R8I;\n        case \"R16UI\" /* R16UI */: return gl.R16UI;\n        case \"R16I\" /* R16I */: return gl.R16I;\n        case \"R32UI\" /* R32UI */: return gl.R32UI;\n        case \"R32I\" /* R32I */: return gl.R32I;\n        case \"R16F\" /* R16F */: return gl.R16I;\n        case \"R32F\" /* R32F */: return gl.R32F;\n        // RG\n        case \"RG8\" /* RG8 */: return gl.RG8;\n        case \"RG8_SNORM\" /* RG8_SNORM */: return gl.RG8_SNORM;\n        case \"RG8UI\" /* RG8UI */: return gl.RG8UI;\n        case \"RG8I\" /* RG8I */: return gl.RG8I;\n        case \"RG16UI\" /* RG16UI */: return gl.RG16UI;\n        case \"RG16I\" /* RG16I */: return gl.RG16I;\n        case \"RG32UI\" /* RG32UI */: return gl.RG32UI;\n        case \"RG32I\" /* RG32I */: return gl.RG32I;\n        case \"RG16F\" /* RG16F */: return gl.RG16F;\n        case \"RG32F\" /* RG32F */: return gl.RG32F;\n        // RGB\n        case \"RGB8\" /* RGB8 */: return gl.RGB8;\n        case \"RGB8_SNORM\" /* RGB8_SNORM */: return gl.RGB8_SNORM;\n        case \"RGB8UI\" /* RGB8UI */: return gl.RGB8UI;\n        case \"RGB8I\" /* RGB8I */: return gl.RGB8I;\n        case \"RGB16UI\" /* RGB16UI */: return gl.RGB16UI;\n        case \"RGB16I\" /* RGB16I */: return gl.RGB16I;\n        case \"RGB32UI\" /* RGB32UI */: return gl.RGB32UI;\n        case \"RGB32I\" /* RGB32I */: return gl.RGB32I;\n        case \"RGB16F\" /* RGB16F */: return gl.RGB16F;\n        case \"RGB32F\" /* RGB32F */: return gl.RGB32F;\n        // RGBA\n        case \"RGBA8\" /* RGBA8 */: return gl.RGBA8;\n        case \"RGBA8_SNORM\" /* RGBA8_SNORM */: return gl.RGBA8_SNORM;\n        case \"RGBA8UI\" /* RGBA8UI */: return gl.RGBA8UI;\n        case \"RGBA8I\" /* RGBA8I */: return gl.RGBA8I;\n        case \"RGBA16UI\" /* RGBA16UI */: return gl.RGBA16UI;\n        case \"RGBA16I\" /* RGBA16I */: return gl.RGBA16I;\n        case \"RGBA32UI\" /* RGBA32UI */: return gl.RGBA32UI;\n        case \"RGBA32I\" /* RGBA32I */: return gl.RGBA32I;\n        case \"RGBA16F\" /* RGBA16F */: return gl.RGBA16F;\n        case \"RGBA32F\" /* RGBA32F */: return gl.RGBA32F;\n        default: return assert.never(internalFormat, `Unknown texture internal format: ${internalFormat}`);\n    }\n}\nfunction mapGlTextureFormat(gl, format) {\n    switch (format) {\n        case \"RED\" /* RED */: return gl.RED;\n        case \"RG\" /* RG */: return gl.RG;\n        case \"RGB\" /* RGB */: return gl.RGB;\n        case \"RGBA\" /* RGBA */: return gl.RGBA;\n        case \"RED_INTEGER\" /* RED_INTEGER */: return gl.RED_INTEGER;\n        case \"RG_INTEGER\" /* RG_INTEGER */: return gl.RG_INTEGER;\n        case \"RGB_INTEGER\" /* RGB_INTEGER */: return gl.RGB_INTEGER;\n        case \"RGBA_INTEGER\" /* RGBA_INTEGER */: return gl.RGBA_INTEGER;\n        default: return assert.never(format, `Unknown texture format: ${format}`);\n    }\n}\nexport function mapGlTextureType(gl, type) {\n    switch (type) {\n        case \"byte\" /* BYTE */: return gl.BYTE;\n        case \"short\" /* SHORT */: return gl.SHORT;\n        case \"int\" /* INT */: return gl.INT;\n        case \"unsigned byte\" /* UNSIGNED_BYTE */: return gl.UNSIGNED_BYTE;\n        case \"unsigned short\" /* UNSIGNED_SHORT */: return gl.UNSIGNED_SHORT;\n        case \"unsigned int\" /* UNSIGNED_INT */: return gl.UNSIGNED_INT;\n        case \"float\" /* FLOAT */: return gl.FLOAT;\n        default: return assert.never(type, `Unknown texture type: ${type}`);\n    }\n}\n//# sourceMappingURL=texture.js.map","export class Device {\n    constructor(gl, canvas, explicitPixelRatio, explicitViewport) {\n        this.gl = gl;\n        this.canvas = canvas;\n        this.explicitPixelRatio = explicitPixelRatio;\n        this.explicitViewport = explicitViewport;\n    }\n    static mount(element = document.body, options) {\n        if (element instanceof HTMLCanvasElement) {\n            return Device.fromCanvas(element, options);\n        }\n        const canvas = document.createElement(\"canvas\");\n        element.appendChild(canvas);\n        return Device.fromCanvas(canvas, options);\n    }\n    static fromCanvas(canvas, options = {}) {\n        const { antialias = true, alpha = true, depth = true, stencil = true, preserveDrawingBuffer = false, } = options.context || {};\n        const gl = canvas.getContext(\"webgl2\", {\n            antialias,\n            alpha,\n            depth,\n            stencil,\n            preserveDrawingBuffer,\n        });\n        if (!gl) {\n            throw new Error(\"Could not get webgl2 context\");\n        }\n        return Device.fromContext(gl, options);\n    }\n    static fromContext(gl, { pixelRatio, viewport, extensions, } = {}) {\n        if (extensions) {\n            extensions.forEach(ext => {\n                if (!gl.getExtension(ext)) {\n                    throw new Error(`Could not get extension ${ext}`);\n                }\n            });\n        }\n        const dev = new Device(gl, gl.canvas, pixelRatio, viewport);\n        dev.update();\n        return dev;\n    }\n    get bufferWidth() {\n        return this.gl.drawingBufferWidth;\n    }\n    get bufferHeight() {\n        return this.gl.drawingBufferHeight;\n    }\n    get canvasWidth() {\n        return this.canvas.width;\n    }\n    get canvasHeight() {\n        return this.canvas.height;\n    }\n    get canvasCSSWidth() {\n        return this.canvas.clientWidth;\n    }\n    get canvasCSSHeight() {\n        return this.canvas.clientHeight;\n    }\n    get pixelRatio() {\n        return this.explicitPixelRatio || window.devicePixelRatio;\n    }\n    update() {\n        const dpr = this.pixelRatio;\n        const canvas = this.canvas;\n        const width = this.explicitViewport\n            && this.explicitViewport[0]\n            || canvas.clientWidth * dpr;\n        const height = this.explicitViewport\n            && this.explicitViewport[1]\n            || canvas.clientHeight * dpr;\n        if (width !== canvas.width) {\n            canvas.width = width;\n        }\n        if (height !== canvas.height) {\n            canvas.height = height;\n        }\n    }\n    clearColorBuffer(r, g, b, a, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearDepthBuffer(depth, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearDepth(depth);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearStencilBuffer(stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearStencil(stencil);\n        gl.clear(gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearColorAndDepthBuffers(r, g, b, a, depth, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearDepthAndStencilBuffers(depth, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearDepth(depth);\n        gl.clearStencil(stencil);\n        gl.clear(gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearColorAndStencilBuffers(r, g, b, a, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearStencil(stencil);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clear(r, g, b, a, depth, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clearStencil(stencil);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n}\n//# sourceMappingURL=device.js.map","import * as assert from \"./assert\";\nimport * as array from \"./array\";\nimport { Device } from \"./device\";\nimport { VertexBuffer, } from \"./vertex-buffer\";\nimport { ElementBuffer, } from \"./element-buffer\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nexport class VertexArray {\n    static create(dev, { attributes, elements }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const attrs = Object.entries(attributes)\n            .map(([locationStr, definition]) => {\n            if (!INT_PATTERN.test(locationStr)) {\n                throw new Error(\"Location not a number. Use Command#locate\");\n            }\n            const location = parseInt(locationStr, 10);\n            return AttributeDescriptor.create(gl, location, definition);\n        });\n        const elementBuffer = elements\n            ? elements instanceof ElementBuffer\n                ? elements\n                : ElementBuffer.create(gl, elements)\n            : undefined;\n        const count = elementBuffer\n            ? elementBuffer.count\n            : attrs.length\n                ? attrs\n                    .map(attr => attr.count)\n                    .reduce((min, curr) => Math.min(min, curr))\n                : 0;\n        const instAttrs = attrs.filter(attr => !!attr.divisor);\n        const instanceCount = instAttrs.length\n            ? instAttrs\n                .map(attr => attr.count * attr.divisor)\n                .reduce((min, curr) => Math.min(min, curr))\n            : 0;\n        return new VertexArray(gl, attrs, elementBuffer, count, instanceCount);\n    }\n    constructor(gl, attributes, elements, count, instanceCount) {\n        this.gl = gl;\n        this.elementBuffer = elements;\n        this.attributes = attributes;\n        this.count = count;\n        this.instanceCount = instanceCount;\n        this.glVertexArray = null;\n        this.init();\n    }\n    get hasElements() {\n        return !!this.elementBuffer;\n    }\n    get primitive() {\n        return this.elementBuffer && this.elementBuffer.primitive;\n    }\n    get glPrimitive() {\n        return this.elementBuffer && this.elementBuffer.glPrimitive;\n    }\n    init() {\n        const { gl, attributes, elementBuffer } = this;\n        if (!gl.isContextLost()) {\n            const vao = gl.createVertexArray();\n            gl.bindVertexArray(vao);\n            attributes.forEach(({ location, type, buffer: { glBuffer, glType: glBufferType }, size, normalized = false, divisor, }) => {\n                // Enable sending attribute arrays for location\n                gl.enableVertexAttribArray(location);\n                // Send buffer\n                gl.bindBuffer(gl.ARRAY_BUFFER, glBuffer);\n                switch (type) {\n                    case \"pointer\" /* POINTER */:\n                        gl.vertexAttribPointer(location, size, glBufferType, normalized, 0, 0);\n                        break;\n                    case \"ipointer\" /* IPOINTER */:\n                        gl.vertexAttribIPointer(location, size, glBufferType, 0, 0);\n                        break;\n                    default: assert.never(type);\n                }\n                if (divisor) {\n                    gl.vertexAttribDivisor(location, divisor);\n                }\n            });\n            if (elementBuffer) {\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer.glBuffer);\n            }\n            gl.bindVertexArray(null);\n            gl.bindBuffer(gl.ARRAY_BUFFER, null);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n            this.glVertexArray = vao;\n        }\n    }\n    restore() {\n        const { gl, glVertexArray, attributes, elementBuffer } = this;\n        if (elementBuffer) {\n            elementBuffer.restore();\n        }\n        attributes.forEach(attr => attr.buffer.restore());\n        if (!gl.isVertexArray(glVertexArray)) {\n            this.init();\n        }\n    }\n}\n// TODO: this could use some further refactoring. Currently its just former\n// public API made private.\nclass AttributeDescriptor {\n    constructor(location, type, buffer, count, size, normalized, divisor) {\n        this.location = location;\n        this.type = type;\n        this.buffer = buffer;\n        this.count = count;\n        this.size = size;\n        this.normalized = normalized;\n        this.divisor = divisor;\n    }\n    static create(gl, location, props) {\n        if (Array.isArray(props)) {\n            if (array.isArray2(props)) {\n                const s = array.shape2(props);\n                const r = array.ravel2(props, s);\n                return new AttributeDescriptor(location, \"pointer\" /* POINTER */, VertexBuffer.fromFloat32Array(gl, r), s[0], s[1], false, 0);\n            }\n            return new AttributeDescriptor(location, \"pointer\" /* POINTER */, VertexBuffer.fromFloat32Array(gl, props), props.length, 1, false, 0);\n        }\n        const buffer = props.value instanceof VertexBuffer\n            ? props.value\n            // Typescript is not smart enough here\n            : VertexBuffer.create(gl, props.value);\n        switch (props.type) {\n            case \"pointer\" /* POINTER */: return new AttributeDescriptor(location, props.type, buffer, props.count, props.size, props.normalized || false, props.divisor || 0);\n            case \"ipointer\" /* IPOINTER */: return new AttributeDescriptor(location, props.type, buffer, props.count, props.size, false, props.divisor || 0);\n            default: return assert.never(props);\n        }\n    }\n}\n//# sourceMappingURL=vertex-array.js.map","import * as assert from \"./assert\";\nimport { Device } from \"./device\";\nexport class Framebuffer {\n    static create(dev, { width, height, color, depth, stencil }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const colorBuffers = Array.isArray(color) ? color : [color];\n        colorBuffers.forEach(buffer => {\n            assert.equal(width, buffer.width);\n            assert.equal(height, buffer.height);\n        });\n        if (depth) {\n            assert.equal(width, depth.width);\n            assert.equal(height, depth.height);\n        }\n        if (stencil) {\n            assert.equal(width, stencil.width);\n            assert.equal(height, stencil.height);\n        }\n        return new Framebuffer(gl, width, height, colorBuffers, depth, stencil);\n    }\n    constructor(gl, width, height, colorBuffers, depthBuffer, stencilBuffer) {\n        this.gl = gl;\n        this.width = width;\n        this.height = height;\n        this.colorBuffers = colorBuffers;\n        this.depthBuffer = depthBuffer;\n        this.stencilBuffer = stencilBuffer;\n        this.glColorAttachments = colorBuffers\n            .map((_, i) => gl.COLOR_ATTACHMENT0 + i);\n        this.glFramebuffer = null;\n        this.init();\n    }\n    init() {\n        const { gl, colorBuffers, depthBuffer, stencilBuffer } = this;\n        const fbo = gl.createFramebuffer();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n        colorBuffers.forEach((buffer, i) => {\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.TEXTURE_2D, buffer.glTexture, 0);\n        });\n        if (depthBuffer) {\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depthBuffer, 0);\n        }\n        if (stencilBuffer) {\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.STENCIL_ATTACHMENT, gl.TEXTURE_2D, stencilBuffer, 0);\n        }\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        if (status !== gl.FRAMEBUFFER_COMPLETE) {\n            gl.deleteFramebuffer(fbo);\n            throw new Error(\"Framebuffer not complete\");\n        }\n        this.glFramebuffer = fbo;\n    }\n    restore() {\n        const { gl, glFramebuffer, colorBuffers, depthBuffer, stencilBuffer, } = this;\n        colorBuffers.forEach(buffer => buffer.restore());\n        if (depthBuffer) {\n            depthBuffer.restore();\n        }\n        if (stencilBuffer) {\n            stencilBuffer.restore();\n        }\n        if (!gl.isFramebuffer(glFramebuffer)) {\n            this.init();\n        }\n    }\n}\n//# sourceMappingURL=framebuffer.js.map"],"names":["paramNonNull","p","name","nonNull","fmt","paramRange","start","end","range","msg","never","Error","createProgram","gl","vertex","fragment","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","prettySource","split","map","l","i","join","isArray2","array","length","Array","isArray","shape2","outer","ravel2","unraveled","shape","inner","raveled","forEach","arr","elem","j","mapGlVertexBufferType","BYTE","SHORT","INT","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","assert.never","mapGlPrimitive","primitive","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","POINTS","LINES","LINE_STRIP","LINE_LOOP","locate","glProgram","attributes","elements","Object","entries","reduce","accum","identifier","definition","INT_PATTERN","test","location","getAttribLocation","UNKNOWN_ATTRIB_LOCATION","access","props","index","value","mapGlDepthOrStencilFunc","func","ALWAYS","NEVER","EQUAL","NOTEQUAL","LESS","LEQUAL","GREATER","GEQUAL","mapGlStencilOp","op","KEEP","ZERO","REPLACE","INCR","INCR_WRAP","DECR","DECR_WRAP","INVERT","mapGlBlendFunc","ONE","SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","DST_COLOR","DST_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_COLOR","ONE_MINUS_CONSTANT_ALPHA","mapGlBlendEquation","equation","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","parseDepth","depth","DepthDescriptor","mask","parseStencil","stencil","StencilDescriptor","front","back","ref","fail","zfail","zpass","parseBlend","blend","BlendDescriptor","src","rgb","alpha","dst","color","mapGlTextureWrap","wrap","CLAMP_TO_EDGE","REPEAT","MIRRORED_REPEAT","mapGlTextureFilter","filter","NEAREST","LINEAR","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","mapGlTextureInternalFormat","internalFormat","R8","R8_SNORM","R8UI","R8I","R16UI","R16I","R32UI","R32I","R32F","RG8","RG8_SNORM","RG8UI","RG8I","RG16UI","RG16I","RG32UI","RG32I","RG16F","RG32F","RGB8","RGB8_SNORM","RGB8UI","RGB8I","RGB16UI","RGB16I","RGB32UI","RGB32I","RGB16F","RGB32F","RGBA8","RGBA8_SNORM","RGBA8UI","RGBA8I","RGBA16UI","RGBA16I","RGBA32UI","RGBA32I","RGBA16F","RGBA32F","mapGlTextureFormat","format","RED","RG","RGB","RGBA","RED_INTEGER","RG_INTEGER","RGB_INTEGER","RGBA_INTEGER","mapGlTextureType","Device","[object Object]","canvas","explicitPixelRatio","explicitViewport","this","element","document","body","options","HTMLCanvasElement","fromCanvas","createElement","appendChild","antialias","preserveDrawingBuffer","context","getContext","fromContext","pixelRatio","viewport","extensions","ext","getExtension","dev","update","bufferWidth","drawingBufferWidth","bufferHeight","drawingBufferHeight","canvasWidth","width","canvasHeight","height","canvasCSSWidth","clientWidth","canvasCSSHeight","clientHeight","window","devicePixelRatio","dpr","r","g","b","a","fbo","bindFramebuffer","FRAMEBUFFER","glFramebuffer","clearColor","clear","COLOR_BUFFER_BIT","clearDepth","DEPTH_BUFFER_BIT","clearStencil","STENCIL_BUFFER_BIT","VertexBuffer","data","glType","glBuffer","init","fromInt8Array","fromInt16Array","fromInt32Array","fromUint8Array","fromUint16Array","fromUint32Array","fromFloat32Array","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Float32Array","count","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","isBuffer","ElementBuffer","fromArray","array.isArray2","s","array.shape2","assert.paramRange","array.ravel2","prim","glPrimitive","ELEMENT_ARRAY_BUFFER","VertexArray","attrs","locationStr","parseInt","AttributeDescriptor","create","elementBuffer","undefined","attr","min","curr","Math","instAttrs","divisor","instanceCount","glVertexArray","hasElements","isContextLost","vao","createVertexArray","bindVertexArray","glBufferType","size","normalized","enableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","vertexAttribDivisor","restore","isVertexArray","Framebuffer","colorBuffers","depthBuffer","stencilBuffer","glColorAttachments","_","COLOR_ATTACHMENT0","createFramebuffer","framebufferTexture2D","TEXTURE_2D","glTexture","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","deleteFramebuffer","isFramebuffer","Command","uniformDescrs","offset","vertexArrayAcc","framebufferAcc","depthDescr","stencilDescr","blendDescr","currVao","currFbo","vert","frag","uniforms","framebuffer","assert.paramNonNull","vs","glutil.createShader","VERTEX_SHADER","fs","FRAGMENT_SHADER","prog","glutil.createProgram","ident","uniform","loc","getUniformLocation","UniformDescriptor","useProgram","beginDepth","beginStencil","beginBlend","executeInner","unbindFbo","unbindVao","endBlend","endStencil","endDepth","vertexArrayProps","bindFbo","updateUniforms","bindVao","cnt","drawElements","drawArrays","drawBuffers","enable","DEPTH_TEST","depthFunc","depthMask","depthRange","rangeStart","rangeEnd","disable","fFunc","bFunc","fFuncRef","bfuncRef","fFuncMask","bFuncMask","fMask","bMask","fOpFail","bOpFail","fOpZFail","bOpZFail","fOpZPass","bOpZPass","STENCIL_TEST","stencilFuncSeparate","FRONT","BACK","stencilMaskSeparate","stencilOpSeparate","BLEND","blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","blendEquationSeparate","equationRGB","equationAlpha","blendColor","instCount","drawArraysInstanced","drawElementsInstanced","textureUnitOffset","def","uniform1f","uniform1fv","uniform1i","uniform1iv","uniform1ui","uniform1uiv","x","y","uniform2f","uniform2fv","uniform2i","uniform2iv","uniform2ui","uniform2uiv","z","uniform3f","uniform3fv","uniform3i","uniform3iv","uniform3ui","uniform3uiv","w","uniform4f","uniform4fv","uniform4i","uniform4iv","uniform4ui","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","texture","currentTexture","activeTexture","TEXTURE0","bindTexture","Texture","image","fromRGBA8","fromArrayBufferView","mag","wrapS","wrapT","mipmap","minFilter","magFilter","glInternalFormat","glFormat","glWrapS","glWrapT","glMinFilter","glMagFilter","createTexture","texStorage2D","texSubImage2D","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","generateMipmap","isTexture"],"mappings":"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"}