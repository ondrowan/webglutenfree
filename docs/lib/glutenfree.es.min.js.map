{"version":3,"file":"glutenfree.es.min.js","sources":["../build/assert.js","../build/glutil.js","../build/command.js","../build/array.js","../build/texture.js","../build/device.js","../build/vertex-buffer.js","../build/element-buffer.js","../build/vertex-array.js","../build/framebuffer.js"],"sourcesContent":["/**\n * This file is an exercise in proprocessor voodoo.\n *\n * \"process.env.NODE_ENV\", gets suplied by the string replacer during a\n * custom build or our production build. If \"production\", constant evaluation\n * will eliminate the if blocks, making the functions no-ops, in turn eligible\n * for elimination from their callsites.\n *\n * While cool, this disables us to return values from the asserts, which would\n * make for a slightly nice programming model: const checkedVal = truthy(val)\n */\n// This does not get replaced and serves as a default velue. If all its uses\n// are eliminated, the value itself is pruned as well.\nconst process = {\n    env: {\n        NODE_ENV: \"development\",\n    },\n};\nexport function requireNonNull(p, name) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof p === \"undefined\" || typeof p === \"object\" && !p) {\n            throw new Error(fmt(`Expected parameter ${name}, but got ${p}`));\n        }\n    }\n}\nexport function requireNonEmpty(p, name) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!p || !p.length) {\n            throw new Error(fmt(`Expected parameter ${name} to be nonempty`));\n        }\n    }\n}\nexport function requireEqual(p, val, name) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (p !== val) {\n            throw new Error(fmt(`\\\nExpected parameter ${name} to be equal to ${val}, but got ${p}`));\n        }\n    }\n}\nexport function nonNull(p, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof p === \"undefined\" || typeof p === \"object\" && !p) {\n            throw new Error(fmt(msg));\n        }\n    }\n}\nexport function nonEmpty(p, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!p || !p.length) {\n            throw new Error(fmt(msg || \"Array empty\"));\n        }\n    }\n}\nexport function equal(p, val, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (p !== val) {\n            throw new Error(fmt(msg || `Not equal: ${p} ${val}`));\n        }\n    }\n}\nexport function never(p, msg) {\n    // \"never\" can not be eliminated, as its \"return value\" is actually captured\n    // at the callsites. It should never be invoked, though.\n    throw new Error(fmt(msg || `Unexpected object: ${p}`));\n}\nfunction fmt(msg) {\n    if (msg) {\n        return `Assertion Failed: ${msg}`;\n    }\n    return `Assertion Failed`;\n}\n//# sourceMappingURL=assert.js.map","import * as assert from \"./assert\";\n/*\n███████╗██╗  ██╗ █████╗ ██████╗ ███████╗██████╗\n██╔════╝██║  ██║██╔══██╗██╔══██╗██╔════╝██╔══██╗\n███████╗███████║███████║██║  ██║█████╗  ██████╔╝\n╚════██║██╔══██║██╔══██║██║  ██║██╔══╝  ██╔══██╗\n███████║██║  ██║██║  ██║██████╔╝███████╗██║  ██║\n╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝ ╚══════╝╚═╝  ╚═╝\n*/\nexport function createProgram(gl, vertex, fragment) {\n    const program = gl.createProgram();\n    if (!program) {\n        throw new Error(\"Could not create Program\");\n    }\n    gl.attachShader(program, vertex);\n    gl.attachShader(program, fragment);\n    gl.linkProgram(program);\n    if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        return program;\n    }\n    const msg = gl.getProgramInfoLog(program);\n    gl.deleteProgram(program);\n    throw new Error(`Could not link shader program: ${msg}`);\n}\nexport function createShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    if (!shader) {\n        throw new Error(\"Could not create Shader\");\n    }\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        return shader;\n    }\n    const msg = gl.getShaderInfoLog(shader);\n    gl.deleteShader(shader);\n    const prettySource = source\n        .split(\"\\n\")\n        .map((l, i) => `${i + 1}: ${l}`)\n        .join(\"\\n\");\n    throw new Error(`Could not compile shader:\\n${msg}\\n${prettySource}`);\n}\n/*\n██████╗ ██╗   ██╗███████╗███████╗███████╗██████╗\n██╔══██╗██║   ██║██╔════╝██╔════╝██╔════╝██╔══██╗\n██████╔╝██║   ██║█████╗  █████╗  █████╗  ██████╔╝\n██╔══██╗██║   ██║██╔══╝  ██╔══╝  ██╔══╝  ██╔══██╗\n██████╔╝╚██████╔╝██║     ██║     ███████╗██║  ██║\n╚═════╝  ╚═════╝ ╚═╝     ╚═╝     ╚══════╝╚═╝  ╚═╝\n*/\nexport function createArrayBuffer(gl, values) {\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n        throw new Error(\"Could not create buffer\");\n    }\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, Array.isArray(values)\n        ? new Float32Array(values)\n        : values, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    return buffer;\n}\nexport function createElementArrayBuffer(gl, elements) {\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n        throw new Error(\"Could not create buffer\");\n    }\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, Array.isArray(elements)\n        ? new Uint32Array(elements)\n        : elements, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    return buffer;\n}\nexport function createVertexArray(gl, buffers, elementBuffer) {\n    const vao = gl.createVertexArray();\n    if (!vao) {\n        throw new Error(\"Could not create Vertex Array Object\");\n    }\n    gl.bindVertexArray(vao);\n    buffers.forEach(({ type, buffer, bufferType, size, location, normalized = false, divisor, }) => {\n        // Enable sending attribute arrays for location\n        gl.enableVertexAttribArray(location);\n        // Send buffer\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        switch (type) {\n            case 0 /* POINTER */:\n                gl.vertexAttribPointer(location, size, bufferType, normalized, 0, 0);\n                break;\n            case 1 /* IPOINTER */:\n                gl.vertexAttribIPointer(location, size, bufferType, 0, 0);\n                break;\n            default: assert.never(type);\n        }\n        if (divisor) {\n            gl.vertexAttribDivisor(location, divisor);\n        }\n    });\n    if (elementBuffer) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    }\n    gl.bindVertexArray(null);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    return vao;\n}\n/*\n████████╗███████╗██╗  ██╗████████╗██╗   ██╗██████╗ ███████╗\n╚══██╔══╝██╔════╝╚██╗██╔╝╚══██╔══╝██║   ██║██╔══██╗██╔════╝\n   ██║   █████╗   ╚███╔╝    ██║   ██║   ██║██████╔╝█████╗\n   ██║   ██╔══╝   ██╔██╗    ██║   ██║   ██║██╔══██╗██╔══╝\n   ██║   ███████╗██╔╝ ██╗   ██║   ╚██████╔╝██║  ██║███████╗\n   ╚═╝   ╚══════╝╚═╝  ╚═╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚══════╝\n*/\nexport function createTexture(gl, data, width, height, internalFormat, format, type, wrapS, wrapT, min, mag, mipmap) {\n    const texture = gl.createTexture();\n    if (!texture) {\n        throw new Error(\"Could not create texture\");\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, internalFormat, width, height);\n    if (data) {\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, width, height, format, type, data);\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, min);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mag);\n    if (mipmap) {\n        gl.generateMipmap(gl.TEXTURE_2D);\n    }\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return texture;\n}\n//# sourceMappingURL=glutil.js.map","import * as assert from \"./assert\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nconst UNKNOWN_ATTRIB_LOCATION = -1;\nexport class Command {\n    constructor(gl, glProgram, glPrimitive, uniformDescriptors, depthDescriptor, blendDescriptor, framebufferDescriptor) {\n        this.gl = gl;\n        this.glProgram = glProgram;\n        this.glPrimitive = glPrimitive;\n        this.uniformDescriptors = uniformDescriptors;\n        this.depthDescriptor = depthDescriptor;\n        this.blendDescriptor = blendDescriptor;\n        this.framebufferDescriptor = framebufferDescriptor;\n    }\n    static create(dev, { vert, frag, uniforms = {}, primitive = \"triangles\" /* TRIANGLES */, depth, blend, framebuffer, }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const vertShader = glutil.createShader(gl, gl.VERTEX_SHADER, vert);\n        const fragShader = glutil.createShader(gl, gl.FRAGMENT_SHADER, frag);\n        const program = glutil.createProgram(gl, vertShader, fragShader);\n        gl.deleteShader(vertShader);\n        gl.deleteShader(fragShader);\n        const uniformDescriptors = Object.entries(uniforms)\n            .map(([identifier, uniform]) => {\n            const location = gl.getUniformLocation(program, identifier);\n            if (!location) {\n                throw new Error(`No location for uniform: ${identifier}`);\n            }\n            return new UniformDescriptor(identifier, location, uniform);\n        });\n        if (depth) {\n            assert.requireNonNull(depth.func, \"depth.func\");\n        }\n        const depthDescriptor = depth\n            ? new DepthDescriptor(mapGlDepthFunc(gl, depth.func || \"less\" /* LESS */), typeof depth.mask === \"boolean\" ? depth.mask : true, depth.range ? depth.range[0] : 0, depth.range ? depth.range[1] : 1)\n            : undefined;\n        if (blend) {\n            assert.requireNonNull(blend.func, \"blend.func\");\n            assert.requireNonNull(blend.func.src, \"blend.func.src\");\n            assert.requireNonNull(blend.func.dst, \"blend.func.dst\");\n            if (typeof blend.func.src === \"object\") {\n                assert.requireNonNull(blend.func.src.rgb, \"blend.func.src.rgb\");\n                assert.requireNonNull(blend.func.src.alpha, \"blend.func.src.alpha\");\n            }\n            if (typeof blend.func.dst === \"object\") {\n                assert.requireNonNull(blend.func.dst.rgb, \"blend.func.dst.rgb\");\n                assert.requireNonNull(blend.func.dst.alpha, \"blend.func.dst.alpha\");\n            }\n        }\n        const blendDescriptor = blend\n            ? new BlendDescriptor(mapGlBlendFunc(gl, typeof blend.func.src === \"object\"\n                ? blend.func.src.rgb\n                : blend.func.src), mapGlBlendFunc(gl, typeof blend.func.src === \"object\"\n                ? blend.func.src.alpha\n                : blend.func.src), mapGlBlendFunc(gl, typeof blend.func.dst === \"object\"\n                ? blend.func.dst.rgb\n                : blend.func.dst), mapGlBlendFunc(gl, typeof blend.func.dst === \"object\"\n                ? blend.func.dst.alpha\n                : blend.func.dst), mapGlBlendEquation(gl, blend.equation\n                ? typeof blend.equation === \"object\"\n                    ? blend.equation.rgb\n                    : blend.equation\n                : \"add\" /* ADD */), mapGlBlendEquation(gl, blend.equation\n                ? typeof blend.equation === \"object\"\n                    ? blend.equation.alpha\n                    : blend.equation\n                : \"add\" /* ADD */), blend.color)\n            : undefined;\n        const framebufferDescriptor = framebuffer\n            ? new FramebufferDescriptor(framebuffer)\n            : undefined;\n        return new Command(gl, program, mapGlPrimitive(gl, primitive), uniformDescriptors, depthDescriptor, blendDescriptor, framebufferDescriptor);\n    }\n    execute(vao, props) {\n        const { gl, glProgram } = this;\n        gl.useProgram(glProgram);\n        this.beginDepth();\n        this.beginBlend();\n        if (Array.isArray(vao)) {\n            vao.forEach((v, i) => this.executeInner(v, props, i));\n        }\n        else {\n            this.executeInner(vao, props, 0);\n        }\n        this.endBlend();\n        this.endDepth();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindVertexArray(null);\n    }\n    locate({ attributes, elements }) {\n        const { gl, glProgram } = this;\n        const locatedAttributes = Object.entries(attributes)\n            .reduce((accum, [identifier, definition]) => {\n            if (INT_PATTERN.test(identifier)) {\n                accum[identifier] = definition;\n            }\n            else {\n                const location = gl.getAttribLocation(glProgram, identifier);\n                if (location === UNKNOWN_ATTRIB_LOCATION) {\n                    throw new Error(`No location for attrib: ${identifier}`);\n                }\n                accum[location] = definition;\n            }\n            return accum;\n        }, {});\n        return { attributes: locatedAttributes, elements };\n    }\n    executeInner(vao, props, index) {\n        const gl = this.gl;\n        let bufferWidth = gl.drawingBufferWidth;\n        let bufferHeight = gl.drawingBufferHeight;\n        const fbo = this.framebufferDescriptor\n            ? access(props, index, this.framebufferDescriptor.definition)\n            : undefined;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n            gl.drawBuffers(fbo.glColorAttachments);\n            bufferWidth = fbo.width;\n            bufferHeight = fbo.height;\n        }\n        gl.viewport(0, 0, bufferWidth, bufferHeight);\n        this.updateUniforms(props, index);\n        gl.bindVertexArray(vao.glVertexArrayObject);\n        if (vao.hasElements) {\n            this.drawElements(vao.count, vao.instanceCount);\n        }\n        else {\n            this.drawArrays(vao.count, vao.instanceCount);\n        }\n    }\n    beginDepth() {\n        const { gl, depthDescriptor } = this;\n        if (depthDescriptor) {\n            gl.enable(gl.DEPTH_TEST);\n            gl.depthFunc(depthDescriptor.func);\n            gl.depthMask(depthDescriptor.mask);\n            gl.depthRange(depthDescriptor.rangeStart, depthDescriptor.rangeEnd);\n        }\n    }\n    endDepth() {\n        const { gl, depthDescriptor } = this;\n        if (depthDescriptor) {\n            gl.disable(gl.DEPTH_TEST);\n        }\n    }\n    beginBlend() {\n        const { gl, blendDescriptor } = this;\n        if (blendDescriptor) {\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(blendDescriptor.srcRGB, blendDescriptor.dstRGB, blendDescriptor.srcAlpha, blendDescriptor.dstAlpha);\n            gl.blendEquationSeparate(blendDescriptor.equationRGB, blendDescriptor.equationAlpha);\n            if (blendDescriptor.color) {\n                const [r, g, b, a] = blendDescriptor.color;\n                gl.blendColor(r, g, b, a);\n            }\n        }\n    }\n    endBlend() {\n        const { gl, blendDescriptor } = this;\n        if (blendDescriptor) {\n            gl.disable(gl.BLEND);\n        }\n    }\n    drawArrays(count, instCount) {\n        const { gl, glPrimitive } = this;\n        if (instCount) {\n            gl.drawArraysInstanced(glPrimitive, 0, count, instCount);\n        }\n        else {\n            gl.drawArrays(glPrimitive, 0, count);\n        }\n    }\n    drawElements(count, instCount) {\n        const { gl, glPrimitive } = this;\n        if (instCount) {\n            gl.drawElementsInstanced(glPrimitive, count, gl.UNSIGNED_INT, // We only support u32 indices\n            0, instCount);\n        }\n        else {\n            gl.drawElements(glPrimitive, count, gl.UNSIGNED_INT, // We only support u32 indices\n            0);\n        }\n    }\n    updateUniforms(props, index) {\n        const gl = this.gl;\n        let textureUnitOffset = 0;\n        this.uniformDescriptors.forEach(({ identifier: ident, location: loc, definition: def, }) => {\n            switch (def.type) {\n                case \"1f\":\n                    gl.uniform1f(loc, access(props, index, def.value));\n                    break;\n                case \"1fv\":\n                    gl.uniform1fv(loc, access(props, index, def.value));\n                    break;\n                case \"1i\":\n                    gl.uniform1i(loc, access(props, index, def.value));\n                    break;\n                case \"1iv\":\n                    gl.uniform1iv(loc, access(props, index, def.value));\n                    break;\n                case \"1ui\":\n                    gl.uniform1ui(loc, access(props, index, def.value));\n                    break;\n                case \"1uiv\":\n                    gl.uniform1uiv(loc, access(props, index, def.value));\n                    break;\n                case \"2f\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2f(loc, x, y);\n                    break;\n                }\n                case \"2fv\":\n                    gl.uniform2fv(loc, access(props, index, def.value));\n                    break;\n                case \"2i\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2i(loc, x, y);\n                    break;\n                }\n                case \"2iv\":\n                    gl.uniform2iv(loc, access(props, index, def.value));\n                    break;\n                case \"2ui\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2ui(loc, x, y);\n                    break;\n                }\n                case \"2uiv\":\n                    gl.uniform2uiv(loc, access(props, index, def.value));\n                    break;\n                case \"3f\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3f(loc, x, y, z);\n                    break;\n                }\n                case \"3fv\":\n                    gl.uniform3fv(loc, access(props, index, def.value));\n                    break;\n                case \"3i\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3i(loc, x, y, z);\n                    break;\n                }\n                case \"3iv\":\n                    gl.uniform3iv(loc, access(props, index, def.value));\n                    break;\n                case \"3ui\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3ui(loc, x, y, z);\n                    break;\n                }\n                case \"3uiv\":\n                    gl.uniform3uiv(loc, access(props, index, def.value));\n                    break;\n                case \"4f\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4f(loc, x, y, z, w);\n                    break;\n                }\n                case \"4fv\":\n                    gl.uniform4fv(loc, access(props, index, def.value));\n                    break;\n                case \"4i\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4i(loc, x, y, z, w);\n                    break;\n                }\n                case \"4iv\":\n                    gl.uniform4iv(loc, access(props, index, def.value));\n                    break;\n                case \"4ui\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4ui(loc, x, y, z, w);\n                    break;\n                }\n                case \"4uiv\":\n                    gl.uniform4uiv(loc, access(props, index, def.value));\n                    break;\n                case \"matrix2fv\":\n                    gl.uniformMatrix2fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix3fv\":\n                    gl.uniformMatrix3fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix4fv\":\n                    gl.uniformMatrix4fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"texture\":\n                    // TODO: is this the best way? (is it fast? can we cache?)\n                    const texture = access(props, index, def.value);\n                    const currentTexture = textureUnitOffset++;\n                    gl.activeTexture(gl.TEXTURE0 + currentTexture);\n                    gl.bindTexture(gl.TEXTURE_2D, texture.glTexture);\n                    gl.uniform1i(loc, currentTexture);\n                    break;\n                default:\n                    assert.never(def, `Unknown uniform type: (${ident})`);\n                    break;\n            }\n        });\n    }\n}\nfunction access(props, index, value) {\n    return typeof value === \"function\" ? value(props, index) : value;\n}\nclass DepthDescriptor {\n    constructor(func, mask, rangeStart, rangeEnd) {\n        this.func = func;\n        this.mask = mask;\n        this.rangeStart = rangeStart;\n        this.rangeEnd = rangeEnd;\n    }\n}\nclass BlendDescriptor {\n    constructor(srcRGB, srcAlpha, dstRGB, dstAlpha, equationRGB, equationAlpha, color) {\n        this.srcRGB = srcRGB;\n        this.srcAlpha = srcAlpha;\n        this.dstRGB = dstRGB;\n        this.dstAlpha = dstAlpha;\n        this.equationRGB = equationRGB;\n        this.equationAlpha = equationAlpha;\n        this.color = color;\n    }\n}\nclass FramebufferDescriptor {\n    constructor(definition) {\n        this.definition = definition;\n    }\n}\nclass UniformDescriptor {\n    constructor(identifier, location, definition) {\n        this.identifier = identifier;\n        this.location = location;\n        this.definition = definition;\n    }\n}\nfunction mapGlPrimitive(gl, primitive) {\n    switch (primitive) {\n        case \"triangles\" /* TRIANGLES */: return gl.TRIANGLES;\n        case \"triangle-strip\" /* TRIANGLE_STRIP */: return gl.TRIANGLE_STRIP;\n        case \"triangle-fan\" /* TRIANGLE_FAN */: return gl.TRIANGLE_FAN;\n        case \"points\" /* POINTS */: return gl.POINTS;\n        case \"lines\" /* LINES */: return gl.LINES;\n        case \"line-strip\" /* LINE_STRIP */: return gl.LINE_STRIP;\n        case \"line-loop\" /* LINE_LOOP */: return gl.LINE_LOOP;\n        default: return assert.never(primitive);\n    }\n}\nfunction mapGlDepthFunc(gl, func) {\n    switch (func) {\n        case \"always\" /* ALWAYS */: return gl.ALWAYS;\n        case \"never\" /* NEVER */: return gl.NEVER;\n        case \"equal\" /* EQUAL */: return gl.EQUAL;\n        case \"notequal\" /* NOTEQUAL */: return gl.NOTEQUAL;\n        case \"less\" /* LESS */: return gl.LESS;\n        case \"lequal\" /* LEQUAL */: return gl.LEQUAL;\n        case \"greater\" /* GREATER */: return gl.GREATER;\n        case \"gequal\" /* GEQUAL */: return gl.GEQUAL;\n        default: return assert.never(func);\n    }\n}\nfunction mapGlBlendFunc(gl, func) {\n    switch (func) {\n        case \"zero\" /* ZERO */: return gl.ZERO;\n        case \"one\" /* ONE */: return gl.ONE;\n        case \"src-color\" /* SRC_COLOR */: return gl.SRC_COLOR;\n        case \"src-alpha\" /* SRC_ALPHA */: return gl.SRC_ALPHA;\n        case \"one-minus-src-color\" /* ONE_MINUS_SRC_COLOR */: return gl.ONE_MINUS_SRC_COLOR;\n        case \"one-minus-src-alpha\" /* ONE_MINUS_SRC_ALPHA */: return gl.ONE_MINUS_SRC_ALPHA;\n        case \"dst-color\" /* DST_COLOR */: return gl.DST_COLOR;\n        case \"dst-alpha\" /* DST_ALPHA */: return gl.DST_ALPHA;\n        case \"one-minus-dst-color\" /* ONE_MINUS_DST_COLOR */: return gl.ONE_MINUS_DST_COLOR;\n        case \"one-minus-dst-alpha\" /* ONE_MINUS_DST_ALPHA */: return gl.ONE_MINUS_DST_ALPHA;\n        case \"constant-color\" /* CONSTANT_COLOR */: return gl.CONSTANT_COLOR;\n        case \"constant-alpha\" /* CONSTANT_ALPHA */: return gl.CONSTANT_ALPHA;\n        case \"one-minus-constant-color\" /* ONE_MINUS_CONSTANT_COLOR */:\n            return gl.ONE_MINUS_CONSTANT_COLOR;\n        case \"one-minus-constant-alpha\" /* ONE_MINUS_CONSTANT_ALPHA */:\n            return gl.ONE_MINUS_CONSTANT_ALPHA;\n        default: return assert.never(func);\n    }\n}\nfunction mapGlBlendEquation(gl, equation) {\n    switch (equation) {\n        case \"add\" /* ADD */: return gl.FUNC_ADD;\n        case \"subtract\" /* SUBTRACT */: return gl.FUNC_SUBTRACT;\n        case \"reverse-subtract\" /* REVERSE_SUBTRACT */: return gl.FUNC_REVERSE_SUBTRACT;\n        case \"min\" /* MIN */: return gl.MIN;\n        case \"max\" /* MAX */: return gl.MAX;\n        default: return assert.never(equation);\n    }\n}\n//# sourceMappingURL=command.js.map","/**\n * Chacks whether array is at least 2d, mostly useful because of return type\n * predicate.\n */\nexport function is2DArray(array) {\n    return !!array.length || Array.isArray(array[0]);\n}\n/**\n * Flatten 2d array and compute its former shape.\n * eg.\n * ravel([\n *      [1, 2, 3],\n *      [4, 5, 6],\n * ])\n * produces {\n *      data: [1, 2, 3, 4, 5, 6],\n *      shape: [2, 3],\n * }\n */\nexport function ravel(unraveled) {\n    const outerShape = unraveled.length;\n    const innerShape = outerShape ? unraveled[0].length : 0;\n    const raveled = new Array(innerShape * outerShape);\n    unraveled.forEach((inner, i) => {\n        inner.forEach((elem, j) => {\n            raveled[innerShape * i + j] = elem;\n        });\n    });\n    return { data: raveled, shape: [outerShape, innerShape] };\n}\n//# sourceMappingURL=array.js.map","import * as assert from \"./assert\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nexport class Texture {\n    constructor(glTexture, width, height) {\n        this.glTexture = glTexture;\n        this.width = width;\n        this.height = height;\n    }\n    static fromImage(dev, image, options) {\n        return Texture.fromRGBA8(dev, image.data, image.width, image.height, options);\n    }\n    static fromRGBA8(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Uint8Array\n            ? data\n            // Note: we also have to convert Uint8ClampedArray to Uint8Array\n            // because of webgl bug\n            // https://github.com/KhronosGroup/WebGL/issues/1533\n            : new Uint8Array(data), width, height, \"RGBA8\" /* RGBA8 */, \"RGBA\" /* RGBA */, \"UNSIGNED_BYTE\" /* UNSIGNED_BYTE */, options);\n    }\n    static fromRG16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RG16F\" /* RG16F */, \"RG\" /* RG */, \"FLOAT\" /* FLOAT */, options);\n    }\n    static fromRGB16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGB16F\" /* RGB16F */, \"RGB\" /* RGB */, \"FLOAT\" /* FLOAT */, options);\n    }\n    static fromRGBA16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGBA16F\" /* RGBA16F */, \"RGBA\" /* RGBA */, \"FLOAT\" /* FLOAT */, options);\n    }\n    static fromRGB32F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGB32F\" /* RGB32F */, \"RGB\" /* RGB */, \"FLOAT\" /* FLOAT */, options);\n    }\n    static fromRGBA32F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGBA32F\" /* RGBA32F */, \"RGBA\" /* RGBA */, \"FLOAT\" /* FLOAT */, options);\n    }\n    static fromArrayBufferView(dev, data, width, height, internalFormat, format, type, { min = \"nearest\" /* NEAREST */, mag = \"nearest\" /* NEAREST */, wrapS = \"clamp-to-edge\" /* CLAMP_TO_EDGE */, wrapT = \"clamp-to-edge\" /* CLAMP_TO_EDGE */, mipmap = false, } = {}) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new Texture(glutil.createTexture(gl, data, width, height, mapGlTextureInternalFormat(gl, internalFormat), mapGlTextureFormat(gl, format), mapGlTextureType(gl, type), mapGlTextureWrap(gl, wrapS), mapGlTextureWrap(gl, wrapT), mapGlTextureFilter(gl, min), mapGlTextureFilter(gl, mag), mipmap), width, height);\n    }\n}\nfunction mapGlTextureWrap(gl, wrap) {\n    switch (wrap) {\n        case \"clamp-to-edge\" /* CLAMP_TO_EDGE */: return gl.CLAMP_TO_EDGE;\n        case \"repeat\" /* REPEAT */: return gl.REPEAT;\n        case \"mirrored-repeat\" /* MIRRORED_REPEAT */: return gl.MIRRORED_REPEAT;\n        default: return assert.never(wrap);\n    }\n}\nfunction mapGlTextureFilter(gl, filter) {\n    switch (filter) {\n        case \"nearest\" /* NEAREST */: return gl.NEAREST;\n        case \"linear\" /* LINEAR */: return gl.LINEAR;\n        case \"nearest-mipmap-nearest\" /* NEAREST_MIPMAP_NEAREST */:\n            return gl.NEAREST_MIPMAP_NEAREST;\n        case \"linear-mipmap-nearest\" /* LINEAR_MIPMAP_NEAREST */:\n            return gl.LINEAR_MIPMAP_NEAREST;\n        case \"nearest-mipmap-linear\" /* NEAREST_MIPMAP_LINEAR */:\n            return gl.NEAREST_MIPMAP_LINEAR;\n        case \"linear-mipmap-linear\" /* LINEAR_MIPMAP_LINEAR */:\n            return gl.LINEAR_MIPMAP_LINEAR;\n        default: return assert.never(filter);\n    }\n}\nfunction mapGlTextureInternalFormat(gl, internalFormat) {\n    switch (internalFormat) {\n        // R\n        case \"R8\" /* R8 */: return gl.R8;\n        case \"R8_SNORM\" /* R8_SNORM */: return gl.R8_SNORM;\n        case \"R8UI\" /* R8UI */: return gl.R8UI;\n        case \"R8I\" /* R8I */: return gl.R8I;\n        case \"R16UI\" /* R16UI */: return gl.R16UI;\n        case \"R16I\" /* R16I */: return gl.R16I;\n        case \"R32UI\" /* R32UI */: return gl.R32UI;\n        case \"R32I\" /* R32I */: return gl.R32I;\n        case \"R16F\" /* R16F */: return gl.R16I;\n        case \"R32F\" /* R32F */: return gl.R32F;\n        // RG\n        case \"RG8\" /* RG8 */: return gl.RG8;\n        case \"RG8_SNORM\" /* RG8_SNORM */: return gl.RG8_SNORM;\n        case \"RG8UI\" /* RG8UI */: return gl.RG8UI;\n        case \"RG8I\" /* RG8I */: return gl.RG8I;\n        case \"RG16UI\" /* RG16UI */: return gl.RG16UI;\n        case \"RG16I\" /* RG16I */: return gl.RG16I;\n        case \"RG32UI\" /* RG32UI */: return gl.RG32UI;\n        case \"RG32I\" /* RG32I */: return gl.RG32I;\n        case \"RG16F\" /* RG16F */: return gl.RG16F;\n        case \"RG32F\" /* RG32F */: return gl.RG32F;\n        // RGB\n        case \"RGB8\" /* RGB8 */: return gl.RGB8;\n        case \"RGB8_SNORM\" /* RGB8_SNORM */: return gl.RGB8_SNORM;\n        case \"RGB8UI\" /* RGB8UI */: return gl.RGB8UI;\n        case \"RGB8I\" /* RGB8I */: return gl.RGB8I;\n        case \"RGB16UI\" /* RGB16UI */: return gl.RGB16UI;\n        case \"RGB16I\" /* RGB16I */: return gl.RGB16I;\n        case \"RGB32UI\" /* RGB32UI */: return gl.RGB32UI;\n        case \"RGB32I\" /* RGB32I */: return gl.RGB32I;\n        case \"RGB16F\" /* RGB16F */: return gl.RGB16F;\n        case \"RGB32F\" /* RGB32F */: return gl.RGB32F;\n        // RGBA\n        case \"RGBA8\" /* RGBA8 */: return gl.RGBA8;\n        case \"RGBA8_SNORM\" /* RGBA8_SNORM */: return gl.RGBA8_SNORM;\n        case \"RGBA8UI\" /* RGBA8UI */: return gl.RGBA8UI;\n        case \"RGBA8I\" /* RGBA8I */: return gl.RGBA8I;\n        case \"RGBA16UI\" /* RGBA16UI */: return gl.RGBA16UI;\n        case \"RGBA16I\" /* RGBA16I */: return gl.RGBA16I;\n        case \"RGBA32UI\" /* RGBA32UI */: return gl.RGBA32UI;\n        case \"RGBA32I\" /* RGBA32I */: return gl.RGBA32I;\n        case \"RGBA16F\" /* RGBA16F */: return gl.RGBA16F;\n        case \"RGBA32F\" /* RGBA32F */: return gl.RGBA32F;\n        default: return assert.never(internalFormat);\n    }\n}\nfunction mapGlTextureFormat(gl, format) {\n    switch (format) {\n        case \"RED\" /* RED */: return gl.RED;\n        case \"RG\" /* RG */: return gl.RG;\n        case \"RGB\" /* RGB */: return gl.RGB;\n        case \"RGBA\" /* RGBA */: return gl.RGBA;\n        case \"RED_INTEGER\" /* RED_INTEGER */: return gl.RED_INTEGER;\n        case \"RG_INTEGER\" /* RG_INTEGER */: return gl.RG_INTEGER;\n        case \"RGB_INTEGER\" /* RGB_INTEGER */: return gl.RGB_INTEGER;\n        case \"RGBA_INTEGER\" /* RGBA_INTEGER */: return gl.RGBA_INTEGER;\n        default: return assert.never(format);\n    }\n}\nfunction mapGlTextureType(gl, type) {\n    switch (type) {\n        case \"UNSIGNED_BYTE\" /* UNSIGNED_BYTE */: return gl.UNSIGNED_BYTE;\n        case \"UNSIGNED_SHORT\" /* UNSIGNED_SHORT */: return gl.UNSIGNED_SHORT;\n        case \"UNSIGNED_INT\" /* UNSIGNED_INT */: return gl.UNSIGNED_INT;\n        case \"BYTE\" /* BYTE */: return gl.BYTE;\n        case \"SHORT\" /* SHORT */: return gl.SHORT;\n        case \"INT\" /* INT */: return gl.INT;\n        case \"FLOAT\" /* FLOAT */: return gl.FLOAT;\n    }\n}\n//# sourceMappingURL=texture.js.map","export class Device {\n    constructor(gl, canvas, explicitPixelRatio, explicitViewport) {\n        this.gl = gl;\n        this.canvas = canvas;\n        this.explicitPixelRatio = explicitPixelRatio;\n        this.explicitViewport = explicitViewport;\n    }\n    static mount(element = document.body, options) {\n        if (element instanceof HTMLCanvasElement) {\n            return Device.fromCanvas(element, options);\n        }\n        const canvas = document.createElement(\"canvas\");\n        element.appendChild(canvas);\n        return Device.fromCanvas(canvas, options);\n    }\n    static fromCanvas(canvas, options) {\n        const gl = canvas.getContext(\"webgl2\");\n        if (!gl) {\n            throw new Error(\"Could not get webgl2 context\");\n        }\n        return Device.fromContext(gl, options);\n    }\n    static fromContext(gl, { pixelRatio, viewport, extensions, } = {}) {\n        if (extensions) {\n            extensions.forEach(ext => {\n                if (!gl.getExtension(ext)) {\n                    throw new Error(`Could not get extension ${ext}`);\n                }\n            });\n        }\n        const dev = new Device(gl, gl.canvas, pixelRatio, viewport);\n        dev.update();\n        return dev;\n    }\n    get bufferWidth() {\n        return this.gl.drawingBufferWidth;\n    }\n    get bufferHeight() {\n        return this.gl.drawingBufferHeight;\n    }\n    get canvasWidth() {\n        return this.canvas.width;\n    }\n    get canvasHeight() {\n        return this.canvas.height;\n    }\n    get canvasCSSWidth() {\n        return this.canvas.clientWidth;\n    }\n    get canvasCSSHeight() {\n        return this.canvas.clientHeight;\n    }\n    get pixelRatio() {\n        return this.explicitPixelRatio || window.devicePixelRatio;\n    }\n    update() {\n        const dpr = this.pixelRatio;\n        const canvas = this.canvas;\n        const width = this.explicitViewport\n            && this.explicitViewport[0]\n            || canvas.clientWidth * dpr;\n        const height = this.explicitViewport\n            && this.explicitViewport[1]\n            || canvas.clientHeight * dpr;\n        if (width !== canvas.width) {\n            canvas.width = width;\n        }\n        if (height !== canvas.height) {\n            canvas.height = height;\n        }\n    }\n    clearColorBuffer(r, g, b, a, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearDepthBuffer(depth, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearDepth(depth);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearStencilBuffer(stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearStencil(stencil);\n        gl.clear(gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearColorAndDepthBuffers(r, g, b, a, depth, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearDepthAndStencilBuffers(depth, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearDepth(depth);\n        gl.clearStencil(stencil);\n        gl.clear(gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearColorAndStencilBuffers(r, g, b, a, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearStencil(stencil);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clear(r, g, b, a, depth, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clearStencil(stencil);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n}\n//# sourceMappingURL=device.js.map","import * as assert from \"./assert\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nexport class VertexBuffer {\n    constructor(gl, type, glType, data) {\n        this.gl = gl;\n        this.type = type;\n        this.glType = glType;\n        this.glBuffer = glutil.createArrayBuffer(gl, data);\n    }\n    static create(dev, props) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        switch (props.type) {\n            case \"i8\": return VertexBuffer.fromInt8Array(gl, props.data);\n            case \"i16\": return VertexBuffer.fromInt16Array(gl, props.data);\n            case \"i32\": return VertexBuffer.fromInt32Array(gl, props.data);\n            case \"u8\": return VertexBuffer.fromUint8Array(gl, props.data);\n            case \"u16\": return VertexBuffer.fromUint16Array(gl, props.data);\n            case \"u32\": return VertexBuffer.fromUint32Array(gl, props.data);\n            case \"f32\": return VertexBuffer.fromFloat32Array(gl, props.data);\n            default: return assert.never(props);\n        }\n    }\n    static fromInt8Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"i8\", gl.BYTE, data instanceof Int8Array ? data : new Int8Array(data));\n    }\n    static fromInt16Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"i16\", gl.SHORT, data instanceof Int16Array ? data : new Int16Array(data));\n    }\n    static fromInt32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"i32\", gl.INT, data instanceof Int32Array ? data : new Int32Array(data));\n    }\n    static fromUint8Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"u8\", gl.UNSIGNED_BYTE, \n        // Note: we also have to convert Uint8ClampedArray to Uint8Array\n        // because of webgl bug\n        // https://github.com/KhronosGroup/WebGL/issues/1533\n        data instanceof Uint8Array ? data : new Uint8Array(data));\n    }\n    static fromUint16Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"u16\", gl.UNSIGNED_SHORT, data instanceof Uint16Array ? data : new Uint16Array(data));\n    }\n    static fromUint32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"u32\", gl.UNSIGNED_INT, data instanceof Uint32Array ? data : new Uint32Array(data));\n    }\n    static fromFloat32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"f32\", gl.FLOAT, data instanceof Float32Array ? data : new Float32Array(data));\n    }\n}\n//# sourceMappingURL=vertex-buffer.js.map","import * as array from \"./array\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nexport class ElementBuffer {\n    constructor(glBuffer, count) {\n        this.glBuffer = glBuffer;\n        this.count = count;\n    }\n    static create(dev, props) {\n        return Array.isArray(props)\n            ? ElementBuffer.fromArray(dev, props)\n            : ElementBuffer.fromUint32Array(dev, props.data);\n    }\n    static fromArray(dev, data) {\n        return ElementBuffer.fromUint32Array(dev, array.is2DArray(data)\n            ? array.ravel(data).data\n            : data);\n    }\n    static fromUint32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const arr = Array.isArray(data) ? new Uint32Array(data) : data;\n        const buffer = glutil.createElementArrayBuffer(gl, arr);\n        return new ElementBuffer(buffer, arr.length);\n    }\n}\n//# sourceMappingURL=element-buffer.js.map","import * as assert from \"./assert\";\nimport * as array from \"./array\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nimport { VertexBuffer, } from \"./vertex-buffer\";\nimport { ElementBuffer, } from \"./element-buffer\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nexport class VertexArray {\n    constructor(glVertexArrayObject, hasElements, count, // Either count of vertex data or of elements\n        instanceCount) {\n        this.glVertexArrayObject = glVertexArrayObject;\n        this.hasElements = hasElements;\n        this.count = count;\n        this.instanceCount = instanceCount;\n    }\n    static create(dev, { attributes, elements }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        // Setup attributes\n        const attribDescriptors = [];\n        const attribLocations = [];\n        Object.entries(attributes).forEach(([locationStr, definition]) => {\n            if (!INT_PATTERN.test(locationStr)) {\n                throw new Error(\"Location not a number. Use Command#locate\");\n            }\n            const location = parseInt(locationStr, 10);\n            attribLocations.push(location);\n            attribDescriptors.push(AttributeDescriptor.create(gl, definition));\n        });\n        // Setup elements\n        let elems;\n        if (elements) {\n            elems = elements instanceof ElementBuffer\n                ? elements\n                : ElementBuffer.create(gl, elements);\n        }\n        // Create vertex array\n        const vao = glutil.createVertexArray(gl, attribDescriptors.map((attrib, i) => ({\n            type: attrib.type === \"ipointer\"\n                ? 1 /* IPOINTER */\n                : 0 /* POINTER */,\n            buffer: attrib.buffer.glBuffer,\n            bufferType: attrib.buffer.glType,\n            size: attrib.size,\n            location: attribLocations[i],\n            normalized: attrib.normalized,\n            divisor: attrib.divisor,\n        })), elems ? elems.glBuffer : undefined);\n        // Compute max safe instance count\n        const instancedBuffers = attribDescriptors\n            .filter(buffer => !!buffer.divisor);\n        const instanceCount = instancedBuffers.length\n            ? instancedBuffers\n                .map(b => b.count * b.divisor)\n                .reduce((min, curr) => Math.min(min, curr))\n            : 0;\n        // Create VAO\n        return new VertexArray(vao, !!elems, elems ? elems.count : attribDescriptors[0].count, instanceCount);\n    }\n}\n// TODO: this could use some further refactoring. Currently its just former\n// public API made private.\nclass AttributeDescriptor {\n    static create(gl, props) {\n        if (Array.isArray(props)) {\n            if (array.is2DArray(props)) {\n                const r = array.ravel(props);\n                return new AttributeDescriptor(\"pointer\", VertexBuffer.fromFloat32Array(gl, r.data), r.shape[0], r.shape[1], false, 0);\n            }\n            return new AttributeDescriptor(\"pointer\", VertexBuffer.fromFloat32Array(gl, props), props.length, 1, false, 0);\n        }\n        switch (props.type) {\n            case \"pointer\": return new AttributeDescriptor(props.type, props.value instanceof VertexBuffer\n                ? props.value\n                // Note: typescript is not smart enough to infer what we know\n                : VertexBuffer.create(gl, props.value), props.count, props.size, props.normalized || false, props.divisor || 0);\n            case \"ipointer\": return new AttributeDescriptor(props.type, props.value instanceof VertexBuffer\n                ? props.value\n                // Note: typescript is not smart enough to infer what we know\n                : VertexBuffer.create(gl, props.value), props.count, props.size, false, props.divisor || 0);\n            default: return assert.never(props);\n        }\n    }\n    constructor(type, buffer, count, size, normalized, divisor) {\n        this.type = type;\n        this.buffer = buffer;\n        this.count = count;\n        this.size = size;\n        this.normalized = normalized;\n        this.divisor = divisor;\n    }\n}\n//# sourceMappingURL=vertex-array.js.map","import * as assert from \"./assert\";\nimport { Device } from \"./device\";\nexport class Framebuffer {\n    constructor(glFramebuffer, width, height, glColorAttachments) {\n        this.glFramebuffer = glFramebuffer;\n        this.width = width;\n        this.height = height;\n        this.glColorAttachments = glColorAttachments;\n    }\n    static create(dev, { width, height, color, depth, stencil }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const fbo = gl.createFramebuffer();\n        if (!fbo) {\n            throw new Error(\"Could not create framebuffer\");\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n        const colorBuffers = Array.isArray(color) ? color : [color];\n        colorBuffers.forEach((buffer, i) => {\n            assert.equal(width, buffer.width);\n            assert.equal(height, buffer.height);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.TEXTURE_2D, buffer.glTexture, 0);\n        });\n        if (depth) {\n            assert.equal(width, depth.width);\n            assert.equal(height, depth.height);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depth, 0);\n        }\n        if (stencil) {\n            assert.equal(width, stencil.width);\n            assert.equal(height, stencil.height);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.STENCIL_ATTACHMENT, gl.TEXTURE_2D, stencil, 0);\n        }\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        if (status !== gl.FRAMEBUFFER_COMPLETE) {\n            gl.deleteFramebuffer(fbo);\n            throw new Error(\"Framebuffer not complete\");\n        }\n        return new Framebuffer(fbo, width, height, colorBuffers.map((_, i) => gl.COLOR_ATTACHMENT0 + i));\n    }\n}\n//# sourceMappingURL=framebuffer.js.map"],"names":["never","p","msg","Error","fmt","createProgram","gl","vertex","fragment","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","prettySource","split","map","l","i","join","createArrayBuffer","values","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Array","isArray","Float32Array","STATIC_DRAW","createElementArrayBuffer","elements","ELEMENT_ARRAY_BUFFER","Uint32Array","createVertexArray","buffers","elementBuffer","vao","bindVertexArray","forEach","bufferType","size","location","normalized","divisor","enableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","assert.never","vertexAttribDivisor","createTexture","data","width","height","internalFormat","format","wrapS","wrapT","min","mag","mipmap","texture","bindTexture","TEXTURE_2D","texStorage2D","texSubImage2D","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","generateMipmap","access","props","index","value","mapGlPrimitive","primitive","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","POINTS","LINES","LINE_STRIP","LINE_LOOP","mapGlDepthFunc","func","ALWAYS","NEVER","EQUAL","NOTEQUAL","LESS","LEQUAL","GREATER","GEQUAL","mapGlBlendFunc","ZERO","ONE","SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","DST_COLOR","DST_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_COLOR","ONE_MINUS_CONSTANT_ALPHA","mapGlBlendEquation","equation","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","is2DArray","array","length","ravel","unraveled","outerShape","innerShape","raveled","inner","elem","j","shape","mapGlTextureWrap","wrap","CLAMP_TO_EDGE","REPEAT","MIRRORED_REPEAT","mapGlTextureFilter","filter","NEAREST","LINEAR","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","mapGlTextureInternalFormat","R8","R8_SNORM","R8UI","R8I","R16UI","R16I","R32UI","R32I","R32F","RG8","RG8_SNORM","RG8UI","RG8I","RG16UI","RG16I","RG32UI","RG32I","RG16F","RG32F","RGB8","RGB8_SNORM","RGB8UI","RGB8I","RGB16UI","RGB16I","RGB32UI","RGB32I","RGB16F","RGB32F","RGBA8","RGBA8_SNORM","RGBA8UI","RGBA8I","RGBA16UI","RGBA16I","RGBA32UI","RGBA32I","RGBA16F","RGBA32F","mapGlTextureFormat","RED","RG","RGB","RGBA","RED_INTEGER","RG_INTEGER","RGB_INTEGER","RGBA_INTEGER","mapGlTextureType","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","BYTE","SHORT","INT","FLOAT","Device","[object Object]","canvas","explicitPixelRatio","explicitViewport","this","element","document","body","options","HTMLCanvasElement","fromCanvas","createElement","appendChild","getContext","fromContext","pixelRatio","viewport","extensions","ext","getExtension","dev","update","bufferWidth","drawingBufferWidth","bufferHeight","drawingBufferHeight","canvasWidth","canvasHeight","canvasCSSWidth","clientWidth","canvasCSSHeight","clientHeight","window","devicePixelRatio","dpr","r","g","b","a","fbo","bindFramebuffer","FRAMEBUFFER","glFramebuffer","clearColor","clear","COLOR_BUFFER_BIT","depth","clearDepth","DEPTH_BUFFER_BIT","stencil","clearStencil","STENCIL_BUFFER_BIT","INT_PATTERN","UNKNOWN_ATTRIB_LOCATION","Command","glProgram","glPrimitive","uniformDescriptors","depthDescriptor","blendDescriptor","framebufferDescriptor","vert","frag","uniforms","blend","framebuffer","vertShader","glutil.createShader","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","glutil.createProgram","Object","entries","identifier","uniform","getUniformLocation","UniformDescriptor","DepthDescriptor","mask","range","undefined","BlendDescriptor","src","rgb","alpha","dst","color","FramebufferDescriptor","useProgram","beginDepth","beginBlend","v","executeInner","endBlend","endDepth","attributes","reduce","accum","definition","test","getAttribLocation","drawBuffers","glColorAttachments","updateUniforms","glVertexArrayObject","hasElements","drawElements","count","instanceCount","drawArrays","enable","DEPTH_TEST","depthFunc","depthMask","depthRange","rangeStart","rangeEnd","disable","BLEND","blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","blendEquationSeparate","equationRGB","equationAlpha","blendColor","instCount","drawArraysInstanced","drawElementsInstanced","textureUnitOffset","ident","loc","def","uniform1f","uniform1fv","uniform1i","uniform1iv","uniform1ui","uniform1uiv","x","y","uniform2f","uniform2fv","uniform2i","uniform2iv","uniform2ui","uniform2uiv","z","uniform3f","uniform3fv","uniform3i","uniform3iv","uniform3ui","uniform3uiv","w","uniform4f","uniform4fv","uniform4i","uniform4iv","uniform4ui","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","currentTexture","activeTexture","TEXTURE0","glTexture","VertexBuffer","glType","glBuffer","glutil.createArrayBuffer","fromInt8Array","fromInt16Array","fromInt32Array","fromUint8Array","fromUint16Array","fromUint32Array","fromFloat32Array","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","ElementBuffer","fromArray","array.is2DArray","array.ravel","arr","glutil.createElementArrayBuffer","VertexArray","attribDescriptors","attribLocations","locationStr","parseInt","push","AttributeDescriptor","create","elems","glutil.createVertexArray","attrib","instancedBuffers","curr","Math","Texture","image","fromRGBA8","fromArrayBufferView","glutil.createTexture","Framebuffer","createFramebuffer","colorBuffers","framebufferTexture2D","COLOR_ATTACHMENT0","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","deleteFramebuffer","_"],"mappings":"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"}