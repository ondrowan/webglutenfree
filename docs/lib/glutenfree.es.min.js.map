{"version":3,"file":"glutenfree.es.min.js","sources":["../build/assert.js","../build/glutil.js","../build/command.js","../build/array.js","../build/texture.js","../build/device.js","../build/vertex-buffer.js","../build/element-buffer.js","../build/vertex-array.js","../build/framebuffer.js"],"sourcesContent":["/**\n * This file is an exercise in proprocessor voodoo.\n *\n * \"process.env.NODE_ENV\", gets suplied by the string replacer during a\n * custom build. If \"production\", constant evaluation will eliminate the if\n * blocks, making the functions no-ops, in turn eligible for elimination from\n * their callsites.\n */\n// This does not get replaced and serves as a default velue. If all its uses\n// are eliminated, the value itself is pruned as well.\nconst process = {\n    env: {\n        NODE_ENV: \"development\",\n    },\n};\nexport function truthy(a, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!a) {\n            throw new Error(fmt(msg));\n        }\n    }\n}\nexport function equal(a, b, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (a !== b) {\n            throw new Error(fmt(msg || `Not equal: ${a} ${b}`));\n        }\n    }\n}\nexport function never(a, msg) {\n    // \"never\" can not be eliminated, as its \"return value\" is actually captured\n    // at the callsites. It should never be invoked, though.\n    throw new Error(fmt(msg || `Unexpected object: ${a}`));\n}\nexport function notEmpty(a, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!a.length) {\n            throw new Error(fmt(msg || \"Array empty\"));\n        }\n    }\n}\nfunction fmt(msg) {\n    if (msg) {\n        return `Assertion Failed: ${msg}`;\n    }\n    return `Assertion Failed`;\n}\n//# sourceMappingURL=assert.js.map","import * as assert from \"./assert\";\n/*\n███████╗██╗  ██╗ █████╗ ██████╗ ███████╗██████╗\n██╔════╝██║  ██║██╔══██╗██╔══██╗██╔════╝██╔══██╗\n███████╗███████║███████║██║  ██║█████╗  ██████╔╝\n╚════██║██╔══██║██╔══██║██║  ██║██╔══╝  ██╔══██╗\n███████║██║  ██║██║  ██║██████╔╝███████╗██║  ██║\n╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝ ╚══════╝╚═╝  ╚═╝\n*/\nexport function createProgram(gl, vertex, fragment) {\n    const program = gl.createProgram();\n    if (!program) {\n        throw new Error(\"Could not create Program\");\n    }\n    gl.attachShader(program, vertex);\n    gl.attachShader(program, fragment);\n    gl.linkProgram(program);\n    if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        return program;\n    }\n    const msg = gl.getProgramInfoLog(program);\n    gl.deleteProgram(program);\n    throw new Error(`Could not link shader program: ${msg}`);\n}\nexport function createShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    if (!shader) {\n        throw new Error(\"Could not create Shader\");\n    }\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        return shader;\n    }\n    const msg = gl.getShaderInfoLog(shader);\n    gl.deleteShader(shader);\n    const prettySource = source\n        .split(\"\\n\")\n        .map((l, i) => `${i + 1}: ${l}`)\n        .join(\"\\n\");\n    throw new Error(`Could not compile shader:\\n${msg}\\n${prettySource}`);\n}\n/*\n██████╗ ██╗   ██╗███████╗███████╗███████╗██████╗\n██╔══██╗██║   ██║██╔════╝██╔════╝██╔════╝██╔══██╗\n██████╔╝██║   ██║█████╗  █████╗  █████╗  ██████╔╝\n██╔══██╗██║   ██║██╔══╝  ██╔══╝  ██╔══╝  ██╔══██╗\n██████╔╝╚██████╔╝██║     ██║     ███████╗██║  ██║\n╚═════╝  ╚═════╝ ╚═╝     ╚═╝     ╚══════╝╚═╝  ╚═╝\n*/\nexport function createArrayBuffer(gl, values) {\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n        throw new Error(\"Could not create buffer\");\n    }\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, Array.isArray(values)\n        ? new Float32Array(values)\n        : values, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    return buffer;\n}\nexport function createElementArrayBuffer(gl, elements) {\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n        throw new Error(\"Could not create buffer\");\n    }\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, Array.isArray(elements)\n        ? new Uint32Array(elements)\n        : elements, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    return buffer;\n}\nexport function createVertexArray(gl, buffers, elementBuffer) {\n    const vao = gl.createVertexArray();\n    if (!vao) {\n        throw new Error(\"Could not create Vertex Array Object\");\n    }\n    gl.bindVertexArray(vao);\n    buffers.forEach(({ type, buffer, bufferType, size, location, normalized = false, divisor, }) => {\n        // Enable sending attribute arrays for location\n        gl.enableVertexAttribArray(location);\n        // Send buffer\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        switch (type) {\n            case 0 /* POINTER */:\n                gl.vertexAttribPointer(location, size, bufferType, normalized, 0, 0);\n                break;\n            case 1 /* IPOINTER */:\n                gl.vertexAttribIPointer(location, size, bufferType, 0, 0);\n                break;\n            default: assert.never(type);\n        }\n        if (divisor) {\n            gl.vertexAttribDivisor(location, divisor);\n        }\n    });\n    if (elementBuffer) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    }\n    gl.bindVertexArray(null);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    return vao;\n}\n/*\n████████╗███████╗██╗  ██╗████████╗██╗   ██╗██████╗ ███████╗\n╚══██╔══╝██╔════╝╚██╗██╔╝╚══██╔══╝██║   ██║██╔══██╗██╔════╝\n   ██║   █████╗   ╚███╔╝    ██║   ██║   ██║██████╔╝█████╗\n   ██║   ██╔══╝   ██╔██╗    ██║   ██║   ██║██╔══██╗██╔══╝\n   ██║   ███████╗██╔╝ ██╗   ██║   ╚██████╔╝██║  ██║███████╗\n   ╚═╝   ╚══════╝╚═╝  ╚═╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚══════╝\n*/\nexport function createTexture(gl, data, width, height, internalFormat, format, type, wrapS, wrapT, min, mag, mipmap) {\n    const texture = gl.createTexture();\n    if (!texture) {\n        throw new Error(\"Could not create texture\");\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, internalFormat, width, height);\n    if (data) {\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, width, height, format, type, data);\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, min);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mag);\n    if (mipmap) {\n        gl.generateMipmap(gl.TEXTURE_2D);\n    }\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return texture;\n}\n//# sourceMappingURL=glutil.js.map","import * as assert from \"./assert\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nconst UNKNOWN_ATTRIB_LOCATION = -1;\nexport class Command {\n    constructor(gl, glProgram, glPrimitive, uniformDescriptors, blendDescriptor, framebufferDescriptor) {\n        this.gl = gl;\n        this.glProgram = glProgram;\n        this.glPrimitive = glPrimitive;\n        this.uniformDescriptors = uniformDescriptors;\n        this.blendDescriptor = blendDescriptor;\n        this.framebufferDescriptor = framebufferDescriptor;\n    }\n    static create(dev, { vert, frag, uniforms = {}, primitive = \"triangles\" /* TRIANGLES */, blend = false, framebuffer, }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const vertShader = glutil.createShader(gl, gl.VERTEX_SHADER, vert);\n        const fragShader = glutil.createShader(gl, gl.FRAGMENT_SHADER, frag);\n        const program = glutil.createProgram(gl, vertShader, fragShader);\n        gl.deleteShader(vertShader);\n        gl.deleteShader(fragShader);\n        const uniformDescriptors = Object.entries(uniforms)\n            .map(([identifier, uniform]) => {\n            const location = gl.getUniformLocation(program, identifier);\n            if (!location) {\n                throw new Error(`No location for uniform: ${identifier}`);\n            }\n            return new UniformDescriptor(identifier, location, uniform);\n        });\n        const blendDescriptor = blend\n            ? new BlendDescriptor(mapGlBlendFunc(gl, typeof blend.src === \"object\" ? blend.src.rgb : blend.src), mapGlBlendFunc(gl, typeof blend.src === \"object\" ? blend.src.alpha : blend.src), mapGlBlendFunc(gl, typeof blend.dst === \"object\" ? blend.dst.rgb : blend.dst), mapGlBlendFunc(gl, typeof blend.dst === \"object\" ? blend.dst.alpha : blend.dst), mapGlBlendEquation(gl, blend.equation\n                ? typeof blend.equation === \"object\"\n                    ? blend.equation.rgb\n                    : blend.equation\n                : \"add\" /* ADD */), mapGlBlendEquation(gl, blend.equation\n                ? typeof blend.equation === \"object\"\n                    ? blend.equation.alpha\n                    : blend.equation\n                : \"add\" /* ADD */), blend.color)\n            : undefined;\n        const framebufferDescriptor = framebuffer\n            ? new FramebufferDescriptor(framebuffer)\n            : undefined;\n        return new Command(gl, program, mapGlPrimitive(gl, primitive), uniformDescriptors, blendDescriptor, framebufferDescriptor);\n    }\n    execute(vao, props) {\n        const { gl, glProgram } = this;\n        gl.useProgram(glProgram);\n        this.beginBlend();\n        if (Array.isArray(vao)) {\n            vao.forEach((v, i) => this.executeInner(v, props, i));\n        }\n        else {\n            this.executeInner(vao, props, 0);\n        }\n        this.endBlend();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindVertexArray(null);\n    }\n    locate({ attributes, elements }) {\n        const { gl, glProgram } = this;\n        const locatedAttributes = Object.entries(attributes)\n            .reduce((accum, [identifier, definition]) => {\n            if (INT_PATTERN.test(identifier)) {\n                accum[identifier] = definition;\n            }\n            else {\n                const location = gl.getAttribLocation(glProgram, identifier);\n                if (location === UNKNOWN_ATTRIB_LOCATION) {\n                    throw new Error(`No location for attrib: ${identifier}`);\n                }\n                accum[location] = definition;\n            }\n            return accum;\n        }, {});\n        return { attributes: locatedAttributes, elements };\n    }\n    executeInner(vao, props, index) {\n        const gl = this.gl;\n        let bufferWidth = gl.drawingBufferWidth;\n        let bufferHeight = gl.drawingBufferHeight;\n        const fbo = this.framebufferDescriptor\n            ? access(props, index, this.framebufferDescriptor.definition)\n            : undefined;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n            gl.drawBuffers(fbo.glColorAttachments);\n            bufferWidth = fbo.width;\n            bufferHeight = fbo.height;\n        }\n        gl.viewport(0, 0, bufferWidth, bufferHeight);\n        this.updateUniforms(props, index);\n        gl.bindVertexArray(vao.glVertexArrayObject);\n        if (vao.hasElements) {\n            this.drawElements(vao.count, vao.instanceCount);\n        }\n        else {\n            this.drawArrays(vao.count, vao.instanceCount);\n        }\n    }\n    beginBlend() {\n        const { gl, blendDescriptor } = this;\n        if (blendDescriptor) {\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(blendDescriptor.srcRGB, blendDescriptor.dstRGB, blendDescriptor.srcAlpha, blendDescriptor.dstAlpha);\n            gl.blendEquationSeparate(blendDescriptor.equationRGB, blendDescriptor.equationAlpha);\n            if (blendDescriptor.color) {\n                const [r, g, b, a] = blendDescriptor.color;\n                gl.blendColor(r, g, b, a);\n            }\n        }\n    }\n    endBlend() {\n        const { gl, blendDescriptor } = this;\n        if (blendDescriptor) {\n            gl.disable(gl.BLEND);\n        }\n    }\n    drawArrays(count, instCount) {\n        const { gl, glPrimitive } = this;\n        if (instCount) {\n            gl.drawArraysInstanced(glPrimitive, 0, count, instCount);\n        }\n        else {\n            gl.drawArrays(glPrimitive, 0, count);\n        }\n    }\n    drawElements(count, instCount) {\n        const { gl, glPrimitive } = this;\n        if (instCount) {\n            gl.drawElementsInstanced(glPrimitive, count, gl.UNSIGNED_INT, // We only support u32 indices\n            0, instCount);\n        }\n        else {\n            gl.drawElements(glPrimitive, count, gl.UNSIGNED_INT, // We only support u32 indices\n            0);\n        }\n    }\n    updateUniforms(props, index) {\n        const gl = this.gl;\n        let textureUnitOffset = 0;\n        this.uniformDescriptors.forEach(({ identifier: ident, location: loc, definition: def, }) => {\n            switch (def.type) {\n                case \"1f\":\n                    gl.uniform1f(loc, access(props, index, def.value));\n                    break;\n                case \"1fv\":\n                    gl.uniform1fv(loc, access(props, index, def.value));\n                    break;\n                case \"1i\":\n                    gl.uniform1i(loc, access(props, index, def.value));\n                    break;\n                case \"1iv\":\n                    gl.uniform1iv(loc, access(props, index, def.value));\n                    break;\n                case \"1ui\":\n                    gl.uniform1ui(loc, access(props, index, def.value));\n                    break;\n                case \"1uiv\":\n                    gl.uniform1uiv(loc, access(props, index, def.value));\n                    break;\n                case \"2f\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2f(loc, x, y);\n                    break;\n                }\n                case \"2fv\":\n                    gl.uniform2fv(loc, access(props, index, def.value));\n                    break;\n                case \"2i\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2i(loc, x, y);\n                    break;\n                }\n                case \"2iv\":\n                    gl.uniform2iv(loc, access(props, index, def.value));\n                    break;\n                case \"2ui\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2ui(loc, x, y);\n                    break;\n                }\n                case \"2uiv\":\n                    gl.uniform2uiv(loc, access(props, index, def.value));\n                    break;\n                case \"3f\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3f(loc, x, y, z);\n                    break;\n                }\n                case \"3fv\":\n                    gl.uniform3fv(loc, access(props, index, def.value));\n                    break;\n                case \"3i\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3i(loc, x, y, z);\n                    break;\n                }\n                case \"3iv\":\n                    gl.uniform3iv(loc, access(props, index, def.value));\n                    break;\n                case \"3ui\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3ui(loc, x, y, z);\n                    break;\n                }\n                case \"3uiv\":\n                    gl.uniform3uiv(loc, access(props, index, def.value));\n                    break;\n                case \"4f\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4f(loc, x, y, z, w);\n                    break;\n                }\n                case \"4fv\":\n                    gl.uniform4fv(loc, access(props, index, def.value));\n                    break;\n                case \"4i\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4i(loc, x, y, z, w);\n                    break;\n                }\n                case \"4iv\":\n                    gl.uniform4iv(loc, access(props, index, def.value));\n                    break;\n                case \"4ui\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4ui(loc, x, y, z, w);\n                    break;\n                }\n                case \"4uiv\":\n                    gl.uniform4uiv(loc, access(props, index, def.value));\n                    break;\n                case \"matrix2fv\":\n                    gl.uniformMatrix2fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix3fv\":\n                    gl.uniformMatrix3fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix4fv\":\n                    gl.uniformMatrix4fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"texture\":\n                    // TODO: is this the best way? (is it fast? can we cache?)\n                    const texture = access(props, index, def.value);\n                    const currentTexture = textureUnitOffset++;\n                    gl.activeTexture(gl.TEXTURE0 + currentTexture);\n                    gl.bindTexture(gl.TEXTURE_2D, texture.glTexture);\n                    gl.uniform1i(loc, currentTexture);\n                    break;\n                default:\n                    assert.never(def, `Unknown uniform type: (${ident})`);\n                    break;\n            }\n        });\n    }\n}\nfunction access(props, index, value) {\n    return typeof value === \"function\" ? value(props, index) : value;\n}\nclass BlendDescriptor {\n    constructor(srcRGB, srcAlpha, dstRGB, dstAlpha, equationRGB, equationAlpha, color) {\n        this.srcRGB = srcRGB;\n        this.srcAlpha = srcAlpha;\n        this.dstRGB = dstRGB;\n        this.dstAlpha = dstAlpha;\n        this.equationRGB = equationRGB;\n        this.equationAlpha = equationAlpha;\n        this.color = color;\n    }\n}\nclass FramebufferDescriptor {\n    constructor(definition) {\n        this.definition = definition;\n    }\n}\nclass UniformDescriptor {\n    constructor(identifier, location, definition) {\n        this.identifier = identifier;\n        this.location = location;\n        this.definition = definition;\n    }\n}\nfunction mapGlPrimitive(gl, primitive) {\n    switch (primitive) {\n        case \"triangles\" /* TRIANGLES */: return gl.TRIANGLES;\n        case \"triangle-strip\" /* TRIANGLE_STRIP */: return gl.TRIANGLE_STRIP;\n        case \"triangle-fan\" /* TRIANGLE_FAN */: return gl.TRIANGLE_FAN;\n        case \"points\" /* POINTS */: return gl.POINTS;\n        case \"lines\" /* LINES */: return gl.LINES;\n        case \"line-strip\" /* LINE_STRIP */: return gl.LINE_STRIP;\n        case \"line-loop\" /* LINE_LOOP */: return gl.LINE_LOOP;\n        default: return assert.never(primitive);\n    }\n}\nfunction mapGlBlendFunc(gl, func) {\n    switch (func) {\n        case \"zero\" /* ZERO */: return gl.ZERO;\n        case \"one\" /* ONE */: return gl.ONE;\n        case \"src-color\" /* SRC_COLOR */: return gl.SRC_COLOR;\n        case \"src-alpha\" /* SRC_ALPHA */: return gl.SRC_ALPHA;\n        case \"one-minus-src-color\" /* ONE_MINUS_SRC_COLOR */: return gl.ONE_MINUS_SRC_COLOR;\n        case \"one-minus-src-alpha\" /* ONE_MINUS_SRC_ALPHA */: return gl.ONE_MINUS_SRC_ALPHA;\n        case \"dst-color\" /* DST_COLOR */: return gl.DST_COLOR;\n        case \"dst-alpha\" /* DST_ALPHA */: return gl.DST_ALPHA;\n        case \"one-minus-dst-color\" /* ONE_MINUS_DST_COLOR */: return gl.ONE_MINUS_DST_COLOR;\n        case \"one-minus-dst-alpha\" /* ONE_MINUS_DST_ALPHA */: return gl.ONE_MINUS_DST_ALPHA;\n        case \"constant-color\" /* CONSTANT_COLOR */: return gl.CONSTANT_COLOR;\n        case \"constant-alpha\" /* CONSTANT_ALPHA */: return gl.CONSTANT_ALPHA;\n        case \"one-minus-constant-color\" /* ONE_MINUS_CONSTANT_COLOR */:\n            return gl.ONE_MINUS_CONSTANT_COLOR;\n        case \"one-minus-constant-alpha\" /* ONE_MINUS_CONSTANT_ALPHA */:\n            return gl.ONE_MINUS_CONSTANT_ALPHA;\n        default: return assert.never(func);\n    }\n}\nfunction mapGlBlendEquation(gl, equation) {\n    switch (equation) {\n        case \"add\" /* ADD */: return gl.FUNC_ADD;\n        case \"subtract\" /* SUBTRACT */: return gl.FUNC_SUBTRACT;\n        case \"reverse-subtract\" /* REVERSE_SUBTRACT */: return gl.FUNC_REVERSE_SUBTRACT;\n        case \"min\" /* MIN */: return gl.MIN;\n        case \"max\" /* MAX */: return gl.MAX;\n        default: return assert.never(equation);\n    }\n}\n//# sourceMappingURL=command.js.map","/**\n * Chacks whether array is at least 2d, mostly useful because of return type\n * predicate.\n */\nexport function is2DArray(array) {\n    return !!array.length || Array.isArray(array[0]);\n}\n/**\n * Flatten 2d array and compute its former shape.\n * eg.\n * ravel([\n *      [1, 2, 3],\n *      [4, 5, 6],\n * ])\n * produces {\n *      data: [1, 2, 3, 4, 5, 6],\n *      shape: [2, 3],\n * }\n */\nexport function ravel(unraveled) {\n    const outerShape = unraveled.length;\n    const innerShape = outerShape ? unraveled[0].length : 0;\n    const raveled = new Array(innerShape * outerShape);\n    unraveled.forEach((inner, i) => {\n        inner.forEach((elem, j) => {\n            raveled[innerShape * i + j] = elem;\n        });\n    });\n    return { data: raveled, shape: [outerShape, innerShape] };\n}\n//# sourceMappingURL=array.js.map","import * as assert from \"./assert\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nexport class Texture {\n    constructor(glTexture, width, height) {\n        this.glTexture = glTexture;\n        this.width = width;\n        this.height = height;\n    }\n    static fromImage(dev, image, options) {\n        return Texture.fromRGBA8(dev, image.data, image.width, image.height, options);\n    }\n    static fromRGBA8(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Uint8Array\n            ? data\n            // Note: we also have to convert Uint8ClampedArray to Uint8Array\n            // because of webgl bug\n            // https://github.com/KhronosGroup/WebGL/issues/1533\n            : new Uint8Array(data), width, height, \"RGBA8\" /* RGBA8 */, \"RGBA\" /* RGBA */, \"UNSIGNED_BYTE\" /* UNSIGNED_BYTE */, options);\n    }\n    static fromRG16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RG16F\" /* RG16F */, \"RG\" /* RG */, \"FLOAT\" /* FLOAT */, options);\n    }\n    static fromRGB16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGB16F\" /* RGB16F */, \"RGB\" /* RGB */, \"FLOAT\" /* FLOAT */, options);\n    }\n    static fromRGBA16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGBA16F\" /* RGBA16F */, \"RGBA\" /* RGBA */, \"FLOAT\" /* FLOAT */, options);\n    }\n    static fromRGB32F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGB32F\" /* RGB32F */, \"RGB\" /* RGB */, \"FLOAT\" /* FLOAT */, options);\n    }\n    static fromRGBA32F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGBA32F\" /* RGBA32F */, \"RGBA\" /* RGBA */, \"FLOAT\" /* FLOAT */, options);\n    }\n    static fromArrayBufferView(dev, data, width, height, internalFormat, format, type, { min = \"nearest\" /* NEAREST */, mag = \"nearest\" /* NEAREST */, wrapS = \"clamp-to-edge\" /* CLAMP_TO_EDGE */, wrapT = \"clamp-to-edge\" /* CLAMP_TO_EDGE */, mipmap = false, } = {}) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new Texture(glutil.createTexture(gl, data, width, height, mapGlTextureInternalFormat(gl, internalFormat), mapGlTextureFormat(gl, format), mapGlTextureType(gl, type), mapGlTextureWrap(gl, wrapS), mapGlTextureWrap(gl, wrapT), mapGlTextureFilter(gl, min), mapGlTextureFilter(gl, mag), mipmap), width, height);\n    }\n}\nfunction mapGlTextureWrap(gl, wrap) {\n    switch (wrap) {\n        case \"clamp-to-edge\" /* CLAMP_TO_EDGE */: return gl.CLAMP_TO_EDGE;\n        case \"repeat\" /* REPEAT */: return gl.REPEAT;\n        case \"mirrored-repeat\" /* MIRRORED_REPEAT */: return gl.MIRRORED_REPEAT;\n        default: return assert.never(wrap);\n    }\n}\nfunction mapGlTextureFilter(gl, filter) {\n    switch (filter) {\n        case \"nearest\" /* NEAREST */: return gl.NEAREST;\n        case \"linear\" /* LINEAR */: return gl.LINEAR;\n        case \"nearest-mipmap-nearest\" /* NEAREST_MIPMAP_NEAREST */:\n            return gl.NEAREST_MIPMAP_NEAREST;\n        case \"linear-mipmap-nearest\" /* LINEAR_MIPMAP_NEAREST */:\n            return gl.LINEAR_MIPMAP_NEAREST;\n        case \"nearest-mipmap-linear\" /* NEAREST_MIPMAP_LINEAR */:\n            return gl.NEAREST_MIPMAP_LINEAR;\n        case \"linear-mipmap-linear\" /* LINEAR_MIPMAP_LINEAR */:\n            return gl.LINEAR_MIPMAP_LINEAR;\n        default: return assert.never(filter);\n    }\n}\nfunction mapGlTextureInternalFormat(gl, internalFormat) {\n    switch (internalFormat) {\n        // R\n        case \"R8\" /* R8 */: return gl.R8;\n        case \"R8_SNORM\" /* R8_SNORM */: return gl.R8_SNORM;\n        case \"R8UI\" /* R8UI */: return gl.R8UI;\n        case \"R8I\" /* R8I */: return gl.R8I;\n        case \"R16UI\" /* R16UI */: return gl.R16UI;\n        case \"R16I\" /* R16I */: return gl.R16I;\n        case \"R32UI\" /* R32UI */: return gl.R32UI;\n        case \"R32I\" /* R32I */: return gl.R32I;\n        case \"R16F\" /* R16F */: return gl.R16I;\n        case \"R32F\" /* R32F */: return gl.R32F;\n        // RG\n        case \"RG8\" /* RG8 */: return gl.RG8;\n        case \"RG8_SNORM\" /* RG8_SNORM */: return gl.RG8_SNORM;\n        case \"RG8UI\" /* RG8UI */: return gl.RG8UI;\n        case \"RG8I\" /* RG8I */: return gl.RG8I;\n        case \"RG16UI\" /* RG16UI */: return gl.RG16UI;\n        case \"RG16I\" /* RG16I */: return gl.RG16I;\n        case \"RG32UI\" /* RG32UI */: return gl.RG32UI;\n        case \"RG32I\" /* RG32I */: return gl.RG32I;\n        case \"RG16F\" /* RG16F */: return gl.RG16F;\n        case \"RG32F\" /* RG32F */: return gl.RG32F;\n        // RGB\n        case \"RGB8\" /* RGB8 */: return gl.RGB8;\n        case \"RGB8_SNORM\" /* RGB8_SNORM */: return gl.RGB8_SNORM;\n        case \"RGB8UI\" /* RGB8UI */: return gl.RGB8UI;\n        case \"RGB8I\" /* RGB8I */: return gl.RGB8I;\n        case \"RGB16UI\" /* RGB16UI */: return gl.RGB16UI;\n        case \"RGB16I\" /* RGB16I */: return gl.RGB16I;\n        case \"RGB32UI\" /* RGB32UI */: return gl.RGB32UI;\n        case \"RGB32I\" /* RGB32I */: return gl.RGB32I;\n        case \"RGB16F\" /* RGB16F */: return gl.RGB16F;\n        case \"RGB32F\" /* RGB32F */: return gl.RGB32F;\n        // RGBA\n        case \"RGBA8\" /* RGBA8 */: return gl.RGBA8;\n        case \"RGBA8_SNORM\" /* RGBA8_SNORM */: return gl.RGBA8_SNORM;\n        case \"RGBA8UI\" /* RGBA8UI */: return gl.RGBA8UI;\n        case \"RGBA8I\" /* RGBA8I */: return gl.RGBA8I;\n        case \"RGBA16UI\" /* RGBA16UI */: return gl.RGBA16UI;\n        case \"RGBA16I\" /* RGBA16I */: return gl.RGBA16I;\n        case \"RGBA32UI\" /* RGBA32UI */: return gl.RGBA32UI;\n        case \"RGBA32I\" /* RGBA32I */: return gl.RGBA32I;\n        case \"RGBA16F\" /* RGBA16F */: return gl.RGBA16F;\n        case \"RGBA32F\" /* RGBA32F */: return gl.RGBA32F;\n        default: return assert.never(internalFormat);\n    }\n}\nfunction mapGlTextureFormat(gl, format) {\n    switch (format) {\n        case \"RED\" /* RED */: return gl.RED;\n        case \"RG\" /* RG */: return gl.RG;\n        case \"RGB\" /* RGB */: return gl.RGB;\n        case \"RGBA\" /* RGBA */: return gl.RGBA;\n        case \"RED_INTEGER\" /* RED_INTEGER */: return gl.RED_INTEGER;\n        case \"RG_INTEGER\" /* RG_INTEGER */: return gl.RG_INTEGER;\n        case \"RGB_INTEGER\" /* RGB_INTEGER */: return gl.RGB_INTEGER;\n        case \"RGBA_INTEGER\" /* RGBA_INTEGER */: return gl.RGBA_INTEGER;\n        default: return assert.never(format);\n    }\n}\nfunction mapGlTextureType(gl, type) {\n    switch (type) {\n        case \"UNSIGNED_BYTE\" /* UNSIGNED_BYTE */: return gl.UNSIGNED_BYTE;\n        case \"UNSIGNED_SHORT\" /* UNSIGNED_SHORT */: return gl.UNSIGNED_SHORT;\n        case \"UNSIGNED_INT\" /* UNSIGNED_INT */: return gl.UNSIGNED_INT;\n        case \"BYTE\" /* BYTE */: return gl.BYTE;\n        case \"SHORT\" /* SHORT */: return gl.SHORT;\n        case \"INT\" /* INT */: return gl.INT;\n        case \"FLOAT\" /* FLOAT */: return gl.FLOAT;\n    }\n}\n//# sourceMappingURL=texture.js.map","export class Device {\n    constructor(gl, canvas, explicitPixelRatio, explicitViewport) {\n        this.gl = gl;\n        this.canvas = canvas;\n        this.explicitPixelRatio = explicitPixelRatio;\n        this.explicitViewport = explicitViewport;\n    }\n    static mount(element = document.body, options) {\n        if (element instanceof HTMLCanvasElement) {\n            return Device.fromCanvas(element, options);\n        }\n        const canvas = document.createElement(\"canvas\");\n        element.appendChild(canvas);\n        return Device.fromCanvas(canvas, options);\n    }\n    static fromCanvas(canvas, options) {\n        const gl = canvas.getContext(\"webgl2\");\n        if (!gl) {\n            throw new Error(\"Could not get webgl2 context\");\n        }\n        return Device.fromContext(gl, options);\n    }\n    static fromContext(gl, { pixelRatio, viewport, extensions, } = {}) {\n        if (extensions) {\n            extensions.forEach(ext => {\n                if (!gl.getExtension(ext)) {\n                    throw new Error(`Could not get extension ${ext}`);\n                }\n            });\n        }\n        const dev = new Device(gl, gl.canvas, pixelRatio, viewport);\n        dev.update();\n        return dev;\n    }\n    get bufferWidth() {\n        return this.gl.drawingBufferWidth;\n    }\n    get bufferHeight() {\n        return this.gl.drawingBufferHeight;\n    }\n    get canvasWidth() {\n        return this.canvas.width;\n    }\n    get canvasHeight() {\n        return this.canvas.height;\n    }\n    get canvasCSSWidth() {\n        return this.canvas.clientWidth;\n    }\n    get canvasCSSHeight() {\n        return this.canvas.clientHeight;\n    }\n    get pixelRatio() {\n        return this.explicitPixelRatio || window.devicePixelRatio;\n    }\n    update() {\n        const dpr = this.pixelRatio;\n        const canvas = this.canvas;\n        const width = this.explicitViewport\n            && this.explicitViewport[0]\n            || canvas.clientWidth * dpr;\n        const height = this.explicitViewport\n            && this.explicitViewport[1]\n            || canvas.clientHeight * dpr;\n        if (width !== canvas.width) {\n            canvas.width = width;\n        }\n        if (height !== canvas.height) {\n            canvas.height = height;\n        }\n    }\n    clearColorBuffer(r, g, b, a, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearDepthBuffer(depth, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearDepth(depth);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearStencilBuffer(stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearStencil(stencil);\n        gl.clear(gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearColorAndDepthBuffers(r, g, b, a, depth, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearDepthAndStencilBuffers(depth, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearDepth(depth);\n        gl.clearStencil(stencil);\n        gl.clear(gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearColorAndStencilBuffers(r, g, b, a, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearStencil(stencil);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clear(r, g, b, a, depth, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clearStencil(stencil);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n}\n//# sourceMappingURL=device.js.map","import * as assert from \"./assert\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nexport class VertexBuffer {\n    constructor(gl, type, glType, data) {\n        this.gl = gl;\n        this.type = type;\n        this.glType = glType;\n        this.glBuffer = glutil.createArrayBuffer(gl, data);\n    }\n    static create(dev, props) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        switch (props.type) {\n            case \"i8\": return VertexBuffer.fromInt8Array(gl, props.data);\n            case \"i16\": return VertexBuffer.fromInt16Array(gl, props.data);\n            case \"i32\": return VertexBuffer.fromInt32Array(gl, props.data);\n            case \"u8\": return VertexBuffer.fromUint8Array(gl, props.data);\n            case \"u16\": return VertexBuffer.fromUint16Array(gl, props.data);\n            case \"u32\": return VertexBuffer.fromUint32Array(gl, props.data);\n            case \"f32\": return VertexBuffer.fromFloat32Array(gl, props.data);\n            default: return assert.never(props);\n        }\n    }\n    static fromInt8Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"i8\", gl.BYTE, data instanceof Int8Array ? data : new Int8Array(data));\n    }\n    static fromInt16Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"i16\", gl.SHORT, data instanceof Int16Array ? data : new Int16Array(data));\n    }\n    static fromInt32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"i32\", gl.INT, data instanceof Int32Array ? data : new Int32Array(data));\n    }\n    static fromUint8Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"u8\", gl.UNSIGNED_BYTE, \n        // Note: we also have to convert Uint8ClampedArray to Uint8Array\n        // because of webgl bug\n        // https://github.com/KhronosGroup/WebGL/issues/1533\n        data instanceof Uint8Array ? data : new Uint8Array(data));\n    }\n    static fromUint16Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"u16\", gl.UNSIGNED_SHORT, data instanceof Uint16Array ? data : new Uint16Array(data));\n    }\n    static fromUint32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"u32\", gl.UNSIGNED_INT, data instanceof Uint32Array ? data : new Uint32Array(data));\n    }\n    static fromFloat32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"f32\", gl.FLOAT, data instanceof Float32Array ? data : new Float32Array(data));\n    }\n}\n//# sourceMappingURL=vertex-buffer.js.map","import * as array from \"./array\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nexport class ElementBuffer {\n    constructor(glBuffer, count) {\n        this.glBuffer = glBuffer;\n        this.count = count;\n    }\n    static create(dev, props) {\n        return Array.isArray(props)\n            ? ElementBuffer.fromArray(dev, props)\n            : ElementBuffer.fromUint32Array(dev, props.data);\n    }\n    static fromArray(dev, data) {\n        return ElementBuffer.fromUint32Array(dev, array.is2DArray(data)\n            ? array.ravel(data).data\n            : data);\n    }\n    static fromUint32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const arr = Array.isArray(data) ? new Uint32Array(data) : data;\n        const buffer = glutil.createElementArrayBuffer(gl, arr);\n        return new ElementBuffer(buffer, arr.length);\n    }\n}\n//# sourceMappingURL=element-buffer.js.map","import * as assert from \"./assert\";\nimport * as array from \"./array\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nimport { VertexBuffer, } from \"./vertex-buffer\";\nimport { ElementBuffer, } from \"./element-buffer\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nexport class VertexArray {\n    constructor(glVertexArrayObject, hasElements, count, // Either count of vertex data or of elements\n        instanceCount) {\n        this.glVertexArrayObject = glVertexArrayObject;\n        this.hasElements = hasElements;\n        this.count = count;\n        this.instanceCount = instanceCount;\n    }\n    static create(dev, { attributes, elements }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        // Setup attributes\n        const attribDescriptors = [];\n        const attribLocations = [];\n        Object.entries(attributes).forEach(([locationStr, definition]) => {\n            if (!INT_PATTERN.test(locationStr)) {\n                throw new Error(\"Location not a number. Use Command#locate\");\n            }\n            const location = parseInt(locationStr, 10);\n            attribLocations.push(location);\n            attribDescriptors.push(AttributeDescriptor.create(gl, definition));\n        });\n        // Setup elements\n        let elems;\n        if (elements) {\n            elems = elements instanceof ElementBuffer\n                ? elements\n                : ElementBuffer.create(gl, elements);\n        }\n        // Create vertex array\n        const vao = glutil.createVertexArray(gl, attribDescriptors.map((attrib, i) => ({\n            type: attrib.type === \"ipointer\"\n                ? 1 /* IPOINTER */\n                : 0 /* POINTER */,\n            buffer: attrib.buffer.glBuffer,\n            bufferType: attrib.buffer.glType,\n            size: attrib.size,\n            location: attribLocations[i],\n            normalized: attrib.normalized,\n            divisor: attrib.divisor,\n        })), elems ? elems.glBuffer : undefined);\n        // Compute max safe instance count\n        const instancedBuffers = attribDescriptors\n            .filter(buffer => !!buffer.divisor);\n        const instanceCount = instancedBuffers.length\n            ? instancedBuffers\n                .map(b => b.count * b.divisor)\n                .reduce((min, curr) => Math.min(min, curr))\n            : 0;\n        // Create VAO\n        return new VertexArray(vao, !!elems, elems ? elems.count : attribDescriptors[0].count, instanceCount);\n    }\n}\n// TODO: this could use some further refactoring. Currently its just former\n// public API made private.\nclass AttributeDescriptor {\n    static create(gl, props) {\n        if (Array.isArray(props)) {\n            if (array.is2DArray(props)) {\n                const r = array.ravel(props);\n                return new AttributeDescriptor(\"pointer\", VertexBuffer.fromFloat32Array(gl, r.data), r.shape[0], r.shape[1], false, 0);\n            }\n            return new AttributeDescriptor(\"pointer\", VertexBuffer.fromFloat32Array(gl, props), props.length, 1, false, 0);\n        }\n        switch (props.type) {\n            case \"pointer\": return new AttributeDescriptor(props.type, props.value instanceof VertexBuffer\n                ? props.value\n                // Note: typescript is not smart enough to infer what we know\n                : VertexBuffer.create(gl, props.value), props.count, props.size, props.normalized || false, props.divisor || 0);\n            case \"ipointer\": return new AttributeDescriptor(props.type, props.value instanceof VertexBuffer\n                ? props.value\n                // Note: typescript is not smart enough to infer what we know\n                : VertexBuffer.create(gl, props.value), props.count, props.size, false, props.divisor || 0);\n            default: return assert.never(props);\n        }\n    }\n    constructor(type, buffer, count, size, normalized, divisor) {\n        this.type = type;\n        this.buffer = buffer;\n        this.count = count;\n        this.size = size;\n        this.normalized = normalized;\n        this.divisor = divisor;\n    }\n}\n//# sourceMappingURL=vertex-array.js.map","import * as assert from \"./assert\";\nimport { Device } from \"./device\";\nexport class Framebuffer {\n    constructor(glFramebuffer, width, height, glColorAttachments) {\n        this.glFramebuffer = glFramebuffer;\n        this.width = width;\n        this.height = height;\n        this.glColorAttachments = glColorAttachments;\n    }\n    static create(dev, { width, height, color, depth, stencil }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const fbo = gl.createFramebuffer();\n        if (!fbo) {\n            throw new Error(\"Could not create framebuffer\");\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n        const colorBuffers = Array.isArray(color) ? color : [color];\n        colorBuffers.forEach((buffer, i) => {\n            assert.equal(width, buffer.width);\n            assert.equal(height, buffer.height);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.TEXTURE_2D, buffer.glTexture, 0);\n        });\n        if (depth) {\n            assert.equal(width, depth.width);\n            assert.equal(height, depth.height);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depth, 0);\n        }\n        if (stencil) {\n            assert.equal(width, stencil.width);\n            assert.equal(height, stencil.height);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.STENCIL_ATTACHMENT, gl.TEXTURE_2D, stencil, 0);\n        }\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        if (status !== gl.FRAMEBUFFER_COMPLETE) {\n            gl.deleteFramebuffer(fbo);\n            throw new Error(\"Framebuffer not complete\");\n        }\n        return new Framebuffer(fbo, width, height, colorBuffers.map((_, i) => gl.COLOR_ATTACHMENT0 + i));\n    }\n}\n//# sourceMappingURL=framebuffer.js.map"],"names":["never","a","msg","Error","fmt","createProgram","gl","vertex","fragment","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","prettySource","split","map","l","i","join","createArrayBuffer","values","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Array","isArray","Float32Array","STATIC_DRAW","createElementArrayBuffer","elements","ELEMENT_ARRAY_BUFFER","Uint32Array","createVertexArray","buffers","elementBuffer","vao","bindVertexArray","forEach","bufferType","size","location","normalized","divisor","enableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","assert.never","vertexAttribDivisor","createTexture","data","width","height","internalFormat","format","wrapS","wrapT","min","mag","mipmap","texture","bindTexture","TEXTURE_2D","texStorage2D","texSubImage2D","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","generateMipmap","access","props","index","value","mapGlPrimitive","primitive","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","POINTS","LINES","LINE_STRIP","LINE_LOOP","mapGlBlendFunc","func","ZERO","ONE","SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","DST_COLOR","DST_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_COLOR","ONE_MINUS_CONSTANT_ALPHA","mapGlBlendEquation","equation","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","is2DArray","array","length","ravel","unraveled","outerShape","innerShape","raveled","inner","elem","j","shape","mapGlTextureWrap","wrap","CLAMP_TO_EDGE","REPEAT","MIRRORED_REPEAT","mapGlTextureFilter","filter","NEAREST","LINEAR","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","mapGlTextureInternalFormat","R8","R8_SNORM","R8UI","R8I","R16UI","R16I","R32UI","R32I","R32F","RG8","RG8_SNORM","RG8UI","RG8I","RG16UI","RG16I","RG32UI","RG32I","RG16F","RG32F","RGB8","RGB8_SNORM","RGB8UI","RGB8I","RGB16UI","RGB16I","RGB32UI","RGB32I","RGB16F","RGB32F","RGBA8","RGBA8_SNORM","RGBA8UI","RGBA8I","RGBA16UI","RGBA16I","RGBA32UI","RGBA32I","RGBA16F","RGBA32F","mapGlTextureFormat","RED","RG","RGB","RGBA","RED_INTEGER","RG_INTEGER","RGB_INTEGER","RGBA_INTEGER","mapGlTextureType","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","BYTE","SHORT","INT","FLOAT","Device","[object Object]","canvas","explicitPixelRatio","explicitViewport","this","element","document","body","options","HTMLCanvasElement","fromCanvas","createElement","appendChild","getContext","fromContext","pixelRatio","viewport","extensions","ext","getExtension","dev","update","bufferWidth","drawingBufferWidth","bufferHeight","drawingBufferHeight","canvasWidth","canvasHeight","canvasCSSWidth","clientWidth","canvasCSSHeight","clientHeight","window","devicePixelRatio","dpr","r","g","b","fbo","bindFramebuffer","FRAMEBUFFER","glFramebuffer","clearColor","clear","COLOR_BUFFER_BIT","depth","clearDepth","DEPTH_BUFFER_BIT","stencil","clearStencil","STENCIL_BUFFER_BIT","INT_PATTERN","UNKNOWN_ATTRIB_LOCATION","Command","glProgram","glPrimitive","uniformDescriptors","blendDescriptor","framebufferDescriptor","vert","frag","uniforms","blend","framebuffer","vertShader","glutil.createShader","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","glutil.createProgram","Object","entries","identifier","uniform","getUniformLocation","UniformDescriptor","BlendDescriptor","src","rgb","alpha","dst","color","undefined","FramebufferDescriptor","useProgram","beginBlend","v","executeInner","endBlend","attributes","reduce","accum","definition","test","getAttribLocation","drawBuffers","glColorAttachments","updateUniforms","glVertexArrayObject","hasElements","drawElements","count","instanceCount","drawArrays","enable","BLEND","blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","blendEquationSeparate","equationRGB","equationAlpha","blendColor","disable","instCount","drawArraysInstanced","drawElementsInstanced","textureUnitOffset","ident","loc","def","uniform1f","uniform1fv","uniform1i","uniform1iv","uniform1ui","uniform1uiv","x","y","uniform2f","uniform2fv","uniform2i","uniform2iv","uniform2ui","uniform2uiv","z","uniform3f","uniform3fv","uniform3i","uniform3iv","uniform3ui","uniform3uiv","w","uniform4f","uniform4fv","uniform4i","uniform4iv","uniform4ui","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","currentTexture","activeTexture","TEXTURE0","glTexture","VertexBuffer","glType","glBuffer","glutil.createArrayBuffer","fromInt8Array","fromInt16Array","fromInt32Array","fromUint8Array","fromUint16Array","fromUint32Array","fromFloat32Array","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","ElementBuffer","fromArray","array.is2DArray","array.ravel","arr","glutil.createElementArrayBuffer","VertexArray","attribDescriptors","attribLocations","locationStr","parseInt","push","AttributeDescriptor","create","elems","glutil.createVertexArray","attrib","instancedBuffers","curr","Math","Texture","image","fromRGBA8","fromArrayBufferView","glutil.createTexture","Framebuffer","createFramebuffer","colorBuffers","framebufferTexture2D","COLOR_ATTACHMENT0","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","deleteFramebuffer","_"],"mappings":"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"}