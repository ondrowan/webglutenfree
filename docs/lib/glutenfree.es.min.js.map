{"version":3,"file":"glutenfree.es.min.js","sources":["../build/assert.js","../build/glutil.js","../build/array.js","../build/vertex-buffer.js","../build/command.js","../build/texture.js","../build/device.js","../build/element-buffer.js","../build/vertex-array.js","../build/framebuffer.js"],"sourcesContent":["/**\n * This file is an exercise in proprocessor voodoo.\n *\n * \"process.env.NODE_ENV\", gets suplied by the string replacer during a\n * custom build or our production build. If \"production\", constant evaluation\n * will eliminate the if blocks, making the functions no-ops, in turn eligible\n * for elimination from their callsites.\n *\n * While cool, this disables us to return values from the asserts, which would\n * make for a slightly nice programming model: const checkedVal = truthy(val)\n */\n// This does not get replaced and serves as a default velue. If all its uses\n// are eliminated, the value itself is pruned as well.\nconst process = {\n    env: {\n        NODE_ENV: \"development\",\n    },\n};\nexport function requireNonNull(p, name) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof p === \"undefined\" || typeof p === \"object\" && !p) {\n            throw new Error(fmt(`Expected parameter ${name}, but got ${p}`));\n        }\n    }\n}\nexport function requireNonEmpty(p, name) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!p || !p.length) {\n            throw new Error(fmt(`Expected parameter ${name} to be nonempty`));\n        }\n    }\n}\nexport function requireEqual(p, val, name) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (p !== val) {\n            throw new Error(fmt(`\\\nExpected parameter ${name} to be equal to ${val}, but got ${p}`));\n        }\n    }\n}\nexport function nonNull(p, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof p === \"undefined\" || typeof p === \"object\" && !p) {\n            throw new Error(fmt(msg));\n        }\n    }\n}\nexport function nonEmpty(p, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!p || !p.length) {\n            throw new Error(fmt(msg || \"Array empty\"));\n        }\n    }\n}\nexport function equal(p, val, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (p !== val) {\n            throw new Error(fmt(msg || `Not equal: ${p} ${val}`));\n        }\n    }\n}\nexport function never(p, msg) {\n    // \"never\" can not be eliminated, as its \"return value\" is actually captured\n    // at the callsites. It should never be invoked, though.\n    throw new Error(fmt(msg || `Unexpected object: ${p}`));\n}\nfunction fmt(msg) {\n    if (msg) {\n        return `Assertion Failed: ${msg}`;\n    }\n    return `Assertion Failed`;\n}\n//# sourceMappingURL=assert.js.map","/*\n███████╗██╗  ██╗ █████╗ ██████╗ ███████╗██████╗\n██╔════╝██║  ██║██╔══██╗██╔══██╗██╔════╝██╔══██╗\n███████╗███████║███████║██║  ██║█████╗  ██████╔╝\n╚════██║██╔══██║██╔══██║██║  ██║██╔══╝  ██╔══██╗\n███████║██║  ██║██║  ██║██████╔╝███████╗██║  ██║\n╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝ ╚══════╝╚═╝  ╚═╝\n*/\nexport function createProgram(gl, vertex, fragment) {\n    const program = gl.createProgram();\n    if (!program) {\n        throw new Error(\"Could not create Program\");\n    }\n    gl.attachShader(program, vertex);\n    gl.attachShader(program, fragment);\n    gl.linkProgram(program);\n    if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        return program;\n    }\n    const msg = gl.getProgramInfoLog(program);\n    gl.deleteProgram(program);\n    throw new Error(`Could not link shader program: ${msg}`);\n}\nexport function createShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    if (!shader) {\n        throw new Error(\"Could not create Shader\");\n    }\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        return shader;\n    }\n    const msg = gl.getShaderInfoLog(shader);\n    gl.deleteShader(shader);\n    const prettySource = source\n        .split(\"\\n\")\n        .map((l, i) => `${i + 1}: ${l}`)\n        .join(\"\\n\");\n    throw new Error(`Could not compile shader:\\n${msg}\\n${prettySource}`);\n}\n//# sourceMappingURL=glutil.js.map","/**\n * Chacks whether array is at least 2d, mostly useful because of return type\n * predicate.\n */\nexport function is2DArray(array) {\n    return !!array.length || Array.isArray(array[0]);\n}\n/**\n * Flatten 2d array and compute its former shape.\n * eg.\n * ravel([\n *      [1, 2, 3],\n *      [4, 5, 6],\n * ])\n * produces {\n *      data: [1, 2, 3, 4, 5, 6],\n *      shape: [2, 3],\n * }\n */\nexport function ravel(unraveled) {\n    const outerShape = unraveled.length;\n    const innerShape = outerShape ? unraveled[0].length : 0;\n    const raveled = new Array(innerShape * outerShape);\n    unraveled.forEach((inner, i) => {\n        inner.forEach((elem, j) => {\n            raveled[innerShape * i + j] = elem;\n        });\n    });\n    return { data: raveled, shape: [outerShape, innerShape] };\n}\n//# sourceMappingURL=array.js.map","import * as assert from \"./assert\";\nimport { Device } from \"./device\";\nexport class VertexBuffer {\n    constructor(gl, type, data) {\n        this.gl = gl;\n        this.type = type;\n        this.data = data;\n        this.glType = mapGlVertexBufferType(gl, type);\n        this.glBuffer = null;\n        this.init();\n    }\n    static create(dev, props) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        switch (props.type) {\n            case \"byte\" /* BYTE */:\n                return VertexBuffer.fromInt8Array(gl, props.data);\n            case \"short\" /* SHORT */:\n                return VertexBuffer.fromInt16Array(gl, props.data);\n            case \"int\" /* INT */:\n                return VertexBuffer.fromInt32Array(gl, props.data);\n            case \"unsigned byte\" /* UNSIGNED_BYTE */:\n                return VertexBuffer.fromUint8Array(gl, props.data);\n            case \"unsigned short\" /* UNSIGNED_SHORT */:\n                return VertexBuffer.fromUint16Array(gl, props.data);\n            case \"unsigned int\" /* UNSIGNED_INT */:\n                return VertexBuffer.fromUint32Array(gl, props.data);\n            case \"float\" /* FLOAT */:\n                return VertexBuffer.fromFloat32Array(gl, props.data);\n            default: return assert.never(props);\n        }\n    }\n    static fromInt8Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"byte\" /* BYTE */, data instanceof Int8Array ? data : new Int8Array(data));\n    }\n    static fromInt16Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"short\" /* SHORT */, data instanceof Int16Array ? data : new Int16Array(data));\n    }\n    static fromInt32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"int\" /* INT */, data instanceof Int32Array ? data : new Int32Array(data));\n    }\n    static fromUint8Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"unsigned byte\" /* UNSIGNED_BYTE */, \n        // Note: we also have to convert Uint8ClampedArray to Uint8Array\n        // because of webgl bug\n        // https://github.com/KhronosGroup/WebGL/issues/1533\n        data instanceof Uint8Array ? data : new Uint8Array(data));\n    }\n    static fromUint16Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"unsigned short\" /* UNSIGNED_SHORT */, data instanceof Uint16Array ? data : new Uint16Array(data));\n    }\n    static fromUint32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"unsigned int\" /* UNSIGNED_INT */, data instanceof Uint32Array ? data : new Uint32Array(data));\n    }\n    static fromFloat32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"float\" /* FLOAT */, data instanceof Float32Array ? data : new Float32Array(data));\n    }\n    get count() {\n        return this.data.length;\n    }\n    init() {\n        const { gl, data } = this;\n        const buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        this.glBuffer = buffer;\n    }\n    restore() {\n        const { gl, glBuffer } = this;\n        if (!gl.isBuffer(glBuffer)) {\n            this.init();\n        }\n    }\n}\nfunction mapGlVertexBufferType(gl, type) {\n    switch (type) {\n        case \"byte\" /* BYTE */: return gl.BYTE;\n        case \"short\" /* SHORT */: return gl.SHORT;\n        case \"int\" /* INT */: return gl.INT;\n        case \"unsigned byte\" /* UNSIGNED_BYTE */: return gl.UNSIGNED_BYTE;\n        case \"unsigned short\" /* UNSIGNED_SHORT */: return gl.UNSIGNED_SHORT;\n        case \"unsigned int\" /* UNSIGNED_INT */: return gl.UNSIGNED_INT;\n        case \"float\" /* FLOAT */: return gl.FLOAT;\n        default: return assert.never(type, `Unexpexted buffer type: ${type}`);\n    }\n}\n//# sourceMappingURL=vertex-buffer.js.map","import * as assert from \"./assert\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nimport { VertexArray } from \"./vertex-array\";\nimport { Framebuffer } from \"./framebuffer\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nconst UNKNOWN_ATTRIB_LOCATION = -1;\nexport class Command {\n    constructor(gl, glProgram, glPrimitive, uniformDescrs, count, offset, vertexArrayAcc, framebufferAcc, depthDescr, stencilDescr, blendDescr) {\n        this.gl = gl;\n        this.glProgram = glProgram;\n        this.glPrimitive = glPrimitive;\n        this.uniformDescrs = uniformDescrs;\n        this.count = count;\n        this.offset = offset;\n        this.vertexArrayAcc = vertexArrayAcc;\n        this.framebufferAcc = framebufferAcc;\n        this.depthDescr = depthDescr;\n        this.stencilDescr = stencilDescr;\n        this.blendDescr = blendDescr;\n    }\n    static create(dev, { vert, frag, uniforms = {}, data, framebuffer, primitive = \"triangles\" /* TRIANGLES */, count = 0, offset = 0, depth, stencil, blend, }) {\n        assert.requireNonNull(vert, \"vert\");\n        assert.requireNonNull(frag, \"frag\");\n        assert.requireNonNull(data, \"data\");\n        if (depth) {\n            assert.requireNonNull(depth.func, \"depth.func\");\n        }\n        if (blend) {\n            assert.requireNonNull(blend.func, \"blend.func\");\n            assert.requireNonNull(blend.func.src, \"blend.func.src\");\n            assert.requireNonNull(blend.func.dst, \"blend.func.dst\");\n            if (typeof blend.func.src === \"object\") {\n                assert.requireNonNull(blend.func.src.rgb, \"blend.func.src.rgb\");\n                assert.requireNonNull(blend.func.src.alpha, \"blend.func.src.alpha\");\n            }\n            if (typeof blend.func.dst === \"object\") {\n                assert.requireNonNull(blend.func.dst.rgb, \"blend.func.dst.rgb\");\n                assert.requireNonNull(blend.func.dst.alpha, \"blend.func.dst.alpha\");\n            }\n        }\n        if (stencil) {\n            assert.requireNonNull(stencil.func, \"stencil.func\");\n            // TODO: complete stencil validation... validation framework?\n        }\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const vs = glutil.createShader(gl, gl.VERTEX_SHADER, vert);\n        const fs = glutil.createShader(gl, gl.FRAGMENT_SHADER, frag);\n        const prog = glutil.createProgram(gl, vs, fs);\n        gl.deleteShader(vs);\n        gl.deleteShader(fs);\n        const uniformDescrs = Object.entries(uniforms)\n            .map(([ident, uniform]) => {\n            const loc = gl.getUniformLocation(prog, ident);\n            if (!loc) {\n                throw new Error(`No location for uniform: ${ident}`);\n            }\n            return new UniformDescriptor(ident, loc, uniform);\n        });\n        const vertexArrayAcc = data\n            ? typeof data === \"function\" || data instanceof VertexArray\n                ? data\n                : VertexArray.create(dev, locate(gl, prog, data))\n            : undefined;\n        const framebufferAcc = framebuffer\n            ? typeof framebuffer === \"function\" || framebuffer instanceof Framebuffer\n                ? framebuffer\n                : Framebuffer.create(gl, framebuffer)\n            : undefined;\n        const depthDescr = parseDepth(gl, depth);\n        const stencilDescr = parseStencil(gl, stencil);\n        const blendDescr = parseBlend(gl, blend);\n        return new Command(gl, prog, mapGlPrimitive(gl, primitive), uniformDescrs, count, offset, vertexArrayAcc, framebufferAcc, depthDescr, stencilDescr, blendDescr);\n    }\n    execute(props) {\n        const { gl, glProgram } = this;\n        gl.useProgram(glProgram);\n        this.beginDepth();\n        this.beginStencil();\n        this.beginBlend();\n        if (Array.isArray(props)) {\n            props.forEach((p, i) => this.executeInner(p, i));\n        }\n        else {\n            this.executeInner(props, 0);\n        }\n        // FBOs and VAOs are bound without unbinding in the inner loop\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindVertexArray(null);\n        this.endBlend();\n        this.endStencil();\n        this.endDepth();\n        gl.useProgram(null);\n    }\n    locate(vertexArrayProps) {\n        return locate(this.gl, this.glProgram, vertexArrayProps);\n    }\n    executeInner(props, index) {\n        const { gl, count, offset, vertexArrayAcc, framebufferAcc } = this;\n        let bufferWidth = gl.drawingBufferWidth;\n        let bufferHeight = gl.drawingBufferHeight;\n        const fbo = framebufferAcc && access(props, index, framebufferAcc);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n            gl.drawBuffers(fbo.glColorAttachments);\n            bufferWidth = fbo.width;\n            bufferHeight = fbo.height;\n        }\n        gl.viewport(0, 0, bufferWidth, bufferHeight);\n        this.updateUniforms(props, index);\n        const vao = vertexArrayAcc && access(props, index, vertexArrayAcc);\n        if (vao) {\n            gl.bindVertexArray(vao.glVertexArray);\n            const drawCount = count ? Math.min(count, vao.count) : vao.count;\n            if (vao.hasElements) {\n                this.drawElements(drawCount, offset, vao.instanceCount);\n            }\n            else {\n                this.drawArrays(drawCount, offset, vao.instanceCount);\n            }\n        }\n        else {\n            this.drawArrays(count || 0, offset, 0);\n        }\n    }\n    beginDepth() {\n        const { gl, depthDescr } = this;\n        if (depthDescr) {\n            gl.enable(gl.DEPTH_TEST);\n            gl.depthFunc(depthDescr.func);\n            gl.depthMask(depthDescr.mask);\n            gl.depthRange(depthDescr.rangeStart, depthDescr.rangeEnd);\n        }\n    }\n    endDepth() {\n        const { gl, depthDescr } = this;\n        if (depthDescr) {\n            gl.disable(gl.DEPTH_TEST);\n        }\n    }\n    beginStencil() {\n        const { gl, stencilDescr } = this;\n        if (stencilDescr) {\n            const { fFunc, bFunc, fFuncRef, bfuncRef, fFuncMask, bFuncMask, fMask, bMask, fOpFail, bOpFail, fOpZFail, bOpZFail, fOpZPass, bOpZPass, } = stencilDescr;\n            gl.enable(gl.STENCIL_TEST);\n            gl.stencilFuncSeparate(gl.FRONT, fFunc, fFuncRef, fFuncMask);\n            gl.stencilFuncSeparate(gl.BACK, bFunc, bfuncRef, bFuncMask);\n            gl.stencilMaskSeparate(gl.FRONT, fMask);\n            gl.stencilMaskSeparate(gl.BACK, bMask);\n            gl.stencilOpSeparate(gl.FRONT, fOpFail, fOpZFail, fOpZPass);\n            gl.stencilOpSeparate(gl.BACK, bOpFail, bOpZFail, bOpZPass);\n        }\n    }\n    endStencil() {\n        const { gl, stencilDescr } = this;\n        if (stencilDescr) {\n            gl.disable(gl.STENCIL_TEST);\n        }\n    }\n    beginBlend() {\n        const { gl, blendDescr } = this;\n        if (blendDescr) {\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(blendDescr.srcRGB, blendDescr.dstRGB, blendDescr.srcAlpha, blendDescr.dstAlpha);\n            gl.blendEquationSeparate(blendDescr.equationRGB, blendDescr.equationAlpha);\n            if (blendDescr.color) {\n                const [r, g, b, a] = blendDescr.color;\n                gl.blendColor(r, g, b, a);\n            }\n        }\n    }\n    endBlend() {\n        const { gl, blendDescr } = this;\n        if (blendDescr) {\n            gl.disable(gl.BLEND);\n        }\n    }\n    drawArrays(count, offset, instCount) {\n        const { gl, glPrimitive } = this;\n        if (instCount) {\n            gl.drawArraysInstanced(glPrimitive, offset, count, instCount);\n        }\n        else {\n            gl.drawArrays(glPrimitive, offset, count);\n        }\n    }\n    drawElements(count, offset, instCount) {\n        const { gl, glPrimitive } = this;\n        if (instCount) {\n            gl.drawElementsInstanced(glPrimitive, count, gl.UNSIGNED_INT, // We only support u32 indices\n            offset, instCount);\n        }\n        else {\n            gl.drawElements(glPrimitive, count, gl.UNSIGNED_INT, // We only support u32 indices\n            offset);\n        }\n    }\n    updateUniforms(props, index) {\n        const gl = this.gl;\n        let textureUnitOffset = 0;\n        this.uniformDescrs.forEach(({ identifier: ident, location: loc, definition: def, }) => {\n            switch (def.type) {\n                case \"1f\":\n                    gl.uniform1f(loc, access(props, index, def.value));\n                    break;\n                case \"1fv\":\n                    gl.uniform1fv(loc, access(props, index, def.value));\n                    break;\n                case \"1i\":\n                    gl.uniform1i(loc, access(props, index, def.value));\n                    break;\n                case \"1iv\":\n                    gl.uniform1iv(loc, access(props, index, def.value));\n                    break;\n                case \"1ui\":\n                    gl.uniform1ui(loc, access(props, index, def.value));\n                    break;\n                case \"1uiv\":\n                    gl.uniform1uiv(loc, access(props, index, def.value));\n                    break;\n                case \"2f\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2f(loc, x, y);\n                    break;\n                }\n                case \"2fv\":\n                    gl.uniform2fv(loc, access(props, index, def.value));\n                    break;\n                case \"2i\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2i(loc, x, y);\n                    break;\n                }\n                case \"2iv\":\n                    gl.uniform2iv(loc, access(props, index, def.value));\n                    break;\n                case \"2ui\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2ui(loc, x, y);\n                    break;\n                }\n                case \"2uiv\":\n                    gl.uniform2uiv(loc, access(props, index, def.value));\n                    break;\n                case \"3f\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3f(loc, x, y, z);\n                    break;\n                }\n                case \"3fv\":\n                    gl.uniform3fv(loc, access(props, index, def.value));\n                    break;\n                case \"3i\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3i(loc, x, y, z);\n                    break;\n                }\n                case \"3iv\":\n                    gl.uniform3iv(loc, access(props, index, def.value));\n                    break;\n                case \"3ui\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3ui(loc, x, y, z);\n                    break;\n                }\n                case \"3uiv\":\n                    gl.uniform3uiv(loc, access(props, index, def.value));\n                    break;\n                case \"4f\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4f(loc, x, y, z, w);\n                    break;\n                }\n                case \"4fv\":\n                    gl.uniform4fv(loc, access(props, index, def.value));\n                    break;\n                case \"4i\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4i(loc, x, y, z, w);\n                    break;\n                }\n                case \"4iv\":\n                    gl.uniform4iv(loc, access(props, index, def.value));\n                    break;\n                case \"4ui\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4ui(loc, x, y, z, w);\n                    break;\n                }\n                case \"4uiv\":\n                    gl.uniform4uiv(loc, access(props, index, def.value));\n                    break;\n                case \"matrix2fv\":\n                    gl.uniformMatrix2fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix3fv\":\n                    gl.uniformMatrix3fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix4fv\":\n                    gl.uniformMatrix4fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"texture\":\n                    // TODO: is this the best way? (is it fast? can we cache?)\n                    const texture = access(props, index, def.value);\n                    const currentTexture = textureUnitOffset++;\n                    gl.activeTexture(gl.TEXTURE0 + currentTexture);\n                    gl.bindTexture(gl.TEXTURE_2D, texture.glTexture);\n                    gl.uniform1i(loc, currentTexture);\n                    break;\n                default:\n                    assert.never(def, `Unknown uniform type: (${ident})`);\n                    break;\n            }\n        });\n    }\n}\nfunction locate(gl, glProgram, { attributes, elements }) {\n    const locatedAttributes = Object.entries(attributes)\n        .reduce((accum, [identifier, definition]) => {\n        if (INT_PATTERN.test(identifier)) {\n            accum[identifier] = definition;\n        }\n        else {\n            const location = gl.getAttribLocation(glProgram, identifier);\n            if (location === UNKNOWN_ATTRIB_LOCATION) {\n                throw new Error(`No location for attrib: ${identifier}`);\n            }\n            accum[location] = definition;\n        }\n        return accum;\n    }, {});\n    return { attributes: locatedAttributes, elements };\n}\nfunction access(props, index, value) {\n    return typeof value === \"function\" ? value(props, index) : value;\n}\nclass DepthDescriptor {\n    constructor(func, mask, rangeStart, rangeEnd) {\n        this.func = func;\n        this.mask = mask;\n        this.rangeStart = rangeStart;\n        this.rangeEnd = rangeEnd;\n    }\n}\nclass StencilDescriptor {\n    constructor(fFunc, bFunc, fFuncRef, bfuncRef, fFuncMask, bFuncMask, fMask, bMask, fOpFail, bOpFail, fOpZFail, bOpZFail, fOpZPass, bOpZPass) {\n        this.fFunc = fFunc;\n        this.bFunc = bFunc;\n        this.fFuncRef = fFuncRef;\n        this.bfuncRef = bfuncRef;\n        this.fFuncMask = fFuncMask;\n        this.bFuncMask = bFuncMask;\n        this.fMask = fMask;\n        this.bMask = bMask;\n        this.fOpFail = fOpFail;\n        this.bOpFail = bOpFail;\n        this.fOpZFail = fOpZFail;\n        this.bOpZFail = bOpZFail;\n        this.fOpZPass = fOpZPass;\n        this.bOpZPass = bOpZPass;\n    }\n}\nclass BlendDescriptor {\n    constructor(srcRGB, srcAlpha, dstRGB, dstAlpha, equationRGB, equationAlpha, color) {\n        this.srcRGB = srcRGB;\n        this.srcAlpha = srcAlpha;\n        this.dstRGB = dstRGB;\n        this.dstAlpha = dstAlpha;\n        this.equationRGB = equationRGB;\n        this.equationAlpha = equationAlpha;\n        this.color = color;\n    }\n}\nclass UniformDescriptor {\n    constructor(identifier, location, definition) {\n        this.identifier = identifier;\n        this.location = location;\n        this.definition = definition;\n    }\n}\nfunction mapGlPrimitive(gl, primitive) {\n    switch (primitive) {\n        case \"triangles\" /* TRIANGLES */: return gl.TRIANGLES;\n        case \"triangle-strip\" /* TRIANGLE_STRIP */: return gl.TRIANGLE_STRIP;\n        case \"triangle-fan\" /* TRIANGLE_FAN */: return gl.TRIANGLE_FAN;\n        case \"points\" /* POINTS */: return gl.POINTS;\n        case \"lines\" /* LINES */: return gl.LINES;\n        case \"line-strip\" /* LINE_STRIP */: return gl.LINE_STRIP;\n        case \"line-loop\" /* LINE_LOOP */: return gl.LINE_LOOP;\n        default: return assert.never(primitive, `Unknown primitive: ${primitive}`);\n    }\n}\nfunction mapGlDepthOrStencilFunc(gl, func) {\n    switch (func) {\n        case \"always\" /* ALWAYS */: return gl.ALWAYS;\n        case \"never\" /* NEVER */: return gl.NEVER;\n        case \"equal\" /* EQUAL */: return gl.EQUAL;\n        case \"notequal\" /* NOTEQUAL */: return gl.NOTEQUAL;\n        case \"less\" /* LESS */: return gl.LESS;\n        case \"lequal\" /* LEQUAL */: return gl.LEQUAL;\n        case \"greater\" /* GREATER */: return gl.GREATER;\n        case \"gequal\" /* GEQUAL */: return gl.GEQUAL;\n        default: return assert.never(func, `Unknown depth or stencil function: ${func}`);\n    }\n}\nfunction mapGlStencilOp(gl, op) {\n    switch (op) {\n        case \"keep\" /* KEEP */: return gl.KEEP;\n        case \"zero\" /* ZERO */: return gl.ZERO;\n        case \"replace\" /* REPLACE */: return gl.REPLACE;\n        case \"incr\" /* INCR */: return gl.INCR;\n        case \"incr-wrap\" /* INCR_WRAP */: return gl.INCR_WRAP;\n        case \"decr\" /* DECR */: return gl.DECR;\n        case \"decr-wrap\" /* DECR_WRAP */: return gl.DECR_WRAP;\n        case \"invert\" /* INVERT */: return gl.INVERT;\n        default: return assert.never(op, `Unknown stencil op: ${op}`);\n    }\n}\nfunction mapGlBlendFunc(gl, func) {\n    switch (func) {\n        case \"zero\" /* ZERO */: return gl.ZERO;\n        case \"one\" /* ONE */: return gl.ONE;\n        case \"src-color\" /* SRC_COLOR */: return gl.SRC_COLOR;\n        case \"src-alpha\" /* SRC_ALPHA */: return gl.SRC_ALPHA;\n        case \"one-minus-src-color\" /* ONE_MINUS_SRC_COLOR */: return gl.ONE_MINUS_SRC_COLOR;\n        case \"one-minus-src-alpha\" /* ONE_MINUS_SRC_ALPHA */: return gl.ONE_MINUS_SRC_ALPHA;\n        case \"dst-color\" /* DST_COLOR */: return gl.DST_COLOR;\n        case \"dst-alpha\" /* DST_ALPHA */: return gl.DST_ALPHA;\n        case \"one-minus-dst-color\" /* ONE_MINUS_DST_COLOR */: return gl.ONE_MINUS_DST_COLOR;\n        case \"one-minus-dst-alpha\" /* ONE_MINUS_DST_ALPHA */: return gl.ONE_MINUS_DST_ALPHA;\n        case \"constant-color\" /* CONSTANT_COLOR */: return gl.CONSTANT_COLOR;\n        case \"constant-alpha\" /* CONSTANT_ALPHA */: return gl.CONSTANT_ALPHA;\n        case \"one-minus-constant-color\" /* ONE_MINUS_CONSTANT_COLOR */:\n            return gl.ONE_MINUS_CONSTANT_COLOR;\n        case \"one-minus-constant-alpha\" /* ONE_MINUS_CONSTANT_ALPHA */:\n            return gl.ONE_MINUS_CONSTANT_ALPHA;\n        default: return assert.never(func, `Unknown blend func: ${func}`);\n    }\n}\nfunction mapGlBlendEquation(gl, equation) {\n    switch (equation) {\n        case \"add\" /* ADD */: return gl.FUNC_ADD;\n        case \"subtract\" /* SUBTRACT */: return gl.FUNC_SUBTRACT;\n        case \"reverse-subtract\" /* REVERSE_SUBTRACT */: return gl.FUNC_REVERSE_SUBTRACT;\n        case \"min\" /* MIN */: return gl.MIN;\n        case \"max\" /* MAX */: return gl.MAX;\n        default: return assert.never(equation, `Unknown blend equation, ${equation}`);\n    }\n}\nfunction parseDepth(gl, depth) {\n    if (!depth) {\n        return undefined;\n    }\n    return new DepthDescriptor(mapGlDepthOrStencilFunc(gl, depth.func || \"less\" /* LESS */), typeof depth.mask === \"boolean\" ? depth.mask : true, depth.range ? depth.range[0] : 0, depth.range ? depth.range[1] : 1);\n}\nfunction parseStencil(gl, stencil) {\n    if (!stencil) {\n        return undefined;\n    }\n    return new StencilDescriptor(mapGlDepthOrStencilFunc(gl, typeof stencil.func.func === \"object\"\n        ? stencil.func.func.front\n        : stencil.func.func), mapGlDepthOrStencilFunc(gl, typeof stencil.func.func === \"object\"\n        ? stencil.func.func.back\n        : stencil.func.func), typeof stencil.func.ref !== \"undefined\"\n        ? typeof stencil.func.ref === \"object\"\n            ? stencil.func.ref.front\n            : stencil.func.ref\n        : 1, typeof stencil.func.ref !== \"undefined\"\n        ? typeof stencil.func.ref === \"object\"\n            ? stencil.func.ref.back\n            : stencil.func.ref\n        : 1, typeof stencil.func.mask !== \"undefined\"\n        ? typeof stencil.func.mask === \"object\"\n            ? stencil.func.mask.front\n            : stencil.func.mask\n        : 0xFF, typeof stencil.func.mask !== \"undefined\"\n        ? typeof stencil.func.mask === \"object\"\n            ? stencil.func.mask.back\n            : stencil.func.mask\n        : 0xFF, typeof stencil.mask !== \"undefined\"\n        ? typeof stencil.mask === \"object\"\n            ? stencil.mask.front\n            : stencil.mask\n        : 0xFF, typeof stencil.mask !== \"undefined\"\n        ? typeof stencil.mask === \"object\"\n            ? stencil.mask.back\n            : stencil.mask\n        : 0xFF, mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.fail === \"object\"\n            ? stencil.op.fail.front\n            : stencil.op.fail\n        : \"keep\" /* KEEP */), mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.fail === \"object\"\n            ? stencil.op.fail.back\n            : stencil.op.fail\n        : \"keep\" /* KEEP */), mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.zfail === \"object\"\n            ? stencil.op.zfail.front\n            : stencil.op.zfail\n        : \"keep\" /* KEEP */), mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.zfail === \"object\"\n            ? stencil.op.zfail.back\n            : stencil.op.zfail\n        : \"keep\" /* KEEP */), mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.zpass === \"object\"\n            ? stencil.op.zpass.front\n            : stencil.op.zpass\n        : \"keep\" /* KEEP */), mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.zpass === \"object\"\n            ? stencil.op.zpass.back\n            : stencil.op.zpass\n        : \"keep\" /* KEEP */));\n}\nfunction parseBlend(gl, blend) {\n    if (!blend) {\n        return undefined;\n    }\n    return new BlendDescriptor(mapGlBlendFunc(gl, typeof blend.func.src === \"object\"\n        ? blend.func.src.rgb\n        : blend.func.src), mapGlBlendFunc(gl, typeof blend.func.src === \"object\"\n        ? blend.func.src.alpha\n        : blend.func.src), mapGlBlendFunc(gl, typeof blend.func.dst === \"object\"\n        ? blend.func.dst.rgb\n        : blend.func.dst), mapGlBlendFunc(gl, typeof blend.func.dst === \"object\"\n        ? blend.func.dst.alpha\n        : blend.func.dst), mapGlBlendEquation(gl, blend.equation\n        ? typeof blend.equation === \"object\"\n            ? blend.equation.rgb\n            : blend.equation\n        : \"add\" /* ADD */), mapGlBlendEquation(gl, blend.equation\n        ? typeof blend.equation === \"object\"\n            ? blend.equation.alpha\n            : blend.equation\n        : \"add\" /* ADD */), blend.color);\n}\n//# sourceMappingURL=command.js.map","import * as assert from \"./assert\";\nimport { Device } from \"./device\";\nexport class Texture {\n    static fromImage(dev, image, options) {\n        return Texture.fromRGBA8(dev, image.data, image.width, image.height, options);\n    }\n    static fromRGBA8(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Uint8Array\n            ? data\n            // Note: we also have to convert Uint8ClampedArray to Uint8Array\n            // because of webgl bug\n            // https://github.com/KhronosGroup/WebGL/issues/1533\n            : new Uint8Array(data), width, height, \"RGBA8\" /* RGBA8 */, \"RGBA\" /* RGBA */, \"unsigned byte\" /* UNSIGNED_BYTE */, options);\n    }\n    static fromRG16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RG16F\" /* RG16F */, \"RG\" /* RG */, \"float\" /* FLOAT */, options);\n    }\n    static fromRGB16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGB16F\" /* RGB16F */, \"RGB\" /* RGB */, \"float\" /* FLOAT */, options);\n    }\n    static fromRGBA16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGBA16F\" /* RGBA16F */, \"RGBA\" /* RGBA */, \"float\" /* FLOAT */, options);\n    }\n    static fromRGB32F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGB32F\" /* RGB32F */, \"RGB\" /* RGB */, \"float\" /* FLOAT */, options);\n    }\n    static fromRGBA32F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGBA32F\" /* RGBA32F */, \"RGBA\" /* RGBA */, \"float\" /* FLOAT */, options);\n    }\n    static fromArrayBufferView(dev, data, width, height, internalFormat, format, type, { min = \"nearest\" /* NEAREST */, mag = \"nearest\" /* NEAREST */, wrapS = \"clamp-to-edge\" /* CLAMP_TO_EDGE */, wrapT = \"clamp-to-edge\" /* CLAMP_TO_EDGE */, mipmap = false, } = {}) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new Texture(gl, data, width, height, internalFormat, format, type, wrapS, wrapT, min, mag, mipmap);\n    }\n    constructor(gl, data, width, height, internalFormat, format, type, wrapS, wrapT, minFilter, magFilter, mipmap) {\n        this.gl = gl;\n        this.data = data;\n        this.width = width;\n        this.height = height;\n        this.internalFormat = internalFormat;\n        this.format = format;\n        this.type = type;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.mipmap = mipmap;\n        this.glInternalFormat = mapGlTextureInternalFormat(gl, internalFormat);\n        this.glFormat = mapGlTextureFormat(gl, format);\n        this.glType = mapGlTextureType(gl, type);\n        this.glWrapS = mapGlTextureWrap(gl, wrapS);\n        this.glWrapT = mapGlTextureWrap(gl, wrapT);\n        this.glMinFilter = mapGlTextureFilter(gl, minFilter);\n        this.glMagFilter = mapGlTextureFilter(gl, magFilter);\n        this.glTexture = null;\n        this.init();\n    }\n    init() {\n        const { gl, data, width, height, glInternalFormat, glFormat, glType, glWrapS, glWrapT, glMinFilter, glMagFilter, mipmap, } = this;\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texStorage2D(gl.TEXTURE_2D, 1, glInternalFormat, width, height);\n        if (data) {\n            gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, width, height, glFormat, glType, data);\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, glWrapS);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, glWrapT);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, glMinFilter);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, glMagFilter);\n        if (mipmap) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        this.glTexture = texture;\n    }\n    restore() {\n        const { gl, glTexture } = this;\n        if (!gl.isTexture(glTexture)) {\n            this.init();\n        }\n    }\n}\nfunction mapGlTextureWrap(gl, wrap) {\n    switch (wrap) {\n        case \"clamp-to-edge\" /* CLAMP_TO_EDGE */: return gl.CLAMP_TO_EDGE;\n        case \"repeat\" /* REPEAT */: return gl.REPEAT;\n        case \"mirrored-repeat\" /* MIRRORED_REPEAT */: return gl.MIRRORED_REPEAT;\n        default: return assert.never(wrap, `Unknown texture wrap: ${wrap}`);\n    }\n}\nfunction mapGlTextureFilter(gl, filter) {\n    switch (filter) {\n        case \"nearest\" /* NEAREST */: return gl.NEAREST;\n        case \"linear\" /* LINEAR */: return gl.LINEAR;\n        case \"nearest-mipmap-nearest\" /* NEAREST_MIPMAP_NEAREST */:\n            return gl.NEAREST_MIPMAP_NEAREST;\n        case \"linear-mipmap-nearest\" /* LINEAR_MIPMAP_NEAREST */:\n            return gl.LINEAR_MIPMAP_NEAREST;\n        case \"nearest-mipmap-linear\" /* NEAREST_MIPMAP_LINEAR */:\n            return gl.NEAREST_MIPMAP_LINEAR;\n        case \"linear-mipmap-linear\" /* LINEAR_MIPMAP_LINEAR */:\n            return gl.LINEAR_MIPMAP_LINEAR;\n        default: return assert.never(filter, `Unknown texture filter: ${filter}`);\n    }\n}\nfunction mapGlTextureInternalFormat(gl, internalFormat) {\n    switch (internalFormat) {\n        // R\n        case \"R8\" /* R8 */: return gl.R8;\n        case \"R8_SNORM\" /* R8_SNORM */: return gl.R8_SNORM;\n        case \"R8UI\" /* R8UI */: return gl.R8UI;\n        case \"R8I\" /* R8I */: return gl.R8I;\n        case \"R16UI\" /* R16UI */: return gl.R16UI;\n        case \"R16I\" /* R16I */: return gl.R16I;\n        case \"R32UI\" /* R32UI */: return gl.R32UI;\n        case \"R32I\" /* R32I */: return gl.R32I;\n        case \"R16F\" /* R16F */: return gl.R16I;\n        case \"R32F\" /* R32F */: return gl.R32F;\n        // RG\n        case \"RG8\" /* RG8 */: return gl.RG8;\n        case \"RG8_SNORM\" /* RG8_SNORM */: return gl.RG8_SNORM;\n        case \"RG8UI\" /* RG8UI */: return gl.RG8UI;\n        case \"RG8I\" /* RG8I */: return gl.RG8I;\n        case \"RG16UI\" /* RG16UI */: return gl.RG16UI;\n        case \"RG16I\" /* RG16I */: return gl.RG16I;\n        case \"RG32UI\" /* RG32UI */: return gl.RG32UI;\n        case \"RG32I\" /* RG32I */: return gl.RG32I;\n        case \"RG16F\" /* RG16F */: return gl.RG16F;\n        case \"RG32F\" /* RG32F */: return gl.RG32F;\n        // RGB\n        case \"RGB8\" /* RGB8 */: return gl.RGB8;\n        case \"RGB8_SNORM\" /* RGB8_SNORM */: return gl.RGB8_SNORM;\n        case \"RGB8UI\" /* RGB8UI */: return gl.RGB8UI;\n        case \"RGB8I\" /* RGB8I */: return gl.RGB8I;\n        case \"RGB16UI\" /* RGB16UI */: return gl.RGB16UI;\n        case \"RGB16I\" /* RGB16I */: return gl.RGB16I;\n        case \"RGB32UI\" /* RGB32UI */: return gl.RGB32UI;\n        case \"RGB32I\" /* RGB32I */: return gl.RGB32I;\n        case \"RGB16F\" /* RGB16F */: return gl.RGB16F;\n        case \"RGB32F\" /* RGB32F */: return gl.RGB32F;\n        // RGBA\n        case \"RGBA8\" /* RGBA8 */: return gl.RGBA8;\n        case \"RGBA8_SNORM\" /* RGBA8_SNORM */: return gl.RGBA8_SNORM;\n        case \"RGBA8UI\" /* RGBA8UI */: return gl.RGBA8UI;\n        case \"RGBA8I\" /* RGBA8I */: return gl.RGBA8I;\n        case \"RGBA16UI\" /* RGBA16UI */: return gl.RGBA16UI;\n        case \"RGBA16I\" /* RGBA16I */: return gl.RGBA16I;\n        case \"RGBA32UI\" /* RGBA32UI */: return gl.RGBA32UI;\n        case \"RGBA32I\" /* RGBA32I */: return gl.RGBA32I;\n        case \"RGBA16F\" /* RGBA16F */: return gl.RGBA16F;\n        case \"RGBA32F\" /* RGBA32F */: return gl.RGBA32F;\n        default: return assert.never(internalFormat, `Unknown texture internal format: ${internalFormat}`);\n    }\n}\nfunction mapGlTextureFormat(gl, format) {\n    switch (format) {\n        case \"RED\" /* RED */: return gl.RED;\n        case \"RG\" /* RG */: return gl.RG;\n        case \"RGB\" /* RGB */: return gl.RGB;\n        case \"RGBA\" /* RGBA */: return gl.RGBA;\n        case \"RED_INTEGER\" /* RED_INTEGER */: return gl.RED_INTEGER;\n        case \"RG_INTEGER\" /* RG_INTEGER */: return gl.RG_INTEGER;\n        case \"RGB_INTEGER\" /* RGB_INTEGER */: return gl.RGB_INTEGER;\n        case \"RGBA_INTEGER\" /* RGBA_INTEGER */: return gl.RGBA_INTEGER;\n        default: return assert.never(format, `Unknown texture format: ${format}`);\n    }\n}\nexport function mapGlTextureType(gl, type) {\n    switch (type) {\n        case \"byte\" /* BYTE */: return gl.BYTE;\n        case \"short\" /* SHORT */: return gl.SHORT;\n        case \"int\" /* INT */: return gl.INT;\n        case \"unsigned byte\" /* UNSIGNED_BYTE */: return gl.UNSIGNED_BYTE;\n        case \"unsigned short\" /* UNSIGNED_SHORT */: return gl.UNSIGNED_SHORT;\n        case \"unsigned int\" /* UNSIGNED_INT */: return gl.UNSIGNED_INT;\n        case \"float\" /* FLOAT */: return gl.FLOAT;\n        default: return assert.never(type, `Unknown texture type: ${type}`);\n    }\n}\n//# sourceMappingURL=texture.js.map","export class Device {\n    constructor(gl, canvas, explicitPixelRatio, explicitViewport) {\n        this.gl = gl;\n        this.canvas = canvas;\n        this.explicitPixelRatio = explicitPixelRatio;\n        this.explicitViewport = explicitViewport;\n    }\n    static mount(element = document.body, options) {\n        if (element instanceof HTMLCanvasElement) {\n            return Device.fromCanvas(element, options);\n        }\n        const canvas = document.createElement(\"canvas\");\n        element.appendChild(canvas);\n        return Device.fromCanvas(canvas, options);\n    }\n    static fromCanvas(canvas, options = {}) {\n        const { antialias = true, alpha = true, depth = true, stencil = true, preserveDrawingBuffer = false, } = options.context || {};\n        const gl = canvas.getContext(\"webgl2\", {\n            antialias,\n            alpha,\n            depth,\n            stencil,\n            preserveDrawingBuffer,\n        });\n        if (!gl) {\n            throw new Error(\"Could not get webgl2 context\");\n        }\n        return Device.fromContext(gl, options);\n    }\n    static fromContext(gl, { pixelRatio, viewport, extensions, } = {}) {\n        if (extensions) {\n            extensions.forEach(ext => {\n                if (!gl.getExtension(ext)) {\n                    throw new Error(`Could not get extension ${ext}`);\n                }\n            });\n        }\n        const dev = new Device(gl, gl.canvas, pixelRatio, viewport);\n        dev.update();\n        return dev;\n    }\n    get bufferWidth() {\n        return this.gl.drawingBufferWidth;\n    }\n    get bufferHeight() {\n        return this.gl.drawingBufferHeight;\n    }\n    get canvasWidth() {\n        return this.canvas.width;\n    }\n    get canvasHeight() {\n        return this.canvas.height;\n    }\n    get canvasCSSWidth() {\n        return this.canvas.clientWidth;\n    }\n    get canvasCSSHeight() {\n        return this.canvas.clientHeight;\n    }\n    get pixelRatio() {\n        return this.explicitPixelRatio || window.devicePixelRatio;\n    }\n    update() {\n        const dpr = this.pixelRatio;\n        const canvas = this.canvas;\n        const width = this.explicitViewport\n            && this.explicitViewport[0]\n            || canvas.clientWidth * dpr;\n        const height = this.explicitViewport\n            && this.explicitViewport[1]\n            || canvas.clientHeight * dpr;\n        if (width !== canvas.width) {\n            canvas.width = width;\n        }\n        if (height !== canvas.height) {\n            canvas.height = height;\n        }\n    }\n    clearColorBuffer(r, g, b, a, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearDepthBuffer(depth, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearDepth(depth);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearStencilBuffer(stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearStencil(stencil);\n        gl.clear(gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearColorAndDepthBuffers(r, g, b, a, depth, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearDepthAndStencilBuffers(depth, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearDepth(depth);\n        gl.clearStencil(stencil);\n        gl.clear(gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearColorAndStencilBuffers(r, g, b, a, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearStencil(stencil);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clear(r, g, b, a, depth, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clearStencil(stencil);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n}\n//# sourceMappingURL=device.js.map","import * as array from \"./array\";\nimport { Device } from \"./device\";\nexport class ElementBuffer {\n    static create(dev, props) {\n        return Array.isArray(props)\n            ? ElementBuffer.fromArray(dev, props)\n            : ElementBuffer.fromUint32Array(dev, props.data);\n    }\n    static fromArray(dev, data) {\n        return ElementBuffer.fromUint32Array(dev, array.is2DArray(data)\n            ? array.ravel(data).data\n            : data);\n    }\n    static fromUint32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const arr = Array.isArray(data) ? new Uint32Array(data) : data;\n        return new ElementBuffer(gl, arr);\n    }\n    constructor(gl, data) {\n        this.gl = gl;\n        this.data = data;\n        this.glBuffer = null;\n        this.init();\n    }\n    get count() {\n        return this.data.length;\n    }\n    init() {\n        const { gl, data } = this;\n        const buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        this.glBuffer = buffer;\n    }\n    restore() {\n        const { gl, glBuffer } = this;\n        if (!gl.isBuffer(glBuffer)) {\n            this.init();\n        }\n    }\n}\n//# sourceMappingURL=element-buffer.js.map","import * as assert from \"./assert\";\nimport * as array from \"./array\";\nimport { Device } from \"./device\";\nimport { VertexBuffer, } from \"./vertex-buffer\";\nimport { ElementBuffer, } from \"./element-buffer\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nexport class VertexArray {\n    static create(dev, { attributes, elements }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const attrs = Object.entries(attributes)\n            .map(([locationStr, definition]) => {\n            if (!INT_PATTERN.test(locationStr)) {\n                throw new Error(\"Location not a number. Use Command#locate\");\n            }\n            const location = parseInt(locationStr, 10);\n            return AttributeDescriptor.create(gl, location, definition);\n        });\n        const elementBuffer = elements\n            ? elements instanceof ElementBuffer\n                ? elements\n                : ElementBuffer.create(gl, elements)\n            : undefined;\n        const count = elementBuffer\n            ? elementBuffer.count\n            : attrs.length\n                ? attrs\n                    .map(attr => attr.count)\n                    .reduce((min, curr) => Math.min(min, curr))\n                : 0;\n        const instAttrs = attrs.filter(attr => !!attr.divisor);\n        const instanceCount = instAttrs.length\n            ? instAttrs\n                .map(attr => attr.count * attr.divisor)\n                .reduce((min, curr) => Math.min(min, curr))\n            : 0;\n        return new VertexArray(gl, attrs, elementBuffer, count, instanceCount);\n    }\n    constructor(gl, attributes, elements, count, instanceCount) {\n        this.gl = gl;\n        this.elementBuffer = elements;\n        this.attributes = attributes;\n        this.count = count;\n        this.instanceCount = instanceCount;\n        this.glVertexArray = null;\n        this.init();\n    }\n    get hasElements() {\n        return !!this.elementBuffer;\n    }\n    init() {\n        const { gl, attributes, elementBuffer } = this;\n        if (!gl.isContextLost()) {\n            const vao = gl.createVertexArray();\n            gl.bindVertexArray(vao);\n            attributes.forEach(({ location, type, buffer: { glBuffer, glType: glBufferType }, size, normalized = false, divisor, }) => {\n                // Enable sending attribute arrays for location\n                gl.enableVertexAttribArray(location);\n                // Send buffer\n                gl.bindBuffer(gl.ARRAY_BUFFER, glBuffer);\n                switch (type) {\n                    case \"pointer\" /* POINTER */:\n                        gl.vertexAttribPointer(location, size, glBufferType, normalized, 0, 0);\n                        break;\n                    case \"ipointer\" /* IPOINTER */:\n                        gl.vertexAttribIPointer(location, size, glBufferType, 0, 0);\n                        break;\n                    default: assert.never(type);\n                }\n                if (divisor) {\n                    gl.vertexAttribDivisor(location, divisor);\n                }\n            });\n            if (elementBuffer) {\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer.glBuffer);\n            }\n            gl.bindVertexArray(null);\n            gl.bindBuffer(gl.ARRAY_BUFFER, null);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n            this.glVertexArray = vao;\n        }\n    }\n    restore() {\n        const { gl, glVertexArray, attributes, elementBuffer } = this;\n        if (elementBuffer) {\n            elementBuffer.restore();\n        }\n        attributes.forEach(attr => attr.buffer.restore());\n        if (!gl.isVertexArray(glVertexArray)) {\n            this.init();\n        }\n    }\n}\n// TODO: this could use some further refactoring. Currently its just former\n// public API made private.\nclass AttributeDescriptor {\n    constructor(location, type, buffer, count, size, normalized, divisor) {\n        this.location = location;\n        this.type = type;\n        this.buffer = buffer;\n        this.count = count;\n        this.size = size;\n        this.normalized = normalized;\n        this.divisor = divisor;\n    }\n    static create(gl, location, props) {\n        if (Array.isArray(props)) {\n            if (array.is2DArray(props)) {\n                const r = array.ravel(props);\n                return new AttributeDescriptor(location, \"pointer\" /* POINTER */, VertexBuffer.fromFloat32Array(gl, r.data), r.shape[0], r.shape[1], false, 0);\n            }\n            return new AttributeDescriptor(location, \"pointer\" /* POINTER */, VertexBuffer.fromFloat32Array(gl, props), props.length, 1, false, 0);\n        }\n        const buffer = props.value instanceof VertexBuffer\n            ? props.value\n            // Typescript is not smart enough here\n            : VertexBuffer.create(gl, props.value);\n        switch (props.type) {\n            case \"pointer\" /* POINTER */: return new AttributeDescriptor(location, props.type, buffer, props.count, props.size, props.normalized || false, props.divisor || 0);\n            case \"ipointer\" /* IPOINTER */: return new AttributeDescriptor(location, props.type, buffer, props.count, props.size, false, props.divisor || 0);\n            default: return assert.never(props);\n        }\n    }\n}\n//# sourceMappingURL=vertex-array.js.map","import * as assert from \"./assert\";\nimport { Device } from \"./device\";\nexport class Framebuffer {\n    static create(dev, { width, height, color, depth, stencil }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const colorBuffers = Array.isArray(color) ? color : [color];\n        colorBuffers.forEach(buffer => {\n            assert.equal(width, buffer.width);\n            assert.equal(height, buffer.height);\n        });\n        if (depth) {\n            assert.equal(width, depth.width);\n            assert.equal(height, depth.height);\n        }\n        if (stencil) {\n            assert.equal(width, stencil.width);\n            assert.equal(height, stencil.height);\n        }\n        return new Framebuffer(gl, width, height, colorBuffers, depth, stencil);\n    }\n    constructor(gl, width, height, colorBuffers, depthBuffer, stencilBuffer) {\n        this.gl = gl;\n        this.width = width;\n        this.height = height;\n        this.colorBuffers = colorBuffers;\n        this.depthBuffer = depthBuffer;\n        this.stencilBuffer = stencilBuffer;\n        this.glColorAttachments = colorBuffers\n            .map((_, i) => gl.COLOR_ATTACHMENT0 + i);\n        this.glFramebuffer = null;\n        this.init();\n    }\n    init() {\n        const { gl, colorBuffers, depthBuffer, stencilBuffer } = this;\n        const fbo = gl.createFramebuffer();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n        colorBuffers.forEach((buffer, i) => {\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.TEXTURE_2D, buffer.glTexture, 0);\n        });\n        if (depthBuffer) {\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depthBuffer, 0);\n        }\n        if (stencilBuffer) {\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.STENCIL_ATTACHMENT, gl.TEXTURE_2D, stencilBuffer, 0);\n        }\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        if (status !== gl.FRAMEBUFFER_COMPLETE) {\n            gl.deleteFramebuffer(fbo);\n            throw new Error(\"Framebuffer not complete\");\n        }\n        this.glFramebuffer = fbo;\n    }\n    restore() {\n        const { gl, glFramebuffer, colorBuffers, depthBuffer, stencilBuffer, } = this;\n        colorBuffers.forEach(buffer => buffer.restore());\n        if (depthBuffer) {\n            depthBuffer.restore();\n        }\n        if (stencilBuffer) {\n            stencilBuffer.restore();\n        }\n        if (!gl.isFramebuffer(glFramebuffer)) {\n            this.init();\n        }\n    }\n}\n//# sourceMappingURL=framebuffer.js.map"],"names":["never","p","msg","Error","fmt","createProgram","gl","vertex","fragment","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","prettySource","split","map","l","i","join","is2DArray","array","length","Array","isArray","ravel","unraveled","outerShape","innerShape","raveled","forEach","inner","elem","j","data","shape","mapGlVertexBufferType","BYTE","SHORT","INT","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","assert.never","locate","glProgram","attributes","elements","Object","entries","reduce","accum","identifier","definition","INT_PATTERN","test","location","getAttribLocation","UNKNOWN_ATTRIB_LOCATION","access","props","index","value","mapGlPrimitive","primitive","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","POINTS","LINES","LINE_STRIP","LINE_LOOP","mapGlDepthOrStencilFunc","func","ALWAYS","NEVER","EQUAL","NOTEQUAL","LESS","LEQUAL","GREATER","GEQUAL","mapGlStencilOp","op","KEEP","ZERO","REPLACE","INCR","INCR_WRAP","DECR","DECR_WRAP","INVERT","mapGlBlendFunc","ONE","SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","DST_COLOR","DST_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_COLOR","ONE_MINUS_CONSTANT_ALPHA","mapGlBlendEquation","equation","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","parseDepth","depth","DepthDescriptor","mask","range","parseStencil","stencil","StencilDescriptor","front","back","ref","fail","zfail","zpass","parseBlend","blend","BlendDescriptor","src","rgb","alpha","dst","color","mapGlTextureWrap","wrap","CLAMP_TO_EDGE","REPEAT","MIRRORED_REPEAT","mapGlTextureFilter","filter","NEAREST","LINEAR","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","mapGlTextureInternalFormat","internalFormat","R8","R8_SNORM","R8UI","R8I","R16UI","R16I","R32UI","R32I","R32F","RG8","RG8_SNORM","RG8UI","RG8I","RG16UI","RG16I","RG32UI","RG32I","RG16F","RG32F","RGB8","RGB8_SNORM","RGB8UI","RGB8I","RGB16UI","RGB16I","RGB32UI","RGB32I","RGB16F","RGB32F","RGBA8","RGBA8_SNORM","RGBA8UI","RGBA8I","RGBA16UI","RGBA16I","RGBA32UI","RGBA32I","RGBA16F","RGBA32F","mapGlTextureFormat","format","RED","RG","RGB","RGBA","RED_INTEGER","RG_INTEGER","RGB_INTEGER","RGBA_INTEGER","mapGlTextureType","Device","[object Object]","canvas","explicitPixelRatio","explicitViewport","this","element","document","body","options","HTMLCanvasElement","fromCanvas","createElement","appendChild","antialias","preserveDrawingBuffer","context","getContext","fromContext","pixelRatio","viewport","extensions","ext","getExtension","dev","update","bufferWidth","drawingBufferWidth","bufferHeight","drawingBufferHeight","canvasWidth","width","canvasHeight","height","canvasCSSWidth","clientWidth","canvasCSSHeight","clientHeight","window","devicePixelRatio","dpr","r","g","b","a","fbo","bindFramebuffer","FRAMEBUFFER","glFramebuffer","clearColor","clear","COLOR_BUFFER_BIT","clearDepth","DEPTH_BUFFER_BIT","clearStencil","STENCIL_BUFFER_BIT","VertexBuffer","glType","glBuffer","init","fromInt8Array","fromInt16Array","fromInt32Array","fromUint8Array","fromUint16Array","fromUint32Array","fromFloat32Array","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Float32Array","count","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","isBuffer","ElementBuffer","fromArray","array.is2DArray","array.ravel","arr","ELEMENT_ARRAY_BUFFER","VertexArray","attrs","locationStr","parseInt","AttributeDescriptor","create","elementBuffer","undefined","attr","min","curr","Math","instAttrs","divisor","instanceCount","glVertexArray","hasElements","isContextLost","vao","createVertexArray","bindVertexArray","glBufferType","size","normalized","enableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","vertexAttribDivisor","restore","isVertexArray","Framebuffer","colorBuffers","depthBuffer","stencilBuffer","glColorAttachments","_","COLOR_ATTACHMENT0","createFramebuffer","framebufferTexture2D","TEXTURE_2D","glTexture","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","deleteFramebuffer","isFramebuffer","Command","glPrimitive","uniformDescrs","offset","vertexArrayAcc","framebufferAcc","depthDescr","stencilDescr","blendDescr","vert","frag","uniforms","framebuffer","vs","glutil.createShader","VERTEX_SHADER","fs","FRAGMENT_SHADER","prog","glutil.createProgram","ident","uniform","loc","getUniformLocation","UniformDescriptor","useProgram","beginDepth","beginStencil","beginBlend","executeInner","endBlend","endStencil","endDepth","vertexArrayProps","drawBuffers","updateUniforms","drawCount","drawElements","drawArrays","enable","DEPTH_TEST","depthFunc","depthMask","depthRange","rangeStart","rangeEnd","disable","fFunc","bFunc","fFuncRef","bfuncRef","fFuncMask","bFuncMask","fMask","bMask","fOpFail","bOpFail","fOpZFail","bOpZFail","fOpZPass","bOpZPass","STENCIL_TEST","stencilFuncSeparate","FRONT","BACK","stencilMaskSeparate","stencilOpSeparate","BLEND","blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","blendEquationSeparate","equationRGB","equationAlpha","blendColor","instCount","drawArraysInstanced","drawElementsInstanced","textureUnitOffset","def","uniform1f","uniform1fv","uniform1i","uniform1iv","uniform1ui","uniform1uiv","x","y","uniform2f","uniform2fv","uniform2i","uniform2iv","uniform2ui","uniform2uiv","z","uniform3f","uniform3fv","uniform3i","uniform3iv","uniform3ui","uniform3uiv","w","uniform4f","uniform4fv","uniform4i","uniform4iv","uniform4ui","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","texture","currentTexture","activeTexture","TEXTURE0","bindTexture","Texture","image","fromRGBA8","fromArrayBufferView","mag","wrapS","wrapT","mipmap","minFilter","magFilter","glInternalFormat","glFormat","glWrapS","glWrapT","glMinFilter","glMagFilter","createTexture","texStorage2D","texSubImage2D","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","generateMipmap","isTexture"],"mappings":"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"}