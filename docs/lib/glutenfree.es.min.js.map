{"version":3,"file":"glutenfree.es.min.js","sources":["../build/assert.js","../build/glutil.js","../build/array.js","../build/command.js","../build/texture.js","../build/device.js","../build/vertex-buffer.js","../build/element-buffer.js","../build/vertex-array.js","../build/framebuffer.js"],"sourcesContent":["/**\n * This file is an exercise in proprocessor voodoo.\n *\n * \"process.env.NODE_ENV\", gets suplied by the string replacer during a\n * custom build or our production build. If \"production\", constant evaluation\n * will eliminate the if blocks, making the functions no-ops, in turn eligible\n * for elimination from their callsites.\n *\n * While cool, this disables us to return values from the asserts, which would\n * make for a slightly nice programming model: const checkedVal = truthy(val)\n */\n// This does not get replaced and serves as a default velue. If all its uses\n// are eliminated, the value itself is pruned as well.\nconst process = {\n    env: {\n        NODE_ENV: \"development\",\n    },\n};\nexport function requireNonNull(p, name) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof p === \"undefined\" || typeof p === \"object\" && !p) {\n            throw new Error(fmt(`Expected parameter ${name}, but got ${p}`));\n        }\n    }\n}\nexport function requireNonEmpty(p, name) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!p || !p.length) {\n            throw new Error(fmt(`Expected parameter ${name} to be nonempty`));\n        }\n    }\n}\nexport function requireEqual(p, val, name) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (p !== val) {\n            throw new Error(fmt(`\\\nExpected parameter ${name} to be equal to ${val}, but got ${p}`));\n        }\n    }\n}\nexport function nonNull(p, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof p === \"undefined\" || typeof p === \"object\" && !p) {\n            throw new Error(fmt(msg));\n        }\n    }\n}\nexport function nonEmpty(p, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!p || !p.length) {\n            throw new Error(fmt(msg || \"Array empty\"));\n        }\n    }\n}\nexport function equal(p, val, msg) {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (p !== val) {\n            throw new Error(fmt(msg || `Not equal: ${p} ${val}`));\n        }\n    }\n}\nexport function never(p, msg) {\n    // \"never\" can not be eliminated, as its \"return value\" is actually captured\n    // at the callsites. It should never be invoked, though.\n    throw new Error(fmt(msg || `Unexpected object: ${p}`));\n}\nfunction fmt(msg) {\n    if (msg) {\n        return `Assertion Failed: ${msg}`;\n    }\n    return `Assertion Failed`;\n}\n//# sourceMappingURL=assert.js.map","import * as assert from \"./assert\";\n/*\n███████╗██╗  ██╗ █████╗ ██████╗ ███████╗██████╗\n██╔════╝██║  ██║██╔══██╗██╔══██╗██╔════╝██╔══██╗\n███████╗███████║███████║██║  ██║█████╗  ██████╔╝\n╚════██║██╔══██║██╔══██║██║  ██║██╔══╝  ██╔══██╗\n███████║██║  ██║██║  ██║██████╔╝███████╗██║  ██║\n╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝ ╚══════╝╚═╝  ╚═╝\n*/\nexport function createProgram(gl, vertex, fragment) {\n    const program = gl.createProgram();\n    if (!program) {\n        throw new Error(\"Could not create Program\");\n    }\n    gl.attachShader(program, vertex);\n    gl.attachShader(program, fragment);\n    gl.linkProgram(program);\n    if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        return program;\n    }\n    const msg = gl.getProgramInfoLog(program);\n    gl.deleteProgram(program);\n    throw new Error(`Could not link shader program: ${msg}`);\n}\nexport function createShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    if (!shader) {\n        throw new Error(\"Could not create Shader\");\n    }\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        return shader;\n    }\n    const msg = gl.getShaderInfoLog(shader);\n    gl.deleteShader(shader);\n    const prettySource = source\n        .split(\"\\n\")\n        .map((l, i) => `${i + 1}: ${l}`)\n        .join(\"\\n\");\n    throw new Error(`Could not compile shader:\\n${msg}\\n${prettySource}`);\n}\nexport function createVertexArray(gl, buffers, elementBuffer) {\n    const vao = gl.createVertexArray();\n    if (!vao) {\n        throw new Error(\"Could not create Vertex Array Object\");\n    }\n    gl.bindVertexArray(vao);\n    buffers.forEach(({ type, buffer, bufferType, size, location, normalized = false, divisor, }) => {\n        // Enable sending attribute arrays for location\n        gl.enableVertexAttribArray(location);\n        // Send buffer\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        switch (type) {\n            case 0 /* POINTER */:\n                gl.vertexAttribPointer(location, size, bufferType, normalized, 0, 0);\n                break;\n            case 1 /* IPOINTER */:\n                gl.vertexAttribIPointer(location, size, bufferType, 0, 0);\n                break;\n            default: assert.never(type);\n        }\n        if (divisor) {\n            gl.vertexAttribDivisor(location, divisor);\n        }\n    });\n    if (elementBuffer) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    }\n    gl.bindVertexArray(null);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    return vao;\n}\n/*\n████████╗███████╗██╗  ██╗████████╗██╗   ██╗██████╗ ███████╗\n╚══██╔══╝██╔════╝╚██╗██╔╝╚══██╔══╝██║   ██║██╔══██╗██╔════╝\n   ██║   █████╗   ╚███╔╝    ██║   ██║   ██║██████╔╝█████╗\n   ██║   ██╔══╝   ██╔██╗    ██║   ██║   ██║██╔══██╗██╔══╝\n   ██║   ███████╗██╔╝ ██╗   ██║   ╚██████╔╝██║  ██║███████╗\n   ╚═╝   ╚══════╝╚═╝  ╚═╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚══════╝\n*/\nexport function createTexture(gl, data, width, height, internalFormat, format, type, wrapS, wrapT, min, mag, mipmap) {\n    const texture = gl.createTexture();\n    if (!texture) {\n        throw new Error(\"Could not create texture\");\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, internalFormat, width, height);\n    if (data) {\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, width, height, format, type, data);\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, min);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mag);\n    if (mipmap) {\n        gl.generateMipmap(gl.TEXTURE_2D);\n    }\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return texture;\n}\n//# sourceMappingURL=glutil.js.map","/**\n * Chacks whether array is at least 2d, mostly useful because of return type\n * predicate.\n */\nexport function is2DArray(array) {\n    return !!array.length || Array.isArray(array[0]);\n}\n/**\n * Flatten 2d array and compute its former shape.\n * eg.\n * ravel([\n *      [1, 2, 3],\n *      [4, 5, 6],\n * ])\n * produces {\n *      data: [1, 2, 3, 4, 5, 6],\n *      shape: [2, 3],\n * }\n */\nexport function ravel(unraveled) {\n    const outerShape = unraveled.length;\n    const innerShape = outerShape ? unraveled[0].length : 0;\n    const raveled = new Array(innerShape * outerShape);\n    unraveled.forEach((inner, i) => {\n        inner.forEach((elem, j) => {\n            raveled[innerShape * i + j] = elem;\n        });\n    });\n    return { data: raveled, shape: [outerShape, innerShape] };\n}\n//# sourceMappingURL=array.js.map","import * as assert from \"./assert\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nimport { VertexArray } from \"./vertex-array\";\nimport { Framebuffer } from \"./framebuffer\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nconst UNKNOWN_ATTRIB_LOCATION = -1;\nexport class Command {\n    constructor(gl, glProgram, glPrimitive, uniformDescrs, vertexArrayDescr, framebufferDescr, depthDescr, stencilDescr, blendDescr) {\n        this.gl = gl;\n        this.glProgram = glProgram;\n        this.glPrimitive = glPrimitive;\n        this.uniformDescrs = uniformDescrs;\n        this.vertexArrayDescr = vertexArrayDescr;\n        this.framebufferDescr = framebufferDescr;\n        this.depthDescr = depthDescr;\n        this.stencilDescr = stencilDescr;\n        this.blendDescr = blendDescr;\n    }\n    static create(dev, { vert, frag, uniforms = {}, data, framebuffer, primitive = \"triangles\" /* TRIANGLES */, depth, stencil, blend, }) {\n        assert.requireNonNull(vert, \"vert\");\n        assert.requireNonNull(frag, \"frag\");\n        assert.requireNonNull(data, \"data\");\n        if (depth) {\n            assert.requireNonNull(depth.func, \"depth.func\");\n        }\n        if (blend) {\n            assert.requireNonNull(blend.func, \"blend.func\");\n            assert.requireNonNull(blend.func.src, \"blend.func.src\");\n            assert.requireNonNull(blend.func.dst, \"blend.func.dst\");\n            if (typeof blend.func.src === \"object\") {\n                assert.requireNonNull(blend.func.src.rgb, \"blend.func.src.rgb\");\n                assert.requireNonNull(blend.func.src.alpha, \"blend.func.src.alpha\");\n            }\n            if (typeof blend.func.dst === \"object\") {\n                assert.requireNonNull(blend.func.dst.rgb, \"blend.func.dst.rgb\");\n                assert.requireNonNull(blend.func.dst.alpha, \"blend.func.dst.alpha\");\n            }\n        }\n        if (stencil) {\n            assert.requireNonNull(stencil.func, \"stencil.func\");\n            // TODO: complete stencil validation... validation framework?\n        }\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const vs = glutil.createShader(gl, gl.VERTEX_SHADER, vert);\n        const fs = glutil.createShader(gl, gl.FRAGMENT_SHADER, frag);\n        const prog = glutil.createProgram(gl, vs, fs);\n        gl.deleteShader(vs);\n        gl.deleteShader(fs);\n        const uniformDescrs = Object.entries(uniforms)\n            .map(([ident, uniform]) => {\n            const loc = gl.getUniformLocation(prog, ident);\n            if (!loc) {\n                throw new Error(`No location for uniform: ${ident}`);\n            }\n            return new UniformDescriptor(ident, loc, uniform);\n        });\n        const vertexArrayDescr = typeof data === \"function\"\n            || data instanceof VertexArray\n            ? data\n            : VertexArray.create(dev, locate(gl, prog, data));\n        const framebufferDescr = framebuffer\n            ? typeof framebuffer === \"function\"\n                || framebuffer instanceof Framebuffer\n                ? framebuffer\n                : Framebuffer.create(gl, framebuffer)\n            : undefined;\n        const depthDescr = parseDepth(gl, depth);\n        const stencilDescr = parseStencil(gl, stencil);\n        const blendDescr = parseBlend(gl, blend);\n        return new Command(gl, prog, mapGlPrimitive(gl, primitive), uniformDescrs, vertexArrayDescr, framebufferDescr, depthDescr, stencilDescr, blendDescr);\n    }\n    execute(props) {\n        const { gl, glProgram } = this;\n        gl.useProgram(glProgram);\n        this.beginDepth();\n        this.beginStencil();\n        this.beginBlend();\n        if (Array.isArray(props)) {\n            props.forEach((p, i) => this.executeInner(p, i));\n        }\n        else {\n            this.executeInner(props, 0);\n        }\n        // FBOs and VAOs are bound without unbinding in the inner loop\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindVertexArray(null);\n        this.endBlend();\n        this.endStencil();\n        this.endDepth();\n        gl.useProgram(null);\n    }\n    locate(vertexArrayProps) {\n        return locate(this.gl, this.glProgram, vertexArrayProps);\n    }\n    executeInner(props, index) {\n        const { gl, vertexArrayDescr, framebufferDescr } = this;\n        let bufferWidth = gl.drawingBufferWidth;\n        let bufferHeight = gl.drawingBufferHeight;\n        const fbo = framebufferDescr\n            ? access(props, index, framebufferDescr)\n            : undefined;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n            gl.drawBuffers(fbo.glColorAttachments);\n            bufferWidth = fbo.width;\n            bufferHeight = fbo.height;\n        }\n        gl.viewport(0, 0, bufferWidth, bufferHeight);\n        this.updateUniforms(props, index);\n        const vao = access(props, index, vertexArrayDescr);\n        gl.bindVertexArray(vao.glVertexArrayObject);\n        if (vao.hasElements) {\n            this.drawElements(vao.count, vao.instanceCount);\n        }\n        else {\n            this.drawArrays(vao.count, vao.instanceCount);\n        }\n    }\n    beginDepth() {\n        const { gl, depthDescr } = this;\n        if (depthDescr) {\n            gl.enable(gl.DEPTH_TEST);\n            gl.depthFunc(depthDescr.func);\n            gl.depthMask(depthDescr.mask);\n            gl.depthRange(depthDescr.rangeStart, depthDescr.rangeEnd);\n        }\n    }\n    endDepth() {\n        const { gl, depthDescr } = this;\n        if (depthDescr) {\n            gl.disable(gl.DEPTH_TEST);\n        }\n    }\n    beginStencil() {\n        const { gl, stencilDescr } = this;\n        if (stencilDescr) {\n            const { fFunc, bFunc, fFuncRef, bfuncRef, fFuncMask, bFuncMask, fMask, bMask, fOpFail, bOpFail, fOpZFail, bOpZFail, fOpZPass, bOpZPass, } = stencilDescr;\n            gl.enable(gl.STENCIL_TEST);\n            gl.stencilFuncSeparate(gl.FRONT, fFunc, fFuncRef, fFuncMask);\n            gl.stencilFuncSeparate(gl.BACK, bFunc, bfuncRef, bFuncMask);\n            gl.stencilMaskSeparate(gl.FRONT, fMask);\n            gl.stencilMaskSeparate(gl.BACK, bMask);\n            gl.stencilOpSeparate(gl.FRONT, fOpFail, fOpZFail, fOpZPass);\n            gl.stencilOpSeparate(gl.BACK, bOpFail, bOpZFail, bOpZPass);\n        }\n    }\n    endStencil() {\n        const { gl, stencilDescr } = this;\n        if (stencilDescr) {\n            gl.disable(gl.STENCIL_TEST);\n        }\n    }\n    beginBlend() {\n        const { gl, blendDescr } = this;\n        if (blendDescr) {\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(blendDescr.srcRGB, blendDescr.dstRGB, blendDescr.srcAlpha, blendDescr.dstAlpha);\n            gl.blendEquationSeparate(blendDescr.equationRGB, blendDescr.equationAlpha);\n            if (blendDescr.color) {\n                const [r, g, b, a] = blendDescr.color;\n                gl.blendColor(r, g, b, a);\n            }\n        }\n    }\n    endBlend() {\n        const { gl, blendDescr } = this;\n        if (blendDescr) {\n            gl.disable(gl.BLEND);\n        }\n    }\n    drawArrays(count, instCount) {\n        const { gl, glPrimitive } = this;\n        if (instCount) {\n            gl.drawArraysInstanced(glPrimitive, 0, count, instCount);\n        }\n        else {\n            gl.drawArrays(glPrimitive, 0, count);\n        }\n    }\n    drawElements(count, instCount) {\n        const { gl, glPrimitive } = this;\n        if (instCount) {\n            gl.drawElementsInstanced(glPrimitive, count, gl.UNSIGNED_INT, // We only support u32 indices\n            0, instCount);\n        }\n        else {\n            gl.drawElements(glPrimitive, count, gl.UNSIGNED_INT, // We only support u32 indices\n            0);\n        }\n    }\n    updateUniforms(props, index) {\n        const gl = this.gl;\n        let textureUnitOffset = 0;\n        this.uniformDescrs.forEach(({ identifier: ident, location: loc, definition: def, }) => {\n            switch (def.type) {\n                case \"1f\":\n                    gl.uniform1f(loc, access(props, index, def.value));\n                    break;\n                case \"1fv\":\n                    gl.uniform1fv(loc, access(props, index, def.value));\n                    break;\n                case \"1i\":\n                    gl.uniform1i(loc, access(props, index, def.value));\n                    break;\n                case \"1iv\":\n                    gl.uniform1iv(loc, access(props, index, def.value));\n                    break;\n                case \"1ui\":\n                    gl.uniform1ui(loc, access(props, index, def.value));\n                    break;\n                case \"1uiv\":\n                    gl.uniform1uiv(loc, access(props, index, def.value));\n                    break;\n                case \"2f\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2f(loc, x, y);\n                    break;\n                }\n                case \"2fv\":\n                    gl.uniform2fv(loc, access(props, index, def.value));\n                    break;\n                case \"2i\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2i(loc, x, y);\n                    break;\n                }\n                case \"2iv\":\n                    gl.uniform2iv(loc, access(props, index, def.value));\n                    break;\n                case \"2ui\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2ui(loc, x, y);\n                    break;\n                }\n                case \"2uiv\":\n                    gl.uniform2uiv(loc, access(props, index, def.value));\n                    break;\n                case \"3f\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3f(loc, x, y, z);\n                    break;\n                }\n                case \"3fv\":\n                    gl.uniform3fv(loc, access(props, index, def.value));\n                    break;\n                case \"3i\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3i(loc, x, y, z);\n                    break;\n                }\n                case \"3iv\":\n                    gl.uniform3iv(loc, access(props, index, def.value));\n                    break;\n                case \"3ui\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3ui(loc, x, y, z);\n                    break;\n                }\n                case \"3uiv\":\n                    gl.uniform3uiv(loc, access(props, index, def.value));\n                    break;\n                case \"4f\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4f(loc, x, y, z, w);\n                    break;\n                }\n                case \"4fv\":\n                    gl.uniform4fv(loc, access(props, index, def.value));\n                    break;\n                case \"4i\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4i(loc, x, y, z, w);\n                    break;\n                }\n                case \"4iv\":\n                    gl.uniform4iv(loc, access(props, index, def.value));\n                    break;\n                case \"4ui\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4ui(loc, x, y, z, w);\n                    break;\n                }\n                case \"4uiv\":\n                    gl.uniform4uiv(loc, access(props, index, def.value));\n                    break;\n                case \"matrix2fv\":\n                    gl.uniformMatrix2fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix3fv\":\n                    gl.uniformMatrix3fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix4fv\":\n                    gl.uniformMatrix4fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"texture\":\n                    // TODO: is this the best way? (is it fast? can we cache?)\n                    const texture = access(props, index, def.value);\n                    const currentTexture = textureUnitOffset++;\n                    gl.activeTexture(gl.TEXTURE0 + currentTexture);\n                    gl.bindTexture(gl.TEXTURE_2D, texture.glTexture);\n                    gl.uniform1i(loc, currentTexture);\n                    break;\n                default:\n                    assert.never(def, `Unknown uniform type: (${ident})`);\n                    break;\n            }\n        });\n    }\n}\nfunction locate(gl, glProgram, { attributes, elements }) {\n    const locatedAttributes = Object.entries(attributes)\n        .reduce((accum, [identifier, definition]) => {\n        if (INT_PATTERN.test(identifier)) {\n            accum[identifier] = definition;\n        }\n        else {\n            const location = gl.getAttribLocation(glProgram, identifier);\n            if (location === UNKNOWN_ATTRIB_LOCATION) {\n                throw new Error(`No location for attrib: ${identifier}`);\n            }\n            accum[location] = definition;\n        }\n        return accum;\n    }, {});\n    return { attributes: locatedAttributes, elements };\n}\nfunction access(props, index, value) {\n    return typeof value === \"function\" ? value(props, index) : value;\n}\nclass DepthDescriptor {\n    constructor(func, mask, rangeStart, rangeEnd) {\n        this.func = func;\n        this.mask = mask;\n        this.rangeStart = rangeStart;\n        this.rangeEnd = rangeEnd;\n    }\n}\nclass StencilDescriptor {\n    constructor(fFunc, bFunc, fFuncRef, bfuncRef, fFuncMask, bFuncMask, fMask, bMask, fOpFail, bOpFail, fOpZFail, bOpZFail, fOpZPass, bOpZPass) {\n        this.fFunc = fFunc;\n        this.bFunc = bFunc;\n        this.fFuncRef = fFuncRef;\n        this.bfuncRef = bfuncRef;\n        this.fFuncMask = fFuncMask;\n        this.bFuncMask = bFuncMask;\n        this.fMask = fMask;\n        this.bMask = bMask;\n        this.fOpFail = fOpFail;\n        this.bOpFail = bOpFail;\n        this.fOpZFail = fOpZFail;\n        this.bOpZFail = bOpZFail;\n        this.fOpZPass = fOpZPass;\n        this.bOpZPass = bOpZPass;\n    }\n}\nclass BlendDescriptor {\n    constructor(srcRGB, srcAlpha, dstRGB, dstAlpha, equationRGB, equationAlpha, color) {\n        this.srcRGB = srcRGB;\n        this.srcAlpha = srcAlpha;\n        this.dstRGB = dstRGB;\n        this.dstAlpha = dstAlpha;\n        this.equationRGB = equationRGB;\n        this.equationAlpha = equationAlpha;\n        this.color = color;\n    }\n}\nclass UniformDescriptor {\n    constructor(identifier, location, definition) {\n        this.identifier = identifier;\n        this.location = location;\n        this.definition = definition;\n    }\n}\nfunction mapGlPrimitive(gl, primitive) {\n    switch (primitive) {\n        case \"triangles\" /* TRIANGLES */: return gl.TRIANGLES;\n        case \"triangle-strip\" /* TRIANGLE_STRIP */: return gl.TRIANGLE_STRIP;\n        case \"triangle-fan\" /* TRIANGLE_FAN */: return gl.TRIANGLE_FAN;\n        case \"points\" /* POINTS */: return gl.POINTS;\n        case \"lines\" /* LINES */: return gl.LINES;\n        case \"line-strip\" /* LINE_STRIP */: return gl.LINE_STRIP;\n        case \"line-loop\" /* LINE_LOOP */: return gl.LINE_LOOP;\n        default: return assert.never(primitive);\n    }\n}\nfunction mapGlDepthOrStencilFunc(gl, func) {\n    switch (func) {\n        case \"always\" /* ALWAYS */: return gl.ALWAYS;\n        case \"never\" /* NEVER */: return gl.NEVER;\n        case \"equal\" /* EQUAL */: return gl.EQUAL;\n        case \"notequal\" /* NOTEQUAL */: return gl.NOTEQUAL;\n        case \"less\" /* LESS */: return gl.LESS;\n        case \"lequal\" /* LEQUAL */: return gl.LEQUAL;\n        case \"greater\" /* GREATER */: return gl.GREATER;\n        case \"gequal\" /* GEQUAL */: return gl.GEQUAL;\n        default: return assert.never(func);\n    }\n}\nfunction mapGlStencilOp(gl, op) {\n    switch (op) {\n        case \"keep\" /* KEEP */: return gl.KEEP;\n        case \"zero\" /* ZERO */: return gl.ZERO;\n        case \"replace\" /* REPLACE */: return gl.REPLACE;\n        case \"incr\" /* INCR */: return gl.INCR;\n        case \"incr-wrap\" /* INCR_WRAP */: return gl.INCR_WRAP;\n        case \"decr\" /* DECR */: return gl.DECR;\n        case \"decr-wrap\" /* DECR_WRAP */: return gl.DECR_WRAP;\n        case \"invert\" /* INVERT */: return gl.INVERT;\n        default: return assert.never(op);\n    }\n}\nfunction mapGlBlendFunc(gl, func) {\n    switch (func) {\n        case \"zero\" /* ZERO */: return gl.ZERO;\n        case \"one\" /* ONE */: return gl.ONE;\n        case \"src-color\" /* SRC_COLOR */: return gl.SRC_COLOR;\n        case \"src-alpha\" /* SRC_ALPHA */: return gl.SRC_ALPHA;\n        case \"one-minus-src-color\" /* ONE_MINUS_SRC_COLOR */: return gl.ONE_MINUS_SRC_COLOR;\n        case \"one-minus-src-alpha\" /* ONE_MINUS_SRC_ALPHA */: return gl.ONE_MINUS_SRC_ALPHA;\n        case \"dst-color\" /* DST_COLOR */: return gl.DST_COLOR;\n        case \"dst-alpha\" /* DST_ALPHA */: return gl.DST_ALPHA;\n        case \"one-minus-dst-color\" /* ONE_MINUS_DST_COLOR */: return gl.ONE_MINUS_DST_COLOR;\n        case \"one-minus-dst-alpha\" /* ONE_MINUS_DST_ALPHA */: return gl.ONE_MINUS_DST_ALPHA;\n        case \"constant-color\" /* CONSTANT_COLOR */: return gl.CONSTANT_COLOR;\n        case \"constant-alpha\" /* CONSTANT_ALPHA */: return gl.CONSTANT_ALPHA;\n        case \"one-minus-constant-color\" /* ONE_MINUS_CONSTANT_COLOR */: return gl.ONE_MINUS_CONSTANT_COLOR;\n        case \"one-minus-constant-alpha\" /* ONE_MINUS_CONSTANT_ALPHA */: return gl.ONE_MINUS_CONSTANT_ALPHA;\n        default: return assert.never(func);\n    }\n}\nfunction mapGlBlendEquation(gl, equation) {\n    switch (equation) {\n        case \"add\" /* ADD */: return gl.FUNC_ADD;\n        case \"subtract\" /* SUBTRACT */: return gl.FUNC_SUBTRACT;\n        case \"reverse-subtract\" /* REVERSE_SUBTRACT */: return gl.FUNC_REVERSE_SUBTRACT;\n        case \"min\" /* MIN */: return gl.MIN;\n        case \"max\" /* MAX */: return gl.MAX;\n        default: return assert.never(equation);\n    }\n}\nfunction parseDepth(gl, depth) {\n    if (!depth) {\n        return undefined;\n    }\n    return new DepthDescriptor(mapGlDepthOrStencilFunc(gl, depth.func || \"less\" /* LESS */), typeof depth.mask === \"boolean\" ? depth.mask : true, depth.range ? depth.range[0] : 0, depth.range ? depth.range[1] : 1);\n}\nfunction parseStencil(gl, stencil) {\n    if (!stencil) {\n        return undefined;\n    }\n    return new StencilDescriptor(mapGlDepthOrStencilFunc(gl, typeof stencil.func.func === \"object\"\n        ? stencil.func.func.front\n        : stencil.func.func), mapGlDepthOrStencilFunc(gl, typeof stencil.func.func === \"object\"\n        ? stencil.func.func.back\n        : stencil.func.func), typeof stencil.func.ref !== \"undefined\"\n        ? typeof stencil.func.ref === \"object\"\n            ? stencil.func.ref.front\n            : stencil.func.ref\n        : 1, typeof stencil.func.ref !== \"undefined\"\n        ? typeof stencil.func.ref === \"object\"\n            ? stencil.func.ref.back\n            : stencil.func.ref\n        : 1, typeof stencil.func.mask !== \"undefined\"\n        ? typeof stencil.func.mask === \"object\"\n            ? stencil.func.mask.front\n            : stencil.func.mask\n        : 0xFF, typeof stencil.func.mask !== \"undefined\"\n        ? typeof stencil.func.mask === \"object\"\n            ? stencil.func.mask.back\n            : stencil.func.mask\n        : 0xFF, typeof stencil.mask !== \"undefined\"\n        ? typeof stencil.mask === \"object\"\n            ? stencil.mask.front\n            : stencil.mask\n        : 0xFF, typeof stencil.mask !== \"undefined\"\n        ? typeof stencil.mask === \"object\"\n            ? stencil.mask.back\n            : stencil.mask\n        : 0xFF, mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.fail === \"object\"\n            ? stencil.op.fail.front\n            : stencil.op.fail\n        : \"keep\" /* KEEP */), mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.fail === \"object\"\n            ? stencil.op.fail.back\n            : stencil.op.fail\n        : \"keep\" /* KEEP */), mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.zfail === \"object\"\n            ? stencil.op.zfail.front\n            : stencil.op.zfail\n        : \"keep\" /* KEEP */), mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.zfail === \"object\"\n            ? stencil.op.zfail.back\n            : stencil.op.zfail\n        : \"keep\" /* KEEP */), mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.zpass === \"object\"\n            ? stencil.op.zpass.front\n            : stencil.op.zpass\n        : \"keep\" /* KEEP */), mapGlStencilOp(gl, stencil.op\n        ? typeof stencil.op.zpass === \"object\"\n            ? stencil.op.zpass.back\n            : stencil.op.zpass\n        : \"keep\" /* KEEP */));\n}\nfunction parseBlend(gl, blend) {\n    if (!blend) {\n        return undefined;\n    }\n    return new BlendDescriptor(mapGlBlendFunc(gl, typeof blend.func.src === \"object\"\n        ? blend.func.src.rgb\n        : blend.func.src), mapGlBlendFunc(gl, typeof blend.func.src === \"object\"\n        ? blend.func.src.alpha\n        : blend.func.src), mapGlBlendFunc(gl, typeof blend.func.dst === \"object\"\n        ? blend.func.dst.rgb\n        : blend.func.dst), mapGlBlendFunc(gl, typeof blend.func.dst === \"object\"\n        ? blend.func.dst.alpha\n        : blend.func.dst), mapGlBlendEquation(gl, blend.equation\n        ? typeof blend.equation === \"object\"\n            ? blend.equation.rgb\n            : blend.equation\n        : \"add\" /* ADD */), mapGlBlendEquation(gl, blend.equation\n        ? typeof blend.equation === \"object\"\n            ? blend.equation.alpha\n            : blend.equation\n        : \"add\" /* ADD */), blend.color);\n}\n//# sourceMappingURL=command.js.map","import * as assert from \"./assert\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nexport class Texture {\n    constructor(glTexture, width, height) {\n        this.glTexture = glTexture;\n        this.width = width;\n        this.height = height;\n    }\n    static fromImage(dev, image, options) {\n        return Texture.fromRGBA8(dev, image.data, image.width, image.height, options);\n    }\n    static fromRGBA8(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Uint8Array\n            ? data\n            // Note: we also have to convert Uint8ClampedArray to Uint8Array\n            // because of webgl bug\n            // https://github.com/KhronosGroup/WebGL/issues/1533\n            : new Uint8Array(data), width, height, \"RGBA8\" /* RGBA8 */, \"RGBA\" /* RGBA */, \"UNSIGNED_BYTE\" /* UNSIGNED_BYTE */, options);\n    }\n    static fromRG16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RG16F\" /* RG16F */, \"RG\" /* RG */, \"FLOAT\" /* FLOAT */, options);\n    }\n    static fromRGB16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGB16F\" /* RGB16F */, \"RGB\" /* RGB */, \"FLOAT\" /* FLOAT */, options);\n    }\n    static fromRGBA16F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGBA16F\" /* RGBA16F */, \"RGBA\" /* RGBA */, \"FLOAT\" /* FLOAT */, options);\n    }\n    static fromRGB32F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGB32F\" /* RGB32F */, \"RGB\" /* RGB */, \"FLOAT\" /* FLOAT */, options);\n    }\n    static fromRGBA32F(dev, data, width, height, options) {\n        return Texture.fromArrayBufferView(dev, !data || data instanceof Float32Array\n            ? data\n            : new Float32Array(data), width, height, \"RGBA32F\" /* RGBA32F */, \"RGBA\" /* RGBA */, \"FLOAT\" /* FLOAT */, options);\n    }\n    static fromArrayBufferView(dev, data, width, height, internalFormat, format, type, { min = \"nearest\" /* NEAREST */, mag = \"nearest\" /* NEAREST */, wrapS = \"clamp-to-edge\" /* CLAMP_TO_EDGE */, wrapT = \"clamp-to-edge\" /* CLAMP_TO_EDGE */, mipmap = false, } = {}) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new Texture(glutil.createTexture(gl, data, width, height, mapGlTextureInternalFormat(gl, internalFormat), mapGlTextureFormat(gl, format), mapGlTextureType(gl, type), mapGlTextureWrap(gl, wrapS), mapGlTextureWrap(gl, wrapT), mapGlTextureFilter(gl, min), mapGlTextureFilter(gl, mag), mipmap), width, height);\n    }\n}\nfunction mapGlTextureWrap(gl, wrap) {\n    switch (wrap) {\n        case \"clamp-to-edge\" /* CLAMP_TO_EDGE */: return gl.CLAMP_TO_EDGE;\n        case \"repeat\" /* REPEAT */: return gl.REPEAT;\n        case \"mirrored-repeat\" /* MIRRORED_REPEAT */: return gl.MIRRORED_REPEAT;\n        default: return assert.never(wrap);\n    }\n}\nfunction mapGlTextureFilter(gl, filter) {\n    switch (filter) {\n        case \"nearest\" /* NEAREST */: return gl.NEAREST;\n        case \"linear\" /* LINEAR */: return gl.LINEAR;\n        case \"nearest-mipmap-nearest\" /* NEAREST_MIPMAP_NEAREST */:\n            return gl.NEAREST_MIPMAP_NEAREST;\n        case \"linear-mipmap-nearest\" /* LINEAR_MIPMAP_NEAREST */:\n            return gl.LINEAR_MIPMAP_NEAREST;\n        case \"nearest-mipmap-linear\" /* NEAREST_MIPMAP_LINEAR */:\n            return gl.NEAREST_MIPMAP_LINEAR;\n        case \"linear-mipmap-linear\" /* LINEAR_MIPMAP_LINEAR */:\n            return gl.LINEAR_MIPMAP_LINEAR;\n        default: return assert.never(filter);\n    }\n}\nfunction mapGlTextureInternalFormat(gl, internalFormat) {\n    switch (internalFormat) {\n        // R\n        case \"R8\" /* R8 */: return gl.R8;\n        case \"R8_SNORM\" /* R8_SNORM */: return gl.R8_SNORM;\n        case \"R8UI\" /* R8UI */: return gl.R8UI;\n        case \"R8I\" /* R8I */: return gl.R8I;\n        case \"R16UI\" /* R16UI */: return gl.R16UI;\n        case \"R16I\" /* R16I */: return gl.R16I;\n        case \"R32UI\" /* R32UI */: return gl.R32UI;\n        case \"R32I\" /* R32I */: return gl.R32I;\n        case \"R16F\" /* R16F */: return gl.R16I;\n        case \"R32F\" /* R32F */: return gl.R32F;\n        // RG\n        case \"RG8\" /* RG8 */: return gl.RG8;\n        case \"RG8_SNORM\" /* RG8_SNORM */: return gl.RG8_SNORM;\n        case \"RG8UI\" /* RG8UI */: return gl.RG8UI;\n        case \"RG8I\" /* RG8I */: return gl.RG8I;\n        case \"RG16UI\" /* RG16UI */: return gl.RG16UI;\n        case \"RG16I\" /* RG16I */: return gl.RG16I;\n        case \"RG32UI\" /* RG32UI */: return gl.RG32UI;\n        case \"RG32I\" /* RG32I */: return gl.RG32I;\n        case \"RG16F\" /* RG16F */: return gl.RG16F;\n        case \"RG32F\" /* RG32F */: return gl.RG32F;\n        // RGB\n        case \"RGB8\" /* RGB8 */: return gl.RGB8;\n        case \"RGB8_SNORM\" /* RGB8_SNORM */: return gl.RGB8_SNORM;\n        case \"RGB8UI\" /* RGB8UI */: return gl.RGB8UI;\n        case \"RGB8I\" /* RGB8I */: return gl.RGB8I;\n        case \"RGB16UI\" /* RGB16UI */: return gl.RGB16UI;\n        case \"RGB16I\" /* RGB16I */: return gl.RGB16I;\n        case \"RGB32UI\" /* RGB32UI */: return gl.RGB32UI;\n        case \"RGB32I\" /* RGB32I */: return gl.RGB32I;\n        case \"RGB16F\" /* RGB16F */: return gl.RGB16F;\n        case \"RGB32F\" /* RGB32F */: return gl.RGB32F;\n        // RGBA\n        case \"RGBA8\" /* RGBA8 */: return gl.RGBA8;\n        case \"RGBA8_SNORM\" /* RGBA8_SNORM */: return gl.RGBA8_SNORM;\n        case \"RGBA8UI\" /* RGBA8UI */: return gl.RGBA8UI;\n        case \"RGBA8I\" /* RGBA8I */: return gl.RGBA8I;\n        case \"RGBA16UI\" /* RGBA16UI */: return gl.RGBA16UI;\n        case \"RGBA16I\" /* RGBA16I */: return gl.RGBA16I;\n        case \"RGBA32UI\" /* RGBA32UI */: return gl.RGBA32UI;\n        case \"RGBA32I\" /* RGBA32I */: return gl.RGBA32I;\n        case \"RGBA16F\" /* RGBA16F */: return gl.RGBA16F;\n        case \"RGBA32F\" /* RGBA32F */: return gl.RGBA32F;\n        default: return assert.never(internalFormat);\n    }\n}\nfunction mapGlTextureFormat(gl, format) {\n    switch (format) {\n        case \"RED\" /* RED */: return gl.RED;\n        case \"RG\" /* RG */: return gl.RG;\n        case \"RGB\" /* RGB */: return gl.RGB;\n        case \"RGBA\" /* RGBA */: return gl.RGBA;\n        case \"RED_INTEGER\" /* RED_INTEGER */: return gl.RED_INTEGER;\n        case \"RG_INTEGER\" /* RG_INTEGER */: return gl.RG_INTEGER;\n        case \"RGB_INTEGER\" /* RGB_INTEGER */: return gl.RGB_INTEGER;\n        case \"RGBA_INTEGER\" /* RGBA_INTEGER */: return gl.RGBA_INTEGER;\n        default: return assert.never(format);\n    }\n}\nfunction mapGlTextureType(gl, type) {\n    switch (type) {\n        case \"UNSIGNED_BYTE\" /* UNSIGNED_BYTE */: return gl.UNSIGNED_BYTE;\n        case \"UNSIGNED_SHORT\" /* UNSIGNED_SHORT */: return gl.UNSIGNED_SHORT;\n        case \"UNSIGNED_INT\" /* UNSIGNED_INT */: return gl.UNSIGNED_INT;\n        case \"BYTE\" /* BYTE */: return gl.BYTE;\n        case \"SHORT\" /* SHORT */: return gl.SHORT;\n        case \"INT\" /* INT */: return gl.INT;\n        case \"FLOAT\" /* FLOAT */: return gl.FLOAT;\n    }\n}\n//# sourceMappingURL=texture.js.map","export class Device {\n    constructor(gl, canvas, explicitPixelRatio, explicitViewport) {\n        this.gl = gl;\n        this.canvas = canvas;\n        this.explicitPixelRatio = explicitPixelRatio;\n        this.explicitViewport = explicitViewport;\n    }\n    static mount(element = document.body, options) {\n        if (element instanceof HTMLCanvasElement) {\n            return Device.fromCanvas(element, options);\n        }\n        const canvas = document.createElement(\"canvas\");\n        element.appendChild(canvas);\n        return Device.fromCanvas(canvas, options);\n    }\n    static fromCanvas(canvas, options = {}) {\n        const { antialias = true, alpha = true, depth = true, stencil = true, preserveDrawingBuffer = false, } = options.context || {};\n        const gl = canvas.getContext(\"webgl2\", {\n            antialias,\n            alpha,\n            depth,\n            stencil,\n            preserveDrawingBuffer,\n        });\n        if (!gl) {\n            throw new Error(\"Could not get webgl2 context\");\n        }\n        return Device.fromContext(gl, options);\n    }\n    static fromContext(gl, { pixelRatio, viewport, extensions, } = {}) {\n        if (extensions) {\n            extensions.forEach(ext => {\n                if (!gl.getExtension(ext)) {\n                    throw new Error(`Could not get extension ${ext}`);\n                }\n            });\n        }\n        const dev = new Device(gl, gl.canvas, pixelRatio, viewport);\n        dev.update();\n        return dev;\n    }\n    get bufferWidth() {\n        return this.gl.drawingBufferWidth;\n    }\n    get bufferHeight() {\n        return this.gl.drawingBufferHeight;\n    }\n    get canvasWidth() {\n        return this.canvas.width;\n    }\n    get canvasHeight() {\n        return this.canvas.height;\n    }\n    get canvasCSSWidth() {\n        return this.canvas.clientWidth;\n    }\n    get canvasCSSHeight() {\n        return this.canvas.clientHeight;\n    }\n    get pixelRatio() {\n        return this.explicitPixelRatio || window.devicePixelRatio;\n    }\n    update() {\n        const dpr = this.pixelRatio;\n        const canvas = this.canvas;\n        const width = this.explicitViewport\n            && this.explicitViewport[0]\n            || canvas.clientWidth * dpr;\n        const height = this.explicitViewport\n            && this.explicitViewport[1]\n            || canvas.clientHeight * dpr;\n        if (width !== canvas.width) {\n            canvas.width = width;\n        }\n        if (height !== canvas.height) {\n            canvas.height = height;\n        }\n    }\n    clearColorBuffer(r, g, b, a, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearDepthBuffer(depth, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearDepth(depth);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearStencilBuffer(stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearStencil(stencil);\n        gl.clear(gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearColorAndDepthBuffers(r, g, b, a, depth, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearDepthAndStencilBuffers(depth, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearDepth(depth);\n        gl.clearStencil(stencil);\n        gl.clear(gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clearColorAndStencilBuffers(r, g, b, a, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearStencil(stencil);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n    clear(r, g, b, a, depth, stencil, fbo) {\n        const gl = this.gl;\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.glFramebuffer);\n        }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clearStencil(stencil);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        if (fbo) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n    }\n}\n//# sourceMappingURL=device.js.map","import * as assert from \"./assert\";\nimport { Device } from \"./device\";\nexport class VertexBuffer {\n    constructor(gl, type, data, glType) {\n        this.gl = gl;\n        this.type = type;\n        this.data = data;\n        this.glType = glType;\n        this.glBuffer = null;\n        this.init();\n    }\n    static create(dev, props) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        switch (props.type) {\n            case \"i8\": return VertexBuffer.fromInt8Array(gl, props.data);\n            case \"i16\": return VertexBuffer.fromInt16Array(gl, props.data);\n            case \"i32\": return VertexBuffer.fromInt32Array(gl, props.data);\n            case \"u8\": return VertexBuffer.fromUint8Array(gl, props.data);\n            case \"u16\": return VertexBuffer.fromUint16Array(gl, props.data);\n            case \"u32\": return VertexBuffer.fromUint32Array(gl, props.data);\n            case \"f32\": return VertexBuffer.fromFloat32Array(gl, props.data);\n            default: return assert.never(props);\n        }\n    }\n    static fromInt8Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"i8\", data instanceof Int8Array ? data : new Int8Array(data), gl.BYTE);\n    }\n    static fromInt16Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"i16\", data instanceof Int16Array ? data : new Int16Array(data), gl.SHORT);\n    }\n    static fromInt32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"i32\", data instanceof Int32Array ? data : new Int32Array(data), gl.INT);\n    }\n    static fromUint8Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"u8\", \n        // Note: we also have to convert Uint8ClampedArray to Uint8Array\n        // because of webgl bug\n        // https://github.com/KhronosGroup/WebGL/issues/1533\n        data instanceof Uint8Array ? data : new Uint8Array(data), gl.UNSIGNED_BYTE);\n    }\n    static fromUint16Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"u16\", data instanceof Uint16Array ? data : new Uint16Array(data), gl.UNSIGNED_SHORT);\n    }\n    static fromUint32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"u32\", data instanceof Uint32Array ? data : new Uint32Array(data), gl.UNSIGNED_INT);\n    }\n    static fromFloat32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        return new VertexBuffer(gl, \"f32\", data instanceof Float32Array ? data : new Float32Array(data), gl.FLOAT);\n    }\n    init() {\n        const { gl, data } = this;\n        const buffer = gl.createBuffer();\n        if (buffer) {\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n            gl.bindBuffer(gl.ARRAY_BUFFER, null);\n            this.glBuffer = buffer;\n        }\n    }\n    restore() {\n        if (!this.glBuffer) {\n            this.init();\n        }\n    }\n}\n//# sourceMappingURL=vertex-buffer.js.map","import * as array from \"./array\";\nimport { Device } from \"./device\";\nexport class ElementBuffer {\n    static create(dev, props) {\n        return Array.isArray(props)\n            ? ElementBuffer.fromArray(dev, props)\n            : ElementBuffer.fromUint32Array(dev, props.data);\n    }\n    static fromArray(dev, data) {\n        return ElementBuffer.fromUint32Array(dev, array.is2DArray(data)\n            ? array.ravel(data).data\n            : data);\n    }\n    static fromUint32Array(dev, data) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const arr = Array.isArray(data) ? new Uint32Array(data) : data;\n        return new ElementBuffer(gl, arr);\n    }\n    constructor(gl, data) {\n        this.gl = gl;\n        this.data = data;\n        this.glBuffer = null;\n        this.init();\n    }\n    get count() {\n        return this.data.length;\n    }\n    init() {\n        const { gl, data } = this;\n        const buffer = gl.createBuffer();\n        if (buffer) {\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n            this.glBuffer = buffer;\n        }\n    }\n    restore() {\n        if (!this.glBuffer) {\n            this.init();\n        }\n    }\n}\n//# sourceMappingURL=element-buffer.js.map","import * as assert from \"./assert\";\nimport * as array from \"./array\";\nimport * as glutil from \"./glutil\";\nimport { Device } from \"./device\";\nimport { VertexBuffer, } from \"./vertex-buffer\";\nimport { ElementBuffer, } from \"./element-buffer\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nexport class VertexArray {\n    constructor(glVertexArrayObject, hasElements, count, // Either count of vertex data or of elements\n        instanceCount) {\n        this.glVertexArrayObject = glVertexArrayObject;\n        this.hasElements = hasElements;\n        this.count = count;\n        this.instanceCount = instanceCount;\n    }\n    static create(dev, { attributes, elements }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        // Setup attributes\n        const attribDescriptors = [];\n        const attribLocations = [];\n        Object.entries(attributes).forEach(([locationStr, definition]) => {\n            if (!INT_PATTERN.test(locationStr)) {\n                throw new Error(\"Location not a number. Use Command#locate\");\n            }\n            const location = parseInt(locationStr, 10);\n            attribLocations.push(location);\n            attribDescriptors.push(AttributeDescriptor.create(gl, definition));\n        });\n        // Setup elements\n        let elems;\n        if (elements) {\n            elems = elements instanceof ElementBuffer\n                ? elements\n                : ElementBuffer.create(gl, elements);\n        }\n        // Create vertex array\n        const vao = glutil.createVertexArray(gl, attribDescriptors.map((attrib, i) => ({\n            type: attrib.type === \"ipointer\"\n                ? 1 /* IPOINTER */\n                : 0 /* POINTER */,\n            buffer: attrib.buffer.glBuffer,\n            bufferType: attrib.buffer.glType,\n            size: attrib.size,\n            location: attribLocations[i],\n            normalized: attrib.normalized,\n            divisor: attrib.divisor,\n        })), elems ? elems.glBuffer : undefined);\n        // Compute max safe instance count\n        const instancedBuffers = attribDescriptors\n            .filter(buffer => !!buffer.divisor);\n        const instanceCount = instancedBuffers.length\n            ? instancedBuffers\n                .map(b => b.count * b.divisor)\n                .reduce((min, curr) => Math.min(min, curr))\n            : 0;\n        // Create VAO\n        return new VertexArray(vao, !!elems, elems ? elems.count : attribDescriptors[0].count, instanceCount);\n    }\n}\n// TODO: this could use some further refactoring. Currently its just former\n// public API made private.\nclass AttributeDescriptor {\n    static create(gl, props) {\n        if (Array.isArray(props)) {\n            if (array.is2DArray(props)) {\n                const r = array.ravel(props);\n                return new AttributeDescriptor(\"pointer\", VertexBuffer.fromFloat32Array(gl, r.data), r.shape[0], r.shape[1], false, 0);\n            }\n            return new AttributeDescriptor(\"pointer\", VertexBuffer.fromFloat32Array(gl, props), props.length, 1, false, 0);\n        }\n        switch (props.type) {\n            case \"pointer\": return new AttributeDescriptor(props.type, props.value instanceof VertexBuffer\n                ? props.value\n                // Note: typescript is not smart enough to infer what we know\n                : VertexBuffer.create(gl, props.value), props.count, props.size, props.normalized || false, props.divisor || 0);\n            case \"ipointer\": return new AttributeDescriptor(props.type, props.value instanceof VertexBuffer\n                ? props.value\n                // Note: typescript is not smart enough to infer what we know\n                : VertexBuffer.create(gl, props.value), props.count, props.size, false, props.divisor || 0);\n            default: return assert.never(props);\n        }\n    }\n    constructor(type, buffer, count, size, normalized, divisor) {\n        this.type = type;\n        this.buffer = buffer;\n        this.count = count;\n        this.size = size;\n        this.normalized = normalized;\n        this.divisor = divisor;\n    }\n}\n//# sourceMappingURL=vertex-array.js.map","import * as assert from \"./assert\";\nimport { Device } from \"./device\";\nexport class Framebuffer {\n    constructor(glFramebuffer, glColorAttachments, width, height) {\n        this.glFramebuffer = glFramebuffer;\n        this.glColorAttachments = glColorAttachments;\n        this.width = width;\n        this.height = height;\n    }\n    static create(dev, { width, height, color, depth, stencil }) {\n        const gl = dev instanceof Device ? dev.gl : dev;\n        const fbo = gl.createFramebuffer();\n        if (!fbo) {\n            throw new Error(\"Could not create framebuffer\");\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n        const colorBuffers = Array.isArray(color) ? color : [color];\n        colorBuffers.forEach((buffer, i) => {\n            assert.equal(width, buffer.width);\n            assert.equal(height, buffer.height);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.TEXTURE_2D, buffer.glTexture, 0);\n        });\n        if (depth) {\n            assert.equal(width, depth.width);\n            assert.equal(height, depth.height);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depth, 0);\n        }\n        if (stencil) {\n            assert.equal(width, stencil.width);\n            assert.equal(height, stencil.height);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.STENCIL_ATTACHMENT, gl.TEXTURE_2D, stencil, 0);\n        }\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        if (status !== gl.FRAMEBUFFER_COMPLETE) {\n            gl.deleteFramebuffer(fbo);\n            throw new Error(\"Framebuffer not complete\");\n        }\n        return new Framebuffer(fbo, colorBuffers.map((_, i) => gl.COLOR_ATTACHMENT0 + i), width, height);\n    }\n}\n//# sourceMappingURL=framebuffer.js.map"],"names":["never","p","msg","Error","fmt","createProgram","gl","vertex","fragment","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","prettySource","split","map","l","i","join","createVertexArray","buffers","elementBuffer","vao","bindVertexArray","forEach","buffer","bufferType","size","location","normalized","divisor","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","vertexAttribIPointer","assert.never","vertexAttribDivisor","ELEMENT_ARRAY_BUFFER","createTexture","data","width","height","internalFormat","format","wrapS","wrapT","min","mag","mipmap","texture","bindTexture","TEXTURE_2D","texStorage2D","texSubImage2D","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","generateMipmap","is2DArray","array","length","Array","isArray","ravel","unraveled","outerShape","innerShape","raveled","inner","elem","j","shape","locate","glProgram","attributes","elements","Object","entries","reduce","accum","identifier","definition","INT_PATTERN","test","getAttribLocation","UNKNOWN_ATTRIB_LOCATION","access","props","index","value","mapGlPrimitive","primitive","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","POINTS","LINES","LINE_STRIP","LINE_LOOP","mapGlDepthOrStencilFunc","func","ALWAYS","NEVER","EQUAL","NOTEQUAL","LESS","LEQUAL","GREATER","GEQUAL","mapGlStencilOp","op","KEEP","ZERO","REPLACE","INCR","INCR_WRAP","DECR","DECR_WRAP","INVERT","mapGlBlendFunc","ONE","SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","DST_COLOR","DST_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_COLOR","ONE_MINUS_CONSTANT_ALPHA","mapGlBlendEquation","equation","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","parseDepth","depth","DepthDescriptor","mask","range","parseStencil","stencil","StencilDescriptor","front","back","ref","fail","zfail","zpass","parseBlend","blend","BlendDescriptor","src","rgb","alpha","dst","color","mapGlTextureWrap","wrap","CLAMP_TO_EDGE","REPEAT","MIRRORED_REPEAT","mapGlTextureFilter","filter","NEAREST","LINEAR","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","mapGlTextureInternalFormat","R8","R8_SNORM","R8UI","R8I","R16UI","R16I","R32UI","R32I","R32F","RG8","RG8_SNORM","RG8UI","RG8I","RG16UI","RG16I","RG32UI","RG32I","RG16F","RG32F","RGB8","RGB8_SNORM","RGB8UI","RGB8I","RGB16UI","RGB16I","RGB32UI","RGB32I","RGB16F","RGB32F","RGBA8","RGBA8_SNORM","RGBA8UI","RGBA8I","RGBA16UI","RGBA16I","RGBA32UI","RGBA32I","RGBA16F","RGBA32F","mapGlTextureFormat","RED","RG","RGB","RGBA","RED_INTEGER","RG_INTEGER","RGB_INTEGER","RGBA_INTEGER","mapGlTextureType","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","BYTE","SHORT","INT","FLOAT","Device","[object Object]","canvas","explicitPixelRatio","explicitViewport","this","element","document","body","options","HTMLCanvasElement","fromCanvas","createElement","appendChild","antialias","preserveDrawingBuffer","context","getContext","fromContext","pixelRatio","viewport","extensions","ext","getExtension","dev","update","bufferWidth","drawingBufferWidth","bufferHeight","drawingBufferHeight","canvasWidth","canvasHeight","canvasCSSWidth","clientWidth","canvasCSSHeight","clientHeight","window","devicePixelRatio","dpr","r","g","b","a","fbo","bindFramebuffer","FRAMEBUFFER","glFramebuffer","clearColor","clear","COLOR_BUFFER_BIT","clearDepth","DEPTH_BUFFER_BIT","clearStencil","STENCIL_BUFFER_BIT","VertexBuffer","glType","glBuffer","init","fromInt8Array","fromInt16Array","fromInt32Array","fromUint8Array","fromUint16Array","fromUint32Array","fromFloat32Array","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Float32Array","createBuffer","bufferData","STATIC_DRAW","ElementBuffer","fromArray","array.is2DArray","array.ravel","arr","count","VertexArray","glVertexArrayObject","hasElements","instanceCount","attribDescriptors","attribLocations","locationStr","parseInt","push","AttributeDescriptor","create","elems","glutil.createVertexArray","attrib","undefined","instancedBuffers","curr","Math","Framebuffer","glColorAttachments","createFramebuffer","colorBuffers","framebufferTexture2D","COLOR_ATTACHMENT0","glTexture","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","deleteFramebuffer","_","Command","glPrimitive","uniformDescrs","vertexArrayDescr","framebufferDescr","depthDescr","stencilDescr","blendDescr","vert","frag","uniforms","framebuffer","vs","glutil.createShader","VERTEX_SHADER","fs","FRAGMENT_SHADER","prog","glutil.createProgram","ident","uniform","loc","getUniformLocation","UniformDescriptor","useProgram","beginDepth","beginStencil","beginBlend","executeInner","endBlend","endStencil","endDepth","vertexArrayProps","drawBuffers","updateUniforms","drawElements","drawArrays","enable","DEPTH_TEST","depthFunc","depthMask","depthRange","rangeStart","rangeEnd","disable","fFunc","bFunc","fFuncRef","bfuncRef","fFuncMask","bFuncMask","fMask","bMask","fOpFail","bOpFail","fOpZFail","bOpZFail","fOpZPass","bOpZPass","STENCIL_TEST","stencilFuncSeparate","FRONT","BACK","stencilMaskSeparate","stencilOpSeparate","BLEND","blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","blendEquationSeparate","equationRGB","equationAlpha","blendColor","instCount","drawArraysInstanced","drawElementsInstanced","textureUnitOffset","def","uniform1f","uniform1fv","uniform1i","uniform1iv","uniform1ui","uniform1uiv","x","y","uniform2f","uniform2fv","uniform2i","uniform2iv","uniform2ui","uniform2uiv","z","uniform3f","uniform3fv","uniform3i","uniform3iv","uniform3ui","uniform3uiv","w","uniform4f","uniform4fv","uniform4i","uniform4iv","uniform4ui","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","currentTexture","activeTexture","TEXTURE0","Texture","image","fromRGBA8","fromArrayBufferView","glutil.createTexture"],"mappings":"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"}